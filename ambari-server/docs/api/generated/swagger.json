{
  "swagger" : "2.0",
  "info" : {
    "description" : "Ambari REST APIs has inherent support for querying, sorting and pagination",
    "version" : "v1",
    "title" : "Swagger spec for Ambari REST API",
    "license" : {
      "name" : "Apache License, Version 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "basePath" : "/api/v1",
  "tags" : [ {
    "name" : "Actions",
    "description" : "Endpoint for action definition specific operations"
  }, {
    "name" : "Alerts",
    "description" : "Endpoint for alert specific operations"
  }, {
    "name" : "Blueprints",
    "description" : "Endpoint for blueprint specific operations"
  }, {
    "name" : "Cluster Services",
    "description" : "Endpoint for service specific operations"
  }, {
    "name" : "Clusters",
    "description" : "Endpoint for cluster-specific operations"
  }, {
    "name" : "Config Groups",
    "description" : "Endpoint for config-group-specific operations"
  }, {
    "name" : "Configurations",
    "description" : "Endpoint for configuration-specific operations"
  }, {
    "name" : "Groups",
    "description" : "Endpoint for group specific operations"
  }, {
    "name" : "Host Components",
    "description" : "Endpoint for host component specific operations"
  }, {
    "name" : "Hosts",
    "description" : "Endpoint for host-specific operations"
  }, {
    "name" : "RequestSchedules",
    "description" : "Endpoint for request schedule specific operations"
  }, {
    "name" : "Requests",
    "description" : "Endpoint for request specific operations"
  }, {
    "name" : "Root Service Configurations",
    "description" : "Endpoint for Ambari root service component configuration related operations"
  }, {
    "name" : "Services",
    "description" : "Endpoint for querying root-level services, ie. Ambari Server and Ambari Agents"
  }, {
    "name" : "Settings",
    "description" : "Endpoint for settings-specific operations"
  }, {
    "name" : "Stacks",
    "description" : "Endpoint for stack specific operations"
  }, {
    "name" : "User Authentication Sources",
    "description" : "Endpoint for user specific authentication source operations"
  }, {
    "name" : "Users",
    "description" : "Endpoint for User specific operations"
  }, {
    "name" : "Views",
    "description" : "Endpoint for view specific operations"
  } ],
  "paths" : {
    "/actions" : {
      "get" : {
        "tags" : [ "Actions" ],
        "summary" : "Get all action definitions",
        "description" : "",
        "operationId" : "ActionService#getActionDefinitions",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Actions/action_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Actions/action_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActionResponseSwagger"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/actions/{actionName}" : {
      "get" : {
        "tags" : [ "Actions" ],
        "summary" : "Get the details of an action definition",
        "description" : "",
        "operationId" : "ActionService#getActionDefinition",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "actionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Actions/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ActionResponseSwagger"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Creates an action definition - Currently Not Supported",
        "description" : "",
        "operationId" : "ActionService#createActionDefinition",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "actionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionRequestSwagger"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Actions" ],
        "summary" : "Updates an action definition - Currently Not Supported",
        "description" : "",
        "operationId" : "ActionService#updateActionDefinition",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "actionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionRequestSwagger"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Actions" ],
        "summary" : "Deletes an action definition - Currently Not Supported",
        "description" : "",
        "operationId" : "ActionService#deleteActionDefinition",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "actionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/alert_targets" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Returns all alert targets",
        "description" : "",
        "operationId" : "getTargets",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "AlertTarget/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AlertTargetSwagger"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Alerts" ],
        "summary" : "Creates an alert target",
        "description" : "",
        "operationId" : "createTarget",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertTargetSwagger"
          }
        }, {
          "name" : "validate_config",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "overwrite_existing",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/alert_targets/{targetId}" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Returns a single alert target",
        "description" : "",
        "operationId" : "getTarget",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "description" : "alert target id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "AlertTarget/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/AlertTargetSwagger"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Alerts" ],
        "summary" : "Updates an alert target",
        "description" : "",
        "operationId" : "updateTarget",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertTargetSwagger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alerts" ],
        "summary" : "Deletes an alert target",
        "description" : "",
        "operationId" : "deleteTarget",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/blueprints" : {
      "get" : {
        "tags" : [ "Blueprints" ],
        "summary" : "Get all blueprints",
        "description" : "",
        "operationId" : "BlueprintService#getBlueprints",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Blueprints/blueprint_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Blueprints/blueprint_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BlueprintSwagger"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Blueprints" ],
        "summary" : "Deletes multiple blueprints that match the predicate. Omitting the predicate will delete all blueprints.",
        "description" : "",
        "operationId" : "BlueprintService#deleteBlueprints",
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/blueprints/{blueprintName}" : {
      "get" : {
        "tags" : [ "Blueprints" ],
        "summary" : "Get the details of a blueprint",
        "description" : "",
        "operationId" : "BlueprintService#getBlueprint",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "blueprintName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Blueprints/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BlueprintSwagger"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Blueprints" ],
        "summary" : "Creates a blueprint",
        "description" : "",
        "operationId" : "BlueprintService#createBlueprint",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "blueprintName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BlueprintSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "The requested resource doesn't exist."
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Blueprints" ],
        "summary" : "Deletes a blueprint",
        "description" : "",
        "operationId" : "BlueprintService#deleteBlueprint",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "blueprintName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters" : {
      "get" : {
        "tags" : [ "Clusters" ],
        "summary" : "Returns all clusters",
        "description" : "",
        "operationId" : "getClusters",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}" : {
      "get" : {
        "tags" : [ "Clusters" ],
        "summary" : "Returns information about a specific cluster",
        "description" : "",
        "operationId" : "getCluster",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Clusters/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterResponseWrapper"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Clusters" ],
        "summary" : "Creates a cluster",
        "description" : "",
        "operationId" : "createCluster",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRequestSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Clusters" ],
        "summary" : "Updates a cluster",
        "description" : "",
        "operationId" : "updateCluster",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRequestSwagger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Clusters" ],
        "summary" : "Deletes a cluster",
        "description" : "",
        "operationId" : "deleteCluster",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/artifacts" : {
      "get" : {
        "tags" : [ "Clusters" ],
        "summary" : "Returns all artifacts associated with the cluster",
        "description" : "",
        "operationId" : "getClusterArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterArtifactResponse"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Clusters" ],
        "summary" : "Updates multiple artifacts",
        "description" : "",
        "operationId" : "updateClusterArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterArtifactRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Clusters" ],
        "summary" : "Deletes all artifacts of a cluster that match the provided predicate",
        "description" : "",
        "operationId" : "deleteClusterArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/artifacts/{artifactName}" : {
      "get" : {
        "tags" : [ "Clusters" ],
        "summary" : "Get the details of a cluster artifact",
        "description" : "",
        "operationId" : "getClusterArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterArtifactResponse"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Clusters" ],
        "summary" : "Creates a cluster artifact",
        "description" : "",
        "operationId" : "createClusterArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterArtifactRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Clusters" ],
        "summary" : "Updates a single artifact",
        "description" : "",
        "operationId" : "updateClusterArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterArtifactRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Clusters" ],
        "summary" : "Deletes a single artifact",
        "description" : "",
        "operationId" : "deleteClusterArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/config_groups" : {
      "get" : {
        "tags" : [ "Config Groups" ],
        "summary" : "Returns all config groups",
        "description" : "",
        "operationId" : "getConfigGroups",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ConfigGroup/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConfigGroupWrapper"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Config Groups" ],
        "summary" : "Creates a config group",
        "description" : "",
        "operationId" : "createConfigGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigGroupRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/config_groups/{groupId}" : {
      "get" : {
        "tags" : [ "Config Groups" ],
        "summary" : "Returns a single config group",
        "description" : "",
        "operationId" : "getConfigGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ConfigGroup/*"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConfigGroupWrapper"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Config Groups" ],
        "summary" : "Updates a config group",
        "description" : "",
        "operationId" : "updateConfigGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigGroupRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Config Groups" ],
        "summary" : "Deletes a config group",
        "description" : "",
        "operationId" : "deleteConfigGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/configurations" : {
      "get" : {
        "tags" : [ "Configurations" ],
        "summary" : "Get all configurations",
        "description" : "",
        "operationId" : "getConfigurations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConfigurationResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Configurations" ],
        "summary" : "Create new configurations",
        "description" : "",
        "operationId" : "createConfigurations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigurationRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/configurations/service_config_versions" : {
      "get" : {
        "tags" : [ "Configurations" ],
        "summary" : "Get all service config versions",
        "description" : "",
        "operationId" : "getServiceConfigVersions",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceConfigVersionResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/host_components" : {
      "get" : {
        "tags" : [ "Host Components" ],
        "summary" : "Get all host components for a host",
        "description" : "",
        "operationId" : "getHostComponents",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostComponentSwagger"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Host Components" ],
        "summary" : "Delete host components",
        "description" : "",
        "operationId" : "deleteHostComponents",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/host_components/{hostComponentName}" : {
      "get" : {
        "tags" : [ "Host Components" ],
        "summary" : "Get single host component for a host",
        "description" : "",
        "operationId" : "getHostComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostComponentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/HostComponentSwagger"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Host Components" ],
        "summary" : "Create new host component",
        "description" : "",
        "operationId" : "createHostComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostComponentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceComponentHostResponse"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Host Components" ],
        "summary" : "Update host component detail",
        "description" : "",
        "operationId" : "updateHostComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostComponentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceComponentHostResponse"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Host Components" ],
        "summary" : "Delete host component",
        "description" : "",
        "operationId" : "deleteHostComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostComponentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/host_components/{hostComponentName}/processes" : {
      "get" : {
        "tags" : [ "Host Components" ],
        "summary" : "Get processes of a specific host component",
        "description" : "",
        "operationId" : "getProcesses",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostComponentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/HostComponentProcessResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/request_schedules" : {
      "get" : {
        "tags" : [ "RequestSchedules" ],
        "summary" : "Get all request schedules",
        "description" : "",
        "operationId" : "getRequestSchedules",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RequestSchedule/*"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RequestScheduleResponseSwagger"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "RequestSchedules" ],
        "summary" : "Create new request schedule",
        "description" : "",
        "operationId" : "createRequestSchedule",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestScheduleRequestSwagger"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/request_schedules/{requestScheduleId}" : {
      "get" : {
        "tags" : [ "RequestSchedules" ],
        "summary" : "Get request schedule",
        "description" : "",
        "operationId" : "getRequestSchedule",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "requestScheduleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RequestSchedule/*"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RequestScheduleResponseSwagger"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "RequestSchedules" ],
        "summary" : "Delete a request schedule",
        "description" : "Changes status from COMPLETED to DISABLED",
        "operationId" : "deleteRequestSchedule",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "requestScheduleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/services" : {
      "get" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Get all services",
        "description" : "Returns all services.",
        "operationId" : "ServiceService#getServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ServiceInfo/service_name,ServiceInfo/cluster_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "ServiceInfo/service_name.asc,ServiceInfo/cluster_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceResponseSwagger"
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/services/{serviceName}" : {
      "get" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Get the details of a service",
        "description" : "Returns the details of a service.",
        "operationId" : "ServiceService#getService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ServiceInfo/*"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Creates a service",
        "description" : "",
        "operationId" : "ServiceService#createServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestSwagger"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Updates a service",
        "description" : "",
        "operationId" : "ServiceService#updateService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequestSwagger"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Deletes a service",
        "description" : "",
        "operationId" : "ServiceService#deleteService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/services/{serviceName}/artifacts" : {
      "get" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Get all service artifacts",
        "description" : "",
        "operationId" : "ServiceService#getArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterServiceArtifactResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Updates multiple artifacts",
        "description" : "",
        "operationId" : "ServiceService#updateArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterServiceArtifactRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Deletes all artifacts of a service that match the provided predicate",
        "description" : "",
        "operationId" : "ServiceService#deleteArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/clusters/{clusterName}/services/{serviceName}/artifacts/{artifactName}" : {
      "get" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Get the details of a service artifact",
        "description" : "",
        "operationId" : "ServiceService#getArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterServiceArtifactResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Creates a service artifact",
        "description" : "",
        "operationId" : "ServiceService#createArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterServiceArtifactRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Updates a single artifact",
        "description" : "",
        "operationId" : "ServiceService#updateArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterServiceArtifactRequest"
          }
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Cluster Services" ],
        "summary" : "Deletes a single service artifact",
        "description" : "",
        "operationId" : "ServiceService#deleteArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get all groups",
        "description" : "Returns details of all groups.",
        "operationId" : "GroupService#getGroups",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter group details",
          "required" : false,
          "type" : "string",
          "default" : "Groups/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort groups (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Groups/group_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of all group entries",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Create new group",
        "description" : "Creates group resource.",
        "operationId" : "GroupService#createGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "input parameters in json form",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/groups/{groupName}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get group",
        "description" : "Returns group details.",
        "operationId" : "GroupService#getGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter group details",
          "required" : false,
          "type" : "string",
          "default" : "Groups"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of group resource",
            "schema" : {
              "$ref" : "#/definitions/GroupResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete group",
        "description" : "Delete group resource.",
        "operationId" : "GroupService#deleteGroup",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/groups/{groupName}/members" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get all group members",
        "description" : "Returns details of all members.",
        "operationId" : "MemberService#getMembers",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter member details",
          "required" : false,
          "type" : "string",
          "default" : "MemberInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort members (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "MemberInfo/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MemberResponse"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Update group members",
        "description" : "Updates group member resources.",
        "operationId" : "MemberService#updateMembers",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "input parameters in json form",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MemberRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/groups/{groupName}/members/{userName}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get group member",
        "description" : "Returns member details.",
        "operationId" : "MemberService#getMember",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter member details",
          "required" : false,
          "type" : "string",
          "default" : "MemberInfo"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/MemberResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete group member",
        "description" : "Delete member resource.",
        "operationId" : "MemberService#deleteMember",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/groups/{groupName}/privileges" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get all privileges",
        "description" : "Returns all privileges for group.",
        "operationId" : "GroupPrivilegeService#getPrivileges",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user privileges",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort user privileges (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupPrivilegeResponse"
              }
            }
          }
        }
      }
    },
    "/groups/{groupName}/privileges/{privilegeId}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get group privilege",
        "description" : "Returns group privilege details.",
        "operationId" : "GroupPrivilegeService#getPrivilege",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "privilegeId",
          "in" : "path",
          "description" : "privilege id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter group privilege details",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PrivilegeResponse"
            }
          }
        }
      }
    },
    "/hosts" : {
      "get" : {
        "tags" : [ "Hosts" ],
        "summary" : "Returns a collection of all hosts",
        "description" : "",
        "operationId" : "getHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Hosts/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Hosts/host_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Hosts" ],
        "summary" : "Creates multiple hosts in a single request",
        "description" : "",
        "operationId" : "createHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Attempt to add hosts that have not been registered"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "409" : {
            "description" : "Attempt to create a host which already exists"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Hosts" ],
        "summary" : "Updates multiple hosts in a single request",
        "description" : "",
        "operationId" : "updateHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Hosts" ],
        "summary" : "Deletes multiple hosts in a single request",
        "description" : "",
        "operationId" : "deleteHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/hosts/{hostName}" : {
      "get" : {
        "tags" : [ "Hosts" ],
        "summary" : "Returns information about a single host",
        "description" : "",
        "operationId" : "getHost",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/HostResponseWrapper"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Hosts" ],
        "summary" : "Creates a host",
        "description" : "",
        "operationId" : "createHost",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "409" : {
            "description" : "Attempt to create a host which already exists"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Hosts" ],
        "summary" : "Updates a host",
        "description" : "",
        "operationId" : "updateHost",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Hosts" ],
        "summary" : "Deletes a host",
        "description" : "",
        "operationId" : "deleteHost",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/requests" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "Get all requests. A predicate can be given to filter results.",
        "description" : "",
        "operationId" : "RequestService#getRequests",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Requests/id"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Requests/id.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RequestResponse"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Requests" ],
        "summary" : "Creates one or more Requests",
        "description" : "",
        "operationId" : "RequestService#createRequests",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestPostRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet",
            "schema" : {
              "$ref" : "#/definitions/RequestPostResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/requests/{requestId}" : {
      "get" : {
        "tags" : [ "Requests" ],
        "summary" : "Get the details of a request",
        "description" : "",
        "operationId" : "RequestService#getRequest",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Requests/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RequestResponse"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Requests" ],
        "summary" : "Updates a request, usually used to cancel running requests.",
        "description" : "Changes the state of an existing request. Usually used to cancel running requests.",
        "operationId" : "RequestService#updateRequests",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestPutRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns the list of root-level services",
        "description" : "",
        "operationId" : "getRootServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootService/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RootServiceResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns information about the given root-level service, including a list of its components",
        "description" : "",
        "operationId" : "getRootService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootService/service_name, components/RootServiceComponents/component_name, components/RootServiceComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RootServiceResponseWithComponentList"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/components" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns the list of components for the given root-level service",
        "description" : "",
        "operationId" : "getRootServiceComponents",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootServiceComponents/component_name, RootServiceComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RootServiceComponentResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/components/{componentName}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns information about the given component for the given root-level service",
        "description" : "",
        "operationId" : "getRootServiceComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "description" : "component name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootServiceComponents/*, hostComponents/RootServiceHostComponents/component_name, hostComponents/RootServiceHostComponents/host_name, hostComponents/RootServiceHostComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RootServiceComponentWithHostComponentList"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/components/{componentName}/configurations/{category}" : {
      "get" : {
        "tags" : [ "Root Service Configurations" ],
        "summary" : "Retrieve the details of a root service component configuration resource",
        "description" : "",
        "operationId" : "RootServiceComponentConfigurationService#getConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Configuration/*"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RootServiceComponentConfigurationResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Root Service Configurations" ],
        "summary" : "Updates root service component configuration resources ",
        "description" : "",
        "operationId" : "RootServiceComponentConfigurationService#updateConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RootServiceComponentConfigurationRequestSwagger"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Configuration/*"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Root Service Configurations" ],
        "summary" : "Deletes a root service component configuration resource",
        "description" : "",
        "operationId" : "RootServiceComponentConfigurationService#deleteConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/components/{componentName}/hostComponents" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns the list of hosts for the given root-level service component",
        "description" : "",
        "operationId" : "getRootServiceComponentHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "description" : "component name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootServiceHostComponents/component_name, RootServiceHostComponents/host_name, RootServiceHostComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RootServiceHostComponentResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/hosts" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns the list of hosts for the given root-level service",
        "description" : "",
        "operationId" : "getRootHosts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Hosts/host_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/hosts/{hostName}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns information about the given host",
        "description" : "",
        "operationId" : "getRootHost",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Hosts/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/HostResponseWrapper"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/hosts/{hostName}/hostComponents" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns the list of components for the given root-level service on the given host",
        "description" : "",
        "operationId" : "getRootServiceHostComponents",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootServiceHostComponents/component_name, RootServiceHostComponents/host_name, RootServiceHostComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RootServiceHostComponentResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/services/{serviceName}/hosts/{hostName}/hostComponents/{hostComponent}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Returns information about the given component for the given root-level service on the given host",
        "description" : "",
        "operationId" : "getRootServiceHostComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "description" : "service name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hostName",
          "in" : "path",
          "description" : "host name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hostComponent",
          "in" : "path",
          "description" : "component name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "RootServiceHostComponents/component_name, RootServiceHostComponents/host_name, RootServiceHostComponents/service_name"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RootServiceHostComponentResponseWrapper"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/settings" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns all settings",
        "description" : "",
        "operationId" : "getSettings",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Settings/name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SettingResponseWrapper"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Creates a setting",
        "description" : "",
        "operationId" : "createSetting",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SettingRequestSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/settings/{settingName}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns a specific setting",
        "description" : "",
        "operationId" : "getSetting",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "settingName",
          "in" : "path",
          "description" : "setting name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Settings/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/SettingResponseWrapper"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Settings" ],
        "summary" : "Updates a setting",
        "description" : "",
        "operationId" : "updateSetting",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "settingName",
          "in" : "path",
          "description" : "setting name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SettingRequestSwagger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes a setting",
        "description" : "",
        "operationId" : "deleteSetting",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "settingName",
          "in" : "path",
          "description" : "setting name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all stacks",
        "description" : "Returns all stacks.",
        "operationId" : "StacksService#getStacks",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter stack details",
          "required" : false,
          "type" : "string",
          "default" : "Stacks/stack_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort stack privileges (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Stacks/stack_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackResponseSwagger"
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get a stack",
        "description" : "Returns stack details.",
        "operationId" : "StacksService#getStack",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter stack details",
          "required" : false,
          "type" : "string",
          "default" : "Stacks/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all versions for a stacks",
        "description" : "Returns all versions for a stack.",
        "operationId" : "StacksService#getStackVersions",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter stack version details",
          "required" : false,
          "type" : "string",
          "default" : "Versions/stack_name,Versions/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort stack privileges (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Versions/stack_name.asc,Versions/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackVersionResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get details for a stack version",
        "description" : "Returns the details for a stack version.",
        "operationId" : "StacksService#getStackVersion",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter stack version details",
          "required" : false,
          "type" : "string",
          "default" : "Versions/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackVersionResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/artifacts" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all stack artifacts",
        "description" : "Returns all stack artifacts (e.g: kerberos descriptor, metrics descriptor)",
        "operationId" : "StacksService#getStackArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name,Artifacts/stack_name,Artifacts/stack_version"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackArtifactResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/artifacts/{artifactName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get stack artifact details",
        "description" : "Returns the details of a stack artifact",
        "operationId" : "StacksService#getStackArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackArtifactResponse"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/configurations" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all configurations for a stack version",
        "description" : "Returns all configurations for a stack version.",
        "operationId" : "StacksService#getStackLevelConfigurations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackLevelConfigurations/stack_name,StackLevelConfigurations/stack_version,StackLevelConfigurations/property_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort configuration (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "StackLevelConfigurations/stack_name.asc,StackLevelConfigurations/stack_version.asc,StackLevelConfigurations/property_name.asc "
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackConfigurationResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/configurations/{propertyName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get configuration details for a given property",
        "description" : "Returns the configuration details for a given property.",
        "operationId" : "StacksService#getStackLevelConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackLevelConfigurations/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackConfigurationResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/links" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get extension links for a stack version",
        "description" : "Returns the extension links for a stack version.",
        "operationId" : "StacksService#getStackVersionLinks",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter extension link attributes",
          "required" : false,
          "type" : "string",
          "default" : "ExtensionLink/link_id,ExtensionLink/stack_name,ExtensionLink/stack_version,ExtensionLink/extension_name,ExtensionLink/extension_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort extension links (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "ExtensionLink/link_id.asc,ExtensionLink/stack_name.asc,ExtensionLink/stack_version.asc,ExtensionLink/extension_name.asc,ExtensionLink/extension_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExtensionLinkResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all services for a stack version",
        "description" : "Returns all services for a stack version.",
        "operationId" : "StacksService#getStackServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackServices/stack_name,StackServices/stack_version,StackServices/service_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort stack services (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "StackServices/stack_name.asc,StackServices/stack_version.asc,StackServices/service_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackServiceResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get stack service details",
        "description" : "Returns the details of a stack service.",
        "operationId" : "StacksService#getStackService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackServices/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackServiceResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/artifacts" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all artifacts for a stack service",
        "description" : "Returns all stack service artifacts",
        "operationId" : "StacksService#getStackServiceArtifacts",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name,Artifacts/stack_name,Artifacts/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort service artifacts (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/artifact_name.asc,Artifacts/stack_name.asc,Artifacts/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackServiceArtifactResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/artifacts/{artifactName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get stack service artifact details",
        "description" : "Returns the details of a stack service artifact.",
        "operationId" : "StacksService#getStackServiceArtifact",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "artifactName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Artifacts/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackArtifactResponse"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/components" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all components for a stack service",
        "description" : "Returns all components for a stack service.",
        "operationId" : "StacksService#getServiceComponents",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackServiceComponents/component_name,StackServiceComponents/service_name,StackServiceComponents/stack_name,StackServiceComponents/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort service components (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "StackServiceComponents/component_name.asc,StackServiceComponents/service_name.asc,StackServiceComponents/stack_name.asc,StackServiceComponents/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackServiceComponentResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/components/{componentName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get details for a stack service component",
        "description" : "Returns details for a stack service component.",
        "operationId" : "StacksService#getServiceComponent",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackServiceComponents/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackServiceComponentResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/components/{componentName}/dependencies" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all dependencies for a stack service component",
        "description" : "Returns all dependencies for a stack service component.",
        "operationId" : "StacksService#getServiceComponentDependencies",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Dependencies/stack_name,Dependencies/stack_version,Dependencies/dependent_service_name,Dependencies/dependent_component_name,Dependencies/component_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort component dependencies (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Dependencies/stack_name.asc,Dependencies/stack_version.asc,Dependencies/dependent_service_name.asc,Dependencies/dependent_component_name.asc,Dependencies/component_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ComponentDependencyResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/components/{componentName}/dependencies/{dependencyName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get a stack service component dependency",
        "description" : "Returns a stack service component dependency.",
        "operationId" : "StacksService#getServiceComponentDependency",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dependencyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "Dependencies/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComponentDependencyResponse"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/configurations" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all configurations for a stack service",
        "description" : "Returns all configurations for a stack service.",
        "operationId" : "StacksService#getStackConfigurations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackConfigurations/property_name,StackConfigurations/service_name,StackConfigurations/stack_nameStackConfigurations/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort service configurations (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "StackConfigurations/property_name.asc,StackConfigurations/service_name.asc,StackConfigurations/stack_name.ascStackConfigurations/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackConfigurationResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/configurations/{propertyName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get stack service configuration details",
        "description" : "Returns the details of a stack service configuration.",
        "operationId" : "StacksService#getStackConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackConfigurations/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackConfigurationResponseSwagger"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/configurations/{propertyName}/dependencies" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all dependencies for a stack service configuration",
        "description" : "Returns all dependencies for a stack service configuration.",
        "operationId" : "StacksService#getStackConfigurationDependencies",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "StackConfigurationDependency/stack_name,StackConfigurationDependency/stack_version,StackConfigurationDependency/service_name,StackConfigurationDependency/property_name,StackConfigurationDependency/dependency_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort configuration dependencies (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "StackConfigurationDependency/stack_name.asc,StackConfigurationDependency/stack_version.asc,StackConfigurationDependency/service_name.asc,StackConfigurationDependency/property_name.asc,StackConfigurationDependency/dependency_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StackConfigurationDependencyResponseSwagger"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/quicklinks" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all quicklinks configurations for a stack service",
        "description" : "Returns all quicklinks configurations for a stack service.",
        "operationId" : "StacksService#getStackServiceQuickLinksConfigurations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "QuickLinkInfo/file_name,QuickLinkInfo/service_name,QuickLinkInfo/stack_name,QuickLinkInfo/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort quick links (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "QuickLinkInfo/file_name.asc,QuickLinkInfo/service_name.asc,QuickLinkInfo/stack_name.asc,QuickLinkInfo/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/QuickLinksResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/quicklinks/{quickLinksConfigurationName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get quicklinks configuration details",
        "description" : "Returns the details of a quicklinks configuration.",
        "operationId" : "StacksService#getStackServiceQuickLinksConfiguration",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "quickLinksConfigurationName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "QuickLinkInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/QuickLinksResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/themes" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get all themes for a stack service",
        "description" : "Returns all stack themes",
        "operationId" : "StacksService#getStackServiceThemes",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "ThemeInfo/file_name,ThemeInfo/service_name,ThemeInfo/stack_name,ThemeInfo/stack_version"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort service artifacts (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "ThemeInfo/file_name.asc,ThemeInfo/service_name.asc,ThemeInfo/stack_name.asc,ThemeInfo/stack_version.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ThemeResponse"
              }
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/stacks/{stackName}/versions/{stackVersion}/services/{serviceName}/themes/{themeName}" : {
      "get" : {
        "tags" : [ "Stacks" ],
        "summary" : "Get theme details for a stack service",
        "description" : "Returns stack service theme details.",
        "operationId" : "StacksService#getStackServiceTheme",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackVersion",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "themeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter returned attributes",
          "required" : false,
          "type" : "string",
          "default" : "ThemeInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ThemeResponse"
            }
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get all users",
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Users/user_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Users/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserResponseSwagger"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Creates one or more users in a single request",
        "description" : "",
        "operationId" : "createUsers",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserRequestCreateUsersSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/users/{userName}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get single user",
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Users/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserResponseSwagger"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Create new user",
        "description" : "",
        "operationId" : "createUser",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserRequestCreateUserSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Update user details",
        "description" : "",
        "operationId" : "updateUser",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserRequestUpdateUserSwagger"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete single user",
        "description" : "",
        "operationId" : "deleteUser",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/users/{userName}/activeWidgetLayouts" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get user widget layouts",
        "description" : "Returns all active widget layouts for user.",
        "operationId" : "ActiveWidgetLayoutService#getServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user layout details",
          "required" : false,
          "type" : "string",
          "default" : "WidgetLayoutInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort layouts (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "WidgetLayoutInfo/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActiveWidgetLayoutResponse"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Update user widget layouts",
        "description" : "Updates user widget layout.",
        "operationId" : "ActiveWidgetLayoutService#updateServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "input parameters in json form",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActiveWidgetLayoutRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/users/{userName}/authorizations" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get all authorizations",
        "description" : "Returns all authorization for user.",
        "operationId" : "UserAuthorizationService#getAuthorizations",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user authorization details",
          "required" : false,
          "type" : "string",
          "default" : "AuthorizationInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort user authorizations (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "AuthorizationInfo/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserAuthorizationResponse"
              }
            }
          }
        }
      }
    },
    "/users/{userName}/authorizations/{authorization_id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get user authorization",
        "description" : "Returns user authorization details.",
        "operationId" : "UserAuthorizationService#getAuthorization",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "authorization_id",
          "in" : "path",
          "description" : "Authorization Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user authorization details",
          "required" : false,
          "type" : "string",
          "default" : "AuthorizationInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserAuthorizationResponse"
            }
          }
        }
      }
    },
    "/users/{userName}/privileges" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get all privileges",
        "description" : "Returns all privileges for user.",
        "operationId" : "UserPrivilegeService#getPrivileges",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string",
          "default" : "admin"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user privileges",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort user privileges (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/user_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive). Valid values are :offset | \"start\"",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive). Valid values are :offset | \"end\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserPrivilegeResponse"
              }
            }
          }
        }
      }
    },
    "/users/{userName}/privileges/{privilegeId}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get user privilege",
        "description" : "Returns user privilege details.",
        "operationId" : "UserPrivilegeService#getPrivilege",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "privilegeId",
          "in" : "path",
          "description" : "privilege id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter user privilege details",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserPrivilegeResponse"
            }
          }
        }
      }
    },
    "/users/{userName}/sources" : {
      "get" : {
        "tags" : [ "User Authentication Sources" ],
        "summary" : "Get all authentication sources",
        "description" : "",
        "operationId" : "getAuthenticationSources",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "AuthenticationSourceInfo/source_id,AuthenticationSourceInfo/user_name"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "AuthenticationSourceInfo/source_id.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserAuthenticationSourceResponseSwagger"
              }
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "User Authentication Sources" ],
        "summary" : "Create one or more new authentication sources for a user",
        "description" : "",
        "operationId" : "createAuthenticationSources",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserAuthenticationSourceRequestCreateSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/users/{userName}/sources/{sourceId}" : {
      "get" : {
        "tags" : [ "User Authentication Sources" ],
        "summary" : "Get user authentication source",
        "description" : "",
        "operationId" : "getAuthenticationSource",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sourceId",
          "in" : "path",
          "description" : "source id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "AuthenticationSourceInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserAuthenticationSourceResponseSwagger"
            }
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "User Authentication Sources" ],
        "summary" : "Updates an existing authentication source",
        "description" : "",
        "operationId" : "updateAuthenticationSource",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sourceId",
          "in" : "path",
          "description" : "source id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserAuthenticationSourceRequestUpdateSwagger"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "409" : {
            "description" : "The requested resource already exists."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "User Authentication Sources" ],
        "summary" : "Deletes an existing authentication source",
        "description" : "",
        "operationId" : "deleteAuthenticationSource",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "description" : "user name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sourceId",
          "in" : "path",
          "description" : "source id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/view/urls" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all view URLs",
        "description" : "",
        "operationId" : "getViewUrls",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewUrlInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewUrlResponseSwagger"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/view/urls/{urlName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view URL",
        "description" : "",
        "operationId" : "getViewUrl",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "urlName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewUrlInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewUrlResponseSwagger"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Views" ],
        "summary" : "Create view URL",
        "description" : "",
        "operationId" : "createUrl",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "urlName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewUrlResponseSwagger"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "summary" : "Update view URL",
        "description" : "",
        "operationId" : "updateUrl",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "urlName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewUrlResponseSwagger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "summary" : "Delete view URL",
        "description" : "",
        "operationId" : "deleteUrl",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "urlName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all views",
        "description" : "Returns details of all views.",
        "operationId" : "getViews",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Views/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string",
          "default" : "Views/view_name.asc"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view",
        "description" : "",
        "operationId" : "getView",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "Views/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all versions for a view",
        "description" : "",
        "operationId" : "getVersions",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewVersionInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewVersionResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view version",
        "description" : "",
        "operationId" : "getVersion",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewVersionInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewVersionResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/instances" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all view instances",
        "description" : "",
        "operationId" : "getServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewInstanceInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewInstanceResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Views" ],
        "summary" : "Create view instances",
        "description" : "",
        "operationId" : "createServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewInstanceResponse"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "summary" : "Update multiple view instance detail",
        "description" : "",
        "operationId" : "updateServices",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewInstanceResponse"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/instances/{instanceName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view instance",
        "description" : "",
        "operationId" : "getService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "ViewInstanceInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewInstanceResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Views" ],
        "summary" : "Create view instance",
        "description" : "",
        "operationId" : "createService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewInstanceResponse"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "summary" : "Update view instance detail",
        "description" : "",
        "operationId" : "updateService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewInstanceResponse"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "summary" : "Delete view instance",
        "description" : "",
        "operationId" : "deleteService",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/instances/{instanceName}/migrate/{originVersion}/{originInstanceName}" : {
      "put" : {
        "tags" : [ "Views" ],
        "summary" : "Migrate view instance data",
        "description" : "Migrates view instance persistence data from origin view instance specified in the path params.",
        "operationId" : "migrateData",
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "originVersion",
          "in" : "path",
          "description" : "origin version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "originInstanceName",
          "in" : "path",
          "description" : "origin instance name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/instances/{instanceName}/privileges" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all view instance privileges",
        "description" : "",
        "operationId" : "getPrivileges",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewPrivilegeResponseWrapper"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "Views" ],
        "summary" : "Create view instance privilege",
        "description" : "",
        "operationId" : "createPrivilege",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewPrivilegeService"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "summary" : "Update view instance privilege",
        "description" : "",
        "operationId" : "updatePrivileges",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ViewPrivilegeService"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "202" : {
            "description" : "Request is accepted, but not completely processed yet"
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "summary" : "Delete view instance privileges",
        "description" : "",
        "operationId" : "deletePrivileges",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "viewVersion",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/instances/{instanceName}/privileges/{privilegeId}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view instance privilege",
        "description" : "",
        "operationId" : "getPrivilege",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "privilegeId",
          "in" : "path",
          "description" : "privilege id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "PrivilegeInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewPrivilegeResponseWrapper"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "summary" : "Delete privileges",
        "description" : "",
        "operationId" : "deletePrivilege",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceName",
          "in" : "path",
          "description" : "instance name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "privilegeId",
          "in" : "path",
          "description" : "privilege id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster or host not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/permissions" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get all permissions for a view",
        "description" : "",
        "operationId" : "getPermissions",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "PermissionInfo/*"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort resources in result by (asc | desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of resources to be returned for the paged response.",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting page resource (inclusive).  \"start\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The ending page resource (inclusive).  \"end\" is also accepted.",
          "required" : false,
          "type" : "integer",
          "minimum" : 1.0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewPermissionResponse"
              }
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/views/{viewName}/versions/{version}/permissions/{permissionId}" : {
      "get" : {
        "tags" : [ "Views" ],
        "summary" : "Get single view permission",
        "description" : "",
        "operationId" : "getPermission",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "viewName",
          "in" : "path",
          "description" : "view name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "view version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permissionId",
          "in" : "path",
          "description" : "permission id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Filter fields in the response (identifier fields are mandatory)",
          "required" : false,
          "type" : "string",
          "default" : "PermissionInfo/*"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ViewPermissionResponse"
            }
          },
          "400" : {
            "description" : "Invalid arguments"
          },
          "401" : {
            "description" : "Not authenticated"
          },
          "403" : {
            "description" : "Not permitted to perform the operation"
          },
          "404" : {
            "description" : "Cluster not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "ActionRequest" : {
      "type" : "object",
      "properties" : {
        "action_name" : {
          "type" : "string"
        },
        "action_type" : {
          "type" : "string"
        },
        "inputs" : {
          "type" : "string"
        },
        "target_service" : {
          "type" : "string"
        },
        "target_component" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "target_type" : {
          "type" : "string"
        },
        "default_timeout" : {
          "type" : "string"
        }
      }
    },
    "ActionRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "Actions" : {
          "$ref" : "#/definitions/ActionRequest"
        }
      }
    },
    "ActionResponse" : {
      "type" : "object",
      "properties" : {
        "action_name" : {
          "type" : "string"
        },
        "action_type" : {
          "type" : "string"
        },
        "inputs" : {
          "type" : "string"
        },
        "target_service" : {
          "type" : "string"
        },
        "target_component" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "target_type" : {
          "type" : "string"
        },
        "default_timeout" : {
          "type" : "string"
        }
      }
    },
    "ActionResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "Actions" : {
          "$ref" : "#/definitions/ActionResponse"
        }
      }
    },
    "ActiveWidgetLayoutRequest" : {
      "type" : "object",
      "properties" : {
        "WidgetLayouts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutIdWrapper"
          }
        }
      }
    },
    "ActiveWidgetLayoutResponse" : {
      "type" : "object",
      "properties" : {
        "WidgetLayoutInfo/cluster_name" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/display_name" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/layout_name" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/scope" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/section_name" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/user_name" : {
          "type" : "string"
        },
        "WidgetLayoutInfo/widgets" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/WidgetResponse"
            }
          }
        }
      }
    },
    "AgentEnv" : {
      "type" : "object",
      "properties" : {
        "stackFoldersAndFiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Directory"
          }
        },
        "alternatives" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Alternative"
          }
        },
        "existingUsers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExistingUser"
          }
        },
        "existingRepos" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "installedPackages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PackageDetail"
          }
        },
        "hostHealth" : {
          "$ref" : "#/definitions/HostHealth"
        },
        "umask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transparentHugePage" : {
          "type" : "string"
        },
        "firewallRunning" : {
          "type" : "boolean",
          "default" : false
        },
        "firewallName" : {
          "type" : "string"
        },
        "hasUnlimitedJcePolicy" : {
          "type" : "boolean",
          "default" : false
        },
        "reverseLookup" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "AlertGroup" : {
      "type" : "object",
      "properties" : {
        "default" : {
          "type" : "boolean",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "cluster_id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AlertTargetInfo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "description" : {
          "type" : "string"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertGroup"
          }
        },
        "notification_type" : {
          "type" : "string"
        },
        "alert_states" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "global" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "AlertTargetSwagger" : {
      "type" : "object",
      "properties" : {
        "AlertTarget" : {
          "$ref" : "#/definitions/AlertTargetInfo"
        }
      }
    },
    "Alternative" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "target" : {
          "type" : "string"
        }
      }
    },
    "Artifacts" : {
      "type" : "object",
      "properties" : {
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "artifact_name" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        }
      }
    },
    "BatchRequest" : {
      "type" : "object",
      "properties" : {
        "requests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BatchRequestRequest"
          }
        },
        "batch_settings" : {
          "$ref" : "#/definitions/BatchSettings"
        }
      }
    },
    "BatchRequestRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "order_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uri" : {
          "type" : "string"
        },
        "RequestBodyInfo" : {
          "$ref" : "#/definitions/RequestBodyInfo"
        }
      }
    },
    "BatchRequestResponse" : {
      "type" : "object",
      "properties" : {
        "request_type" : {
          "type" : "string"
        },
        "request_body" : {
          "type" : "string"
        },
        "request_status" : {
          "type" : "string"
        },
        "return_code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "order_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "response_message" : {
          "type" : "string"
        },
        "request_uri" : {
          "type" : "string"
        }
      }
    },
    "BatchResponse" : {
      "type" : "object",
      "properties" : {
        "batch_requests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BatchRequestResponse"
          }
        },
        "batch_settings" : {
          "$ref" : "#/definitions/BatchSettings"
        }
      }
    },
    "BatchSettings" : {
      "type" : "object",
      "properties" : {
        "batch_separation_in_seconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "task_failure_tolerance_limit" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "BlueprintInfo" : {
      "type" : "object",
      "properties" : {
        "security" : {
          "$ref" : "#/definitions/SecurityInfo"
        },
        "stack_version" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "blueprint_name" : {
          "type" : "string"
        }
      }
    },
    "BlueprintSwagger" : {
      "type" : "object",
      "properties" : {
        "configurations" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "Blueprints" : {
          "$ref" : "#/definitions/BlueprintInfo"
        },
        "host_groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostGroupInfo"
          }
        }
      }
    },
    "Body" : {
      "type" : "object",
      "properties" : {
        "Requests" : {
          "$ref" : "#/definitions/Request"
        }
      }
    },
    "Check" : {
      "type" : "object",
      "properties" : {
        "property" : {
          "type" : "string"
        },
        "desired" : {
          "type" : "string"
        },
        "site" : {
          "type" : "string"
        }
      }
    },
    "ClusterArtifactRequest" : {
      "type" : "object",
      "properties" : {
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "Artifacts" : {
          "$ref" : "#/definitions/ClusterArtifactRequestInfo"
        }
      }
    },
    "ClusterArtifactRequestInfo" : {
      "type" : "object",
      "properties" : {
        "artifact_name" : {
          "type" : "string"
        }
      }
    },
    "ClusterArtifactResponse" : {
      "type" : "object",
      "properties" : {
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "Artifacts" : {
          "$ref" : "#/definitions/ClusterArtifactResponseInfo"
        }
      }
    },
    "ClusterArtifactResponseInfo" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "artifact_name" : {
          "type" : "string"
        }
      }
    },
    "ClusterHealthReport" : {
      "type" : "object",
      "properties" : {
        "Host/stale_config" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/maintenance_state" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_state/HEALTHY" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_state/UNHEALTHY" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_state/HEARTBEAT_LOST" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_state/INIT" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_status/HEALTHY" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_status/UNHEALTHY" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_status/UNKNOWN" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Host/host_status/ALERT" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ClusterRequest" : {
      "type" : "object",
      "properties" : {
        "cluster_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "provisioning_state" : {
          "type" : "string"
        },
        "security_type" : {
          "type" : "string",
          "enum" : [ "NONE", "KERBEROS" ]
        },
        "desired_service_config_versions" : {
          "$ref" : "#/definitions/ServiceConfigVersionRequest"
        },
        "desired_configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigurationRequest"
          }
        }
      }
    },
    "ClusterRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "Clusters" : {
          "$ref" : "#/definitions/ClusterRequest"
        }
      }
    },
    "ClusterResponse" : {
      "type" : "object",
      "properties" : {
        "cluster_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "provisioning_state" : {
          "type" : "string",
          "enum" : [ "INIT", "INSTALLING", "INSTALL_FAILED", "INSTALLED", "STARTING", "STARTED", "STOPPING", "UNINSTALLING", "UNINSTALLED", "WIPING_OUT", "UPGRADING", "DISABLED", "UNKNOWN" ]
        },
        "security_type" : {
          "type" : "string",
          "enum" : [ "NONE", "KERBEROS" ]
        },
        "total_hosts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "desired_configs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/DesiredConfig"
          }
        },
        "desired_service_config_versions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceConfigVersionResponse"
            }
          }
        },
        "health_report" : {
          "$ref" : "#/definitions/ClusterHealthReport"
        },
        "credential_store_properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ClusterResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "Clusters" : {
          "$ref" : "#/definitions/ClusterResponse"
        }
      }
    },
    "ClusterServiceArtifactRequest" : {
      "type" : "object",
      "properties" : {
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "Artifacts" : {
          "$ref" : "#/definitions/ClusterServiceArtifactRequestInfo"
        }
      }
    },
    "ClusterServiceArtifactRequestInfo" : {
      "type" : "object",
      "properties" : {
        "artifact_name" : {
          "type" : "string"
        }
      }
    },
    "ClusterServiceArtifactResponse" : {
      "type" : "object",
      "properties" : {
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "Artifacts" : {
          "$ref" : "#/definitions/ClusterServiceArtifactResponseInfo"
        }
      }
    },
    "ClusterServiceArtifactResponseInfo" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "artifact_name" : {
          "type" : "string"
        }
      }
    },
    "ComponentDependencyResponse" : {
      "type" : "object",
      "properties" : {
        "Dependencies" : {
          "$ref" : "#/definitions/ComponentDependencyResponseInfo"
        }
      }
    },
    "ComponentDependencyResponseInfo" : {
      "type" : "object",
      "properties" : {
        "scope" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "dependent_component_name" : {
          "type" : "string"
        },
        "dependent_service_name" : {
          "type" : "string"
        },
        "conditions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DependencyConditionInfo"
          }
        }
      }
    },
    "ComponentInfo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "provision_action" : {
          "type" : "string"
        }
      }
    },
    "ComponentRecoveryReport" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "numAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "limitReached" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Config" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "serviceConfigVersions" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "stackId" : {
          "$ref" : "#/definitions/StackId"
        },
        "propertiesTypes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "propertiesAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "ConfigCondition" : {
      "type" : "object",
      "properties" : {
        "configs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resource" : {
          "type" : "string"
        },
        "if" : {
          "type" : "string"
        },
        "then" : {
          "$ref" : "#/definitions/ConfigConditionResult"
        },
        "else" : {
          "$ref" : "#/definitions/ConfigConditionResult"
        }
      }
    },
    "ConfigConditionResult" : {
      "type" : "object",
      "properties" : {
        "property_value_attributes" : {
          "$ref" : "#/definitions/ValueAttributesInfo"
        }
      }
    },
    "ConfigGroupRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "group_name" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "service_config_version_note" : {
          "type" : "string"
        },
        "hosts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "desired_configs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Config"
          }
        }
      }
    },
    "ConfigGroupResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "group_name" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hosts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "version_tags" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "desired_configs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "ConfigGroupWrapper" : {
      "type" : "object",
      "properties" : {
        "ConfigGroup" : {
          "$ref" : "#/definitions/ConfigGroupResponse"
        }
      }
    },
    "ConfigPlacement" : {
      "type" : "object",
      "properties" : {
        "config" : {
          "type" : "string"
        },
        "subsection-name" : {
          "type" : "string"
        },
        "subsection-tab-name" : {
          "type" : "string"
        },
        "property_value_attributes" : {
          "$ref" : "#/definitions/ValueAttributesInfo"
        },
        "depends-on" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigCondition"
          }
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ConfigurationRequest" : {
      "type" : "object",
      "properties" : {
        "Config/cluster_name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tag" : {
          "type" : "string"
        },
        "properties_attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "ConfigurationResponse" : {
      "type" : "object",
      "properties" : {
        "Config/cluster_name" : {
          "type" : "string"
        },
        "Config/stack_id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "properties_attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "CreateUserAuthenticationSourceInfo" : {
      "type" : "object",
      "required" : [ "authentication_type", "key" ],
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "authentication_type" : {
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "JWT", "PAM", "KERBEROS" ]
        }
      }
    },
    "CreateUserInfo" : {
      "type" : "object",
      "properties" : {
        "display_name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "password" : {
          "type" : "string"
        },
        "admin" : {
          "type" : "boolean",
          "default" : false
        },
        "local_user_name" : {
          "type" : "string"
        }
      }
    },
    "CreateUsersInfo" : {
      "type" : "object",
      "properties" : {
        "display_name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "user_name" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "admin" : {
          "type" : "boolean",
          "default" : false
        },
        "local_user_name" : {
          "type" : "string"
        }
      }
    },
    "DependencyConditionInfo" : {
      "type" : "object"
    },
    "DesiredConfig" : {
      "type" : "object",
      "properties" : {
        "tag" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hostOverrides" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostOverride"
          }
        }
      }
    },
    "Directory" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "DiskInfo" : {
      "type" : "object",
      "properties" : {
        "available" : {
          "type" : "string"
        },
        "device" : {
          "type" : "string"
        },
        "used" : {
          "type" : "string"
        },
        "percent" : {
          "type" : "string"
        },
        "size" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "mountpoint" : {
          "type" : "string"
        }
      }
    },
    "ExistingUser" : {
      "type" : "object",
      "properties" : {
        "userName" : {
          "type" : "string"
        },
        "userHomeDir" : {
          "type" : "string"
        },
        "userStatus" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "homeDir" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "ExtensionLinkResponse" : {
      "type" : "object",
      "properties" : {
        "ExtensionLink" : {
          "$ref" : "#/definitions/ExtensionLinkResponseInfo"
        }
      }
    },
    "ExtensionLinkResponseInfo" : {
      "type" : "object",
      "properties" : {
        "link_id" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "extension_name" : {
          "type" : "string"
        },
        "extension_version" : {
          "type" : "string"
        }
      }
    },
    "GroupPrivilegeResponse" : {
      "type" : "object",
      "required" : [ "PrivilegeInfo/group_name" ],
      "properties" : {
        "permission_label" : {
          "type" : "string"
        },
        "privilege_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permission_name" : {
          "type" : "string"
        },
        "principal_type" : {
          "type" : "string",
          "enum" : [ "USER", "GROUP", "ROLE" ]
        },
        "principal_name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "AMBARI", "CLUSTER", "VIEW" ]
        },
        "cluster_name" : {
          "type" : "string"
        },
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "instance_name" : {
          "type" : "string"
        },
        "PrivilegeInfo/group_name" : {
          "type" : "string"
        }
      }
    },
    "GroupRequest" : {
      "type" : "object",
      "required" : [ "Groups/group_name" ],
      "properties" : {
        "Groups/group_name" : {
          "type" : "string"
        }
      }
    },
    "GroupResponse" : {
      "type" : "object",
      "properties" : {
        "Groups/group_name" : {
          "type" : "string"
        },
        "Groups/ldap_group" : {
          "type" : "boolean",
          "default" : false
        },
        "Groups/group_type" : {
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "JWT", "PAM" ]
        }
      }
    },
    "Host" : {
      "type" : "object",
      "properties" : {
        "httpProperty" : {
          "type" : "string"
        },
        "httpsProperty" : {
          "type" : "string"
        },
        "site" : {
          "type" : "string"
        }
      }
    },
    "HostComponentComponent" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "ServiceComponentInfo" : {
          "$ref" : "#/definitions/HostComponentServiceComponentInfo"
        }
      }
    },
    "HostComponentHost" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        }
      }
    },
    "HostComponentMetrics" : {
      "type" : "object"
    },
    "HostComponentProcessResponse" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "host_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "valueMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "HostComponentProcesses" : {
      "type" : "object"
    },
    "HostComponentServiceComponentInfo" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        }
      }
    },
    "HostComponentSwagger" : {
      "type" : "object",
      "properties" : {
        "host" : {
          "$ref" : "#/definitions/HostComponentHost"
        },
        "component" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostComponentComponent"
          }
        },
        "processes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostComponentProcesses"
          }
        },
        "HostRoles" : {
          "$ref" : "#/definitions/ServiceComponentHostResponse"
        },
        "metrics" : {
          "$ref" : "#/definitions/HostComponentMetrics"
        }
      }
    },
    "HostConfig" : {
      "type" : "object",
      "properties" : {
        "configGroupOverrides" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "defaultVersionTag" : {
          "type" : "string"
        }
      }
    },
    "HostGroupInfo" : {
      "type" : "object",
      "properties" : {
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentInfo"
          }
        },
        "configurations" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "name" : {
          "type" : "string"
        },
        "cardinality" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HostHealth" : {
      "type" : "object",
      "properties" : {
        "activeJavaProcs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JavaProc"
          }
        },
        "agentTimeStampAtReporting" : {
          "type" : "integer",
          "format" : "int64"
        },
        "serverTimeStampAtReporting" : {
          "type" : "integer",
          "format" : "int64"
        },
        "liveServices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LiveService"
          }
        }
      }
    },
    "HostOverride" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "versionTag" : {
          "type" : "string"
        }
      }
    },
    "HostRequest" : {
      "type" : "object",
      "properties" : {
        "host_name" : {
          "type" : "string"
        },
        "rack_info" : {
          "type" : "string"
        },
        "desired_configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigurationRequest"
          }
        },
        "maintenance_state" : {
          "type" : "string"
        },
        "public_host_name" : {
          "type" : "string"
        },
        "blueprint" : {
          "type" : "string"
        },
        "host_group" : {
          "type" : "string"
        }
      }
    },
    "HostResponse" : {
      "type" : "object",
      "properties" : {
        "host_name" : {
          "type" : "string"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "ip" : {
          "type" : "string"
        },
        "cpu_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ph_cpu_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "os_arch" : {
          "type" : "string"
        },
        "os_family" : {
          "type" : "string"
        },
        "os_type" : {
          "type" : "string"
        },
        "total_mem" : {
          "type" : "integer",
          "format" : "int64"
        },
        "disk_info" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DiskInfo"
          }
        },
        "last_heartbeat_time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "last_agent_env" : {
          "$ref" : "#/definitions/AgentEnv"
        },
        "last_registration_time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "rack_info" : {
          "type" : "string"
        },
        "recovery_report" : {
          "$ref" : "#/definitions/RecoveryReport"
        },
        "recovery_summary" : {
          "type" : "string"
        },
        "host_state" : {
          "type" : "string",
          "enum" : [ "INIT", "WAITING_FOR_HOST_STATUS_UPDATES", "HEALTHY", "HEARTBEAT_LOST", "UNHEALTHY" ]
        },
        "desired_configs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/HostConfig"
          }
        },
        "host_status" : {
          "type" : "string"
        },
        "maintenance_state" : {
          "type" : "string",
          "enum" : [ "OFF", "ON", "IMPLIED_FROM_SERVICE", "IMPLIED_FROM_HOST", "IMPLIED_FROM_SERVICE_AND_HOST" ]
        },
        "host_health_report" : {
          "type" : "string"
        },
        "public_host_name" : {
          "type" : "string"
        }
      }
    },
    "HostResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "Hosts" : {
          "$ref" : "#/definitions/HostResponse"
        }
      }
    },
    "JavaProc" : {
      "type" : "object",
      "properties" : {
        "hadoop" : {
          "type" : "boolean",
          "default" : false
        },
        "user" : {
          "type" : "string"
        },
        "pid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "command" : {
          "type" : "string"
        }
      }
    },
    "Layout" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "tabs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tab"
          }
        }
      }
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "componentName" : {
          "type" : "string"
        },
        "requiresUserName" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "port" : {
          "$ref" : "#/definitions/Port"
        },
        "host" : {
          "$ref" : "#/definitions/Host"
        },
        "protocol" : {
          "$ref" : "#/definitions/Protocol"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "visible" : {
          "type" : "boolean",
          "default" : false
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "LiveService" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        }
      }
    },
    "MemberRequest" : {
      "type" : "object",
      "required" : [ "MemberInfo/group_name", "MemberInfo/user_name" ],
      "properties" : {
        "MemberInfo/group_name" : {
          "type" : "string"
        },
        "MemberInfo/user_name" : {
          "type" : "string"
        }
      }
    },
    "MemberResponse" : {
      "type" : "object",
      "properties" : {
        "MemberInfo/group_name" : {
          "type" : "string"
        },
        "MemberInfo/user_name" : {
          "type" : "string"
        }
      }
    },
    "OperationLevel" : {
      "type" : "object",
      "properties" : {
        "level" : {
          "type" : "string"
        },
        "cluster_name" : {
          "type" : "string"
        }
      }
    },
    "Os" : {
      "type" : "object",
      "properties" : {
        "family" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "packageVersion" : {
          "type" : "string",
          "xml" : {
            "name" : "package-version"
          }
        },
        "repos" : {
          "type" : "array",
          "xml" : {
            "name" : "repo"
          },
          "items" : {
            "$ref" : "#/definitions/Repo"
          }
        }
      }
    },
    "PackageDetail" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "repoName" : {
          "type" : "string"
        }
      }
    },
    "ParameterConfig" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "placeholder" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string",
          "xml" : {
            "name" : "default-value"
          }
        },
        "clusterConfig" : {
          "type" : "string",
          "xml" : {
            "name" : "cluster-config"
          }
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "masked" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Placement" : {
      "type" : "object",
      "properties" : {
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigPlacement"
          }
        },
        "configurationLayout" : {
          "type" : "string"
        }
      }
    },
    "Port" : {
      "type" : "object",
      "properties" : {
        "httpProperty" : {
          "type" : "string"
        },
        "httpDefaultPort" : {
          "type" : "string"
        },
        "httpsProperty" : {
          "type" : "string"
        },
        "httpsDefaultPort" : {
          "type" : "string"
        },
        "regex" : {
          "type" : "string"
        },
        "httpsRegex" : {
          "type" : "string"
        },
        "site" : {
          "type" : "string"
        }
      }
    },
    "PrivilegeResponse" : {
      "type" : "object",
      "properties" : {
        "permission_label" : {
          "type" : "string"
        },
        "privilege_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permission_name" : {
          "type" : "string"
        },
        "principal_type" : {
          "type" : "string",
          "enum" : [ "USER", "GROUP", "ROLE" ]
        },
        "principal_name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "AMBARI", "CLUSTER", "VIEW" ]
        },
        "cluster_name" : {
          "type" : "string"
        },
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "instance_name" : {
          "type" : "string"
        }
      }
    },
    "PropertyDependencyInfo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Protocol" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "checks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Check"
          }
        }
      }
    },
    "QuickLinksConfiguration" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "$ref" : "#/definitions/Protocol"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      }
    },
    "QuickLinksResponse" : {
      "type" : "object",
      "properties" : {
        "QuickLinkInfo" : {
          "$ref" : "#/definitions/QuickLinksResponseInfo"
        }
      }
    },
    "QuickLinksResponseInfo" : {
      "type" : "object",
      "properties" : {
        "default" : {
          "type" : "boolean",
          "default" : false
        },
        "file_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "quicklink_data" : {
          "$ref" : "#/definitions/QuickLinksConfiguration"
        }
      }
    },
    "RecoveryReport" : {
      "type" : "object",
      "properties" : {
        "summary" : {
          "type" : "string"
        },
        "component_reports" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ComponentRecoveryReport"
          }
        }
      }
    },
    "Release" : {
      "type" : "object",
      "properties" : {
        "repositoryType" : {
          "type" : "string",
          "xml" : {
            "name" : "type"
          },
          "enum" : [ "STANDARD", "PATCH", "MAINT", "SERVICE" ]
        },
        "stackId" : {
          "type" : "string",
          "xml" : {
            "name" : "stack-id"
          }
        },
        "version" : {
          "type" : "string"
        },
        "build" : {
          "type" : "string"
        },
        "compatibleWith" : {
          "type" : "string",
          "xml" : {
            "name" : "compatible-with"
          }
        },
        "releaseNotes" : {
          "type" : "string",
          "xml" : {
            "name" : "release-notes"
          }
        },
        "display" : {
          "type" : "string"
        },
        "fullVersion" : {
          "type" : "string"
        }
      }
    },
    "Repo" : {
      "type" : "object",
      "properties" : {
        "distribution" : {
          "type" : "string"
        },
        "components" : {
          "type" : "string"
        },
        "unique" : {
          "type" : "boolean",
          "default" : false
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "GPL" ]
          }
        },
        "repoName" : {
          "type" : "string"
        },
        "baseUrl" : {
          "type" : "string"
        },
        "mirrorsList" : {
          "type" : "string"
        },
        "repoId" : {
          "type" : "string"
        }
      }
    },
    "RepoDefinitionEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "repoOs" : {
          "$ref" : "#/definitions/RepoOsEntity"
        },
        "repoName" : {
          "type" : "string"
        },
        "repoID" : {
          "type" : "string"
        },
        "baseUrl" : {
          "type" : "string"
        },
        "mirrors" : {
          "type" : "string"
        },
        "distribution" : {
          "type" : "string"
        },
        "components" : {
          "type" : "string"
        },
        "unique" : {
          "type" : "boolean",
          "default" : false
        },
        "applicableServices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "GPL" ]
          }
        }
      }
    },
    "RepoOsEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "family" : {
          "type" : "string"
        },
        "ambariManaged" : {
          "type" : "boolean",
          "default" : false
        },
        "repoDefinitionEntities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RepoDefinitionEntity"
          }
        },
        "repositoryVersionEntity" : {
          "$ref" : "#/definitions/RepositoryVersionEntity"
        }
      }
    },
    "RepositoryInfo" : {
      "type" : "object",
      "properties" : {
        "baseUrl" : {
          "type" : "string"
        },
        "osType" : {
          "type" : "string"
        },
        "repoId" : {
          "type" : "string"
        },
        "repoName" : {
          "type" : "string"
        },
        "distribution" : {
          "type" : "string"
        },
        "components" : {
          "type" : "string"
        },
        "mirrorsList" : {
          "type" : "string"
        },
        "defaultBaseUrl" : {
          "type" : "string"
        },
        "repoSaved" : {
          "type" : "boolean",
          "default" : false
        },
        "unique" : {
          "type" : "boolean",
          "default" : false
        },
        "ambariManagedRepositories" : {
          "type" : "boolean",
          "default" : false
        },
        "applicableServices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "GPL" ]
          }
        }
      }
    },
    "RepositoryVersionEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stack" : {
          "$ref" : "#/definitions/StackEntity"
        },
        "version" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "repoOsEntities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RepoOsEntity"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STANDARD", "PATCH", "MAINT", "SERVICE" ]
        },
        "versionXml" : {
          "type" : "string"
        },
        "versionUrl" : {
          "type" : "string"
        },
        "versionXsd" : {
          "type" : "string"
        },
        "resolved" : {
          "type" : "boolean",
          "default" : false
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RepositoryVersionEntity"
          }
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "stackVersion" : {
          "type" : "string"
        },
        "stackId" : {
          "$ref" : "#/definitions/StackId"
        },
        "stackName" : {
          "type" : "string"
        },
        "repositoryXml" : {
          "$ref" : "#/definitions/VersionDefinitionXml"
        },
        "legacy" : {
          "type" : "boolean",
          "default" : false
        },
        "parentId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RepositoryXml" : {
      "type" : "object",
      "properties" : {
        "oses" : {
          "type" : "array",
          "xml" : {
            "name" : "os"
          },
          "items" : {
            "$ref" : "#/definitions/Os"
          }
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "repositories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RepositoryInfo"
          }
        },
        "latestURI" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "reposinfo"
      }
    },
    "Request" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "resource_filters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RequestResourceFilter"
          }
        },
        "exclusive" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "RequestBodyInfo" : {
      "type" : "object",
      "properties" : {
        "Requests/resource_filters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RequestResourceFilter"
          }
        },
        "RequestInfo" : {
          "$ref" : "#/definitions/RequestInfo"
        }
      }
    },
    "RequestInfo" : {
      "type" : "object",
      "properties" : {
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "action" : {
          "type" : "string"
        },
        "command" : {
          "type" : "string"
        },
        "operation_level" : {
          "$ref" : "#/definitions/OperationLevel"
        }
      }
    },
    "RequestPostRequest" : {
      "type" : "object",
      "properties" : {
        "Body" : {
          "$ref" : "#/definitions/Body"
        },
        "RequestInfo" : {
          "$ref" : "#/definitions/RequestInfo"
        }
      }
    },
    "RequestPostResponse" : {
      "type" : "object",
      "properties" : {
        "Requests" : {
          "$ref" : "#/definitions/ShortRequestInfo"
        }
      }
    },
    "RequestPutRequest" : {
      "type" : "object",
      "properties" : {
        "Requests" : {
          "$ref" : "#/definitions/RequestRequest"
        }
      }
    },
    "RequestRequest" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "request_status" : {
          "type" : "string",
          "enum" : [ "PENDING", "QUEUED", "IN_PROGRESS", "HOLDING", "COMPLETED", "FAILED", "HOLDING_FAILED", "TIMEDOUT", "HOLDING_TIMEDOUT", "ABORTED", "SKIPPED_FAILED" ]
        },
        "abort_reason" : {
          "type" : "string"
        },
        "removePendingHostRequests" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "RequestResourceFilter" : {
      "type" : "object",
      "properties" : {
        "hosts" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "hosts_predicate" : {
          "type" : "string"
        }
      }
    },
    "RequestResponse" : {
      "type" : "object",
      "properties" : {
        "Requests" : {
          "$ref" : "#/definitions/RequestStatusInfo"
        }
      }
    },
    "RequestScheduleRequestElement" : {
      "type" : "object",
      "properties" : {
        "schedule" : {
          "$ref" : "#/definitions/ScheduleRequest"
        },
        "batch" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BatchRequest"
          }
        }
      }
    },
    "RequestScheduleRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "RequestSchedule" : {
          "$ref" : "#/definitions/RequestScheduleRequestElement"
        }
      }
    },
    "RequestScheduleResponseElement" : {
      "type" : "object",
      "properties" : {
        "schedule" : {
          "$ref" : "#/definitions/ScheduleResponse"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "last_execution_status" : {
          "type" : "string"
        },
        "authenticated_user" : {
          "type" : "integer",
          "format" : "int32"
        },
        "batch" : {
          "$ref" : "#/definitions/BatchResponse"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "create_time" : {
          "type" : "string"
        },
        "update_time" : {
          "type" : "string"
        },
        "create_user" : {
          "type" : "string"
        },
        "update_user" : {
          "type" : "string"
        }
      }
    },
    "RequestScheduleResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "RequestSchedule" : {
          "$ref" : "#/definitions/RequestScheduleResponseElement"
        }
      }
    },
    "RequestStatusInfo" : {
      "type" : "object",
      "properties" : {
        "task_count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "completed_task_count" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "start_time" : {
          "type" : "string"
        },
        "request_context" : {
          "type" : "string"
        },
        "request_status" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "end_time" : {
          "type" : "string"
        },
        "request_schedule" : {
          "type" : "string"
        },
        "cluster_name" : {
          "type" : "string"
        },
        "create_time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "inputs" : {
          "type" : "string"
        },
        "operation_level" : {
          "type" : "string"
        },
        "resource_filters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RequestResourceFilter"
          }
        },
        "exclusive" : {
          "type" : "boolean",
          "default" : false
        },
        "aborted_task_count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "failed_task_count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "progress_percent" : {
          "type" : "number",
          "format" : "double"
        },
        "queued_task_count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "request_schedule_id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RootServiceComponentConfigurationRequestInfo" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "categoryName" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "componentName" : {
          "type" : "string"
        }
      }
    },
    "RootServiceComponentConfigurationRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "Configuration" : {
          "$ref" : "#/definitions/RootServiceComponentConfigurationRequestInfo"
        }
      }
    },
    "RootServiceComponentConfigurationResponseInfo" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "categoryName" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "componentName" : {
          "type" : "string"
        }
      }
    },
    "RootServiceComponentConfigurationResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "Configuration" : {
          "$ref" : "#/definitions/RootServiceComponentConfigurationResponseInfo"
        }
      }
    },
    "RootServiceComponentResponse" : {
      "type" : "object",
      "properties" : {
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "component_version" : {
          "type" : "string"
        },
        "server_clock" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RootServiceComponentResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "RootServiceComponents" : {
          "$ref" : "#/definitions/RootServiceComponentResponse"
        }
      }
    },
    "RootServiceComponentWithHostComponentList" : {
      "type" : "object",
      "properties" : {
        "hostComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RootServiceHostComponentResponseWrapper"
          }
        },
        "RootServiceComponents" : {
          "$ref" : "#/definitions/RootServiceComponentResponse"
        }
      }
    },
    "RootServiceHostComponentResponse" : {
      "type" : "object",
      "properties" : {
        "service_name" : {
          "type" : "string"
        },
        "host_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "component_state" : {
          "type" : "string"
        },
        "component_version" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "RootServiceHostComponentResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "RootServiceHostComponents" : {
          "$ref" : "#/definitions/RootServiceHostComponentResponse"
        }
      }
    },
    "RootServiceResponse" : {
      "type" : "object",
      "properties" : {
        "service_name" : {
          "type" : "string"
        }
      }
    },
    "RootServiceResponseWithComponentList" : {
      "type" : "object",
      "properties" : {
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RootServiceComponentResponseWrapper"
          }
        },
        "RootService" : {
          "$ref" : "#/definitions/RootServiceResponse"
        }
      }
    },
    "RootServiceResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "RootService" : {
          "$ref" : "#/definitions/RootServiceResponse"
        }
      }
    },
    "ScheduleRequest" : {
      "type" : "object",
      "properties" : {
        "day_of_week" : {
          "type" : "string"
        },
        "month" : {
          "type" : "string"
        },
        "hours" : {
          "type" : "string"
        },
        "minutes" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string"
        },
        "days_of_month" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string"
        }
      }
    },
    "ScheduleResponse" : {
      "type" : "object",
      "properties" : {
        "day_of_week" : {
          "type" : "string"
        },
        "month" : {
          "type" : "string"
        },
        "hours" : {
          "type" : "string"
        },
        "minutes" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "start_time" : {
          "type" : "string"
        },
        "days_of_month" : {
          "type" : "string"
        },
        "end_time" : {
          "type" : "string"
        }
      }
    },
    "Section" : {
      "type" : "object",
      "properties" : {
        "subsections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Subsection"
          }
        },
        "display-name" : {
          "type" : "string"
        },
        "row-index" : {
          "type" : "string"
        },
        "section-rows" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "column-span" : {
          "type" : "string"
        },
        "section-columns" : {
          "type" : "string"
        },
        "column-index" : {
          "type" : "string"
        },
        "row-span" : {
          "type" : "string"
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "SecurityInfo" : {
      "type" : "object",
      "properties" : {
        "kerberos_descriptor" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "security_type" : {
          "type" : "string",
          "enum" : [ "NONE", "KERBEROS" ]
        },
        "kerberos_descriptor_reference" : {
          "type" : "string"
        }
      }
    },
    "ServiceComponentHostResponse" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "display_name" : {
          "type" : "string"
        },
        "public_host_name" : {
          "type" : "string"
        },
        "host_name" : {
          "type" : "string"
        },
        "actual_configs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/HostConfig"
          }
        },
        "state" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "desired_stack_id" : {
          "type" : "string"
        },
        "desired_repository_version" : {
          "type" : "string"
        },
        "desired_state" : {
          "type" : "string"
        },
        "stale_configs" : {
          "type" : "boolean",
          "default" : false
        },
        "reload_configs" : {
          "type" : "boolean",
          "default" : false
        },
        "maintenance_state" : {
          "type" : "string"
        },
        "upgrade_state" : {
          "type" : "string",
          "enum" : [ "NONE", "COMPLETE", "IN_PROGRESS", "FAILED", "VERSION_MISMATCH" ]
        }
      }
    },
    "ServiceConfigVersionRequest" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "service_config_version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createtime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "appliedtime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "type" : "string"
        },
        "service_config_version_note" : {
          "type" : "string"
        },
        "is_current" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ServiceConfigVersionResponse" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "service_config_version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createtime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "group_name" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "service_config_version_note" : {
          "type" : "string"
        },
        "stack_id" : {
          "type" : "string"
        },
        "is_current" : {
          "type" : "boolean",
          "default" : false
        },
        "configurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigurationResponse"
          }
        },
        "hosts" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "is_cluster_compatible" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ServiceRequest" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "maintenance_state" : {
          "type" : "string"
        },
        "credential_store_enabled" : {
          "type" : "string"
        },
        "credential_store_supporteds" : {
          "type" : "string"
        },
        "desiredRepositoryVersionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resolvedRepository" : {
          "$ref" : "#/definitions/RepositoryVersionEntity"
        }
      }
    },
    "ServiceRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "ServiceInfo" : {
          "$ref" : "#/definitions/ServiceRequest"
        }
      }
    },
    "ServiceResponse" : {
      "type" : "object",
      "properties" : {
        "cluster_name" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "desiredRepositoryVersion" : {
          "type" : "string"
        },
        "desiredRepositoryVersionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "repositoryVersionState" : {
          "type" : "string",
          "enum" : [ "NOT_REQUIRED", "INSTALLING", "INSTALLED", "INSTALL_FAILED", "OUT_OF_SYNC", "CURRENT" ]
        },
        "state" : {
          "type" : "string"
        },
        "maintenance_state" : {
          "type" : "string"
        },
        "credential_store_supported" : {
          "type" : "boolean",
          "default" : false
        },
        "credential_store_enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_supported" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_desired" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_requires_kerberos" : {
          "type" : "boolean",
          "default" : false
        },
        "kerberos_enabled" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ServiceResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "ServiceInfo" : {
          "$ref" : "#/definitions/ServiceResponse"
        }
      }
    },
    "SettingRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "setting_type" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        }
      }
    },
    "SettingRequestSwagger" : {
      "type" : "object",
      "properties" : {
        "Settings" : {
          "$ref" : "#/definitions/SettingRequest"
        }
      }
    },
    "SettingResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "setting_type" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "updated_by" : {
          "type" : "string"
        },
        "update_timestamp" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SettingResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "Settings" : {
          "$ref" : "#/definitions/SettingResponse"
        }
      }
    },
    "ShortRequestInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "StackArtifactResponse" : {
      "type" : "object",
      "properties" : {
        "Artifacts" : {
          "$ref" : "#/definitions/Artifacts"
        },
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StackConfigurationDependencyResponse" : {
      "type" : "object",
      "properties" : {
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "property_name" : {
          "type" : "string"
        },
        "dependency_name" : {
          "type" : "string"
        },
        "dependency_type" : {
          "type" : "string"
        }
      }
    },
    "StackConfigurationDependencyResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "StackConfigurationDependency" : {
          "$ref" : "#/definitions/StackConfigurationDependencyResponse"
        }
      }
    },
    "StackConfigurationResponse" : {
      "type" : "object",
      "properties" : {
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "property_name" : {
          "type" : "string"
        },
        "property_value" : {
          "type" : "string"
        },
        "property_description" : {
          "type" : "string"
        },
        "property_display_name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "property_value_attributes" : {
          "$ref" : "#/definitions/ValueAttributesInfo"
        },
        "dependencies" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PropertyDependencyInfo"
          }
        },
        "property_type" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "PASSWORD", "USER", "UID", "GROUP", "GID", "TEXT", "ADDITIONAL_USER_PROPERTY", "NOT_MANAGED_HDFS_PATH", "VALUE_FROM_PROPERTY_FILE", "KERBEROS_PRINCIPAL" ]
          }
        }
      }
    },
    "StackConfigurationResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "StackConfigurations" : {
          "$ref" : "#/definitions/StackConfigurationResponse"
        }
      }
    },
    "StackEntity" : {
      "type" : "object",
      "properties" : {
        "stackId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stackName" : {
          "type" : "string"
        },
        "stackVersion" : {
          "type" : "string"
        }
      }
    },
    "StackId" : {
      "type" : "object",
      "properties" : {
        "stackName" : {
          "type" : "string"
        },
        "stackVersion" : {
          "type" : "string"
        },
        "stackId" : {
          "type" : "string"
        }
      }
    },
    "StackResponse" : {
      "type" : "object",
      "properties" : {
        "stack_name" : {
          "type" : "string"
        }
      }
    },
    "StackResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "Stacks" : {
          "$ref" : "#/definitions/StackResponse"
        }
      }
    },
    "StackServiceArtifactResponse" : {
      "type" : "object",
      "properties" : {
        "Artifacts" : {
          "$ref" : "#/definitions/Artifacts"
        },
        "artifact_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StackServiceComponentResponse" : {
      "type" : "object",
      "properties" : {
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "display_name" : {
          "type" : "string"
        },
        "component_category" : {
          "type" : "string"
        },
        "cardinality" : {
          "type" : "string"
        },
        "advertise_version" : {
          "type" : "boolean",
          "default" : false
        },
        "rollingRestartSupported" : {
          "type" : "boolean",
          "default" : false
        },
        "customCommands" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "custom_commands" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "recovery_enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "bulkCommandsDisplayName" : {
          "type" : "string"
        },
        "componentType" : {
          "type" : "string"
        },
        "is_master" : {
          "type" : "boolean",
          "default" : false
        },
        "bulk_commands_master_component_namen" : {
          "type" : "string"
        },
        "is_client" : {
          "type" : "boolean",
          "default" : false
        },
        "decommission_allowed" : {
          "type" : "boolean",
          "default" : false
        },
        "reassign_allowed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "StackServiceComponentResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "StackServiceComponents" : {
          "$ref" : "#/definitions/StackServiceComponentResponse"
        }
      }
    },
    "StackServiceResponse" : {
      "type" : "object",
      "properties" : {
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "service_type" : {
          "type" : "string"
        },
        "display_name" : {
          "type" : "string"
        },
        "user_name" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "service_version" : {
          "type" : "string"
        },
        "selection" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "TECH_PREVIEW", "MANDATORY", "DEPRECATED" ]
        },
        "service_check_supported" : {
          "type" : "boolean",
          "default" : false
        },
        "custom_commands" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "config_types" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        },
        "required_services" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "credential_store_supported" : {
          "type" : "boolean",
          "default" : false
        },
        "credential_store_enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "credential_store_required" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_supported" : {
          "type" : "boolean",
          "default" : false
        },
        "sso_integration_requires_kerberos" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "StackServiceResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "StackServices" : {
          "$ref" : "#/definitions/StackServiceResponse"
        }
      }
    },
    "StackVersionResponse" : {
      "type" : "object",
      "properties" : {
        "min_jdk" : {
          "type" : "string"
        },
        "max_jdk" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "min_upgrade_version" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "parent_stack_version" : {
          "type" : "string"
        },
        "config_types" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        },
        "upgrade_packs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "stack-errors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "StackVersionResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "Versions" : {
          "$ref" : "#/definitions/StackVersionResponse"
        }
      }
    },
    "Subsection" : {
      "type" : "object",
      "properties" : {
        "row-index" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "display-name" : {
          "type" : "string"
        },
        "column-span" : {
          "type" : "string"
        },
        "row-span" : {
          "type" : "string"
        },
        "column-index" : {
          "type" : "string"
        },
        "border" : {
          "type" : "string"
        },
        "left-vertical-splitter" : {
          "type" : "boolean",
          "default" : false
        },
        "depends-on" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigCondition"
          }
        },
        "subsection-tab" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubsectionTab"
          }
        },
        "removed" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "SubsectionTab" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "dependsOn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigCondition"
          }
        }
      }
    },
    "Tab" : {
      "type" : "object",
      "properties" : {
        "display-name" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "layout" : {
          "$ref" : "#/definitions/TabLayout"
        }
      }
    },
    "TabLayout" : {
      "type" : "object",
      "properties" : {
        "tab-rows" : {
          "type" : "string"
        },
        "sections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Section"
          }
        },
        "tab-columns" : {
          "type" : "string"
        }
      }
    },
    "Theme" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "configuration" : {
          "$ref" : "#/definitions/ThemeConfiguration"
        }
      }
    },
    "ThemeConfiguration" : {
      "type" : "object",
      "properties" : {
        "placement" : {
          "$ref" : "#/definitions/Placement"
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetEntry"
          }
        },
        "layouts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Layout"
          }
        }
      }
    },
    "ThemeInfoResponse" : {
      "type" : "object",
      "properties" : {
        "default" : {
          "type" : "boolean",
          "default" : false
        },
        "file_name" : {
          "type" : "string"
        },
        "stack_version" : {
          "type" : "string"
        },
        "service_name" : {
          "type" : "string"
        },
        "stack_name" : {
          "type" : "string"
        },
        "theme_data" : {
          "$ref" : "#/definitions/Theme"
        }
      }
    },
    "ThemeResponse" : {
      "type" : "object",
      "properties" : {
        "ThemeInfo" : {
          "$ref" : "#/definitions/ThemeInfoResponse"
        }
      }
    },
    "Unit" : {
      "type" : "object",
      "properties" : {
        "unit-name" : {
          "type" : "string"
        }
      }
    },
    "UpdateUserInfo" : {
      "type" : "object",
      "properties" : {
        "display_name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "password" : {
          "type" : "string"
        },
        "admin" : {
          "type" : "boolean",
          "default" : false
        },
        "old_password" : {
          "type" : "string"
        },
        "local_user_name" : {
          "type" : "string"
        }
      }
    },
    "UserAuthenticationSourceRequestCreateSwagger" : {
      "type" : "object",
      "properties" : {
        "AuthenticationSourceInfo" : {
          "$ref" : "#/definitions/CreateUserAuthenticationSourceInfo"
        }
      }
    },
    "UserAuthenticationSourceRequestUpdateInfo" : {
      "type" : "object",
      "required" : [ "key" ],
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "old_key" : {
          "type" : "string"
        }
      }
    },
    "UserAuthenticationSourceRequestUpdateSwagger" : {
      "type" : "object",
      "properties" : {
        "AuthenticationSourceInfo" : {
          "$ref" : "#/definitions/UserAuthenticationSourceRequestUpdateInfo"
        }
      }
    },
    "UserAuthenticationSourceResponse" : {
      "type" : "object",
      "required" : [ "authentication_type", "source_id", "user_name" ],
      "properties" : {
        "user_name" : {
          "type" : "string"
        },
        "source_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authentication_type" : {
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "JWT", "PAM", "KERBEROS" ]
        },
        "key" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "UserAuthenticationSourceResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "AuthenticationSourceInfo" : {
          "$ref" : "#/definitions/UserAuthenticationSourceResponse"
        }
      }
    },
    "UserAuthorizationResponse" : {
      "type" : "object",
      "required" : [ "AuthorizationInfo/user_name" ],
      "properties" : {
        "AuthorizationInfo/authorization_id" : {
          "type" : "string"
        },
        "AuthorizationInfo/authorization_name" : {
          "type" : "string"
        },
        "AuthorizationInfo/resource_type" : {
          "type" : "string"
        },
        "AuthorizationInfo/user_name" : {
          "type" : "string"
        },
        "AuthorizationInfo/cluster_name" : {
          "type" : "string"
        },
        "AuthorizationInfo/view_name" : {
          "type" : "string"
        },
        "AuthorizationInfo/view_version" : {
          "type" : "string"
        },
        "AuthorizationInfo/view_instance_name" : {
          "type" : "string"
        }
      }
    },
    "UserGroupInfo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "UserPrivilegeResponse" : {
      "type" : "object",
      "required" : [ "PrivilegeInfo/user_name" ],
      "properties" : {
        "permission_label" : {
          "type" : "string"
        },
        "privilege_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permission_name" : {
          "type" : "string"
        },
        "principal_type" : {
          "type" : "string",
          "enum" : [ "USER", "GROUP", "ROLE" ]
        },
        "principal_name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "AMBARI", "CLUSTER", "VIEW" ]
        },
        "cluster_name" : {
          "type" : "string"
        },
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "instance_name" : {
          "type" : "string"
        },
        "PrivilegeInfo/user_name" : {
          "type" : "string"
        }
      }
    },
    "UserRequestCreateUserSwagger" : {
      "type" : "object",
      "properties" : {
        "Users" : {
          "$ref" : "#/definitions/CreateUserInfo"
        }
      }
    },
    "UserRequestCreateUsersSwagger" : {
      "type" : "object",
      "properties" : {
        "Users" : {
          "$ref" : "#/definitions/CreateUsersInfo"
        }
      }
    },
    "UserRequestUpdateUserSwagger" : {
      "type" : "object",
      "properties" : {
        "Users" : {
          "$ref" : "#/definitions/UpdateUserInfo"
        }
      }
    },
    "UserResponse" : {
      "type" : "object",
      "properties" : {
        "display_name" : {
          "type" : "string"
        },
        "user_type" : {
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "JWT", "PAM", "KERBEROS" ]
        },
        "groups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "consecutive_failures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "user_name" : {
          "type" : "string"
        },
        "ldap_user" : {
          "type" : "boolean",
          "default" : false
        },
        "admin" : {
          "type" : "boolean",
          "default" : false
        },
        "local_user_name" : {
          "type" : "string"
        }
      }
    },
    "UserResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "Users" : {
          "$ref" : "#/definitions/UserResponse"
        }
      }
    },
    "ValidationResult" : {
      "type" : "object",
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "detail" : {
          "type" : "string"
        }
      }
    },
    "ValueAttributesInfo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "maximum" : {
          "type" : "string"
        },
        "minimum" : {
          "type" : "string"
        },
        "unit" : {
          "type" : "string"
        },
        "delete" : {
          "type" : "string"
        },
        "visible" : {
          "type" : "boolean",
          "default" : false
        },
        "overridable" : {
          "type" : "boolean",
          "default" : false
        },
        "copy" : {
          "type" : "string"
        },
        "empty_value_valid" : {
          "type" : "boolean",
          "xml" : {
            "name" : "empty-value-valid"
          },
          "default" : false
        },
        "ui_only_property" : {
          "type" : "boolean",
          "xml" : {
            "name" : "ui-only-property"
          },
          "default" : false
        },
        "read_only" : {
          "type" : "boolean",
          "xml" : {
            "name" : "read-only"
          },
          "default" : false
        },
        "editable_only_at_install" : {
          "type" : "boolean",
          "xml" : {
            "name" : "editable-only-at-install"
          },
          "default" : false
        },
        "show_property_name" : {
          "type" : "boolean",
          "xml" : {
            "name" : "show-property-name"
          },
          "default" : false
        },
        "increment_step" : {
          "type" : "string",
          "xml" : {
            "name" : "increment-step"
          }
        },
        "entries" : {
          "type" : "array",
          "xml" : {
            "name" : "entries",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/ValueEntryInfo"
          }
        },
        "hidden" : {
          "type" : "string"
        },
        "entries_editable" : {
          "type" : "boolean",
          "default" : false
        },
        "selection_cardinality" : {
          "type" : "string",
          "xml" : {
            "name" : "selection-cardinality"
          }
        },
        "property-file-name" : {
          "type" : "string"
        },
        "property-file-type" : {
          "type" : "string"
        },
        "user-group-entries" : {
          "type" : "array",
          "xml" : {
            "name" : "user-groups",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/UserGroupInfo"
          }
        },
        "keystore" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ValueEntryInfo" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "VersionDefinitionXml" : {
      "type" : "object",
      "properties" : {
        "release" : {
          "$ref" : "#/definitions/Release"
        },
        "repositoryInfo" : {
          "xml" : {
            "name" : "repository-info"
          },
          "$ref" : "#/definitions/RepositoryXml"
        },
        "xsdLocation" : {
          "type" : "string"
        },
        "stackDefault" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "repository-version"
      }
    },
    "ViewInfo" : {
      "type" : "object",
      "properties" : {
        "view_name" : {
          "type" : "string"
        }
      }
    },
    "ViewInstanceResponse" : {
      "type" : "object",
      "properties" : {
        "ViewInstanceInfo" : {
          "$ref" : "#/definitions/ViewInstanceResponseInfo"
        }
      }
    },
    "ViewInstanceResponseInfo" : {
      "type" : "object",
      "properties" : {
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "instance_name" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "visible" : {
          "type" : "boolean",
          "default" : false
        },
        "icon_path" : {
          "type" : "string"
        },
        "icon64_path" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "instance_data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "cluster_handle" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cluster_type" : {
          "type" : "string",
          "enum" : [ "LOCAL_AMBARI", "REMOTE_AMBARI", "NONE" ]
        },
        "context_path" : {
          "type" : "string"
        },
        "static" : {
          "type" : "boolean",
          "default" : false
        },
        "short_url" : {
          "type" : "string"
        },
        "short_url_name" : {
          "type" : "string"
        },
        "validation_result" : {
          "$ref" : "#/definitions/ValidationResult"
        },
        "property_validation_results" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ValidationResult"
          }
        }
      }
    },
    "ViewPermissionInfo" : {
      "type" : "object",
      "properties" : {
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "permission_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permission_name" : {
          "type" : "string"
        },
        "resource_name" : {
          "type" : "string"
        }
      }
    },
    "ViewPermissionResponse" : {
      "type" : "object",
      "properties" : {
        "PermissionInfo" : {
          "$ref" : "#/definitions/ViewPermissionInfo"
        }
      }
    },
    "ViewPrivilegeResponse" : {
      "type" : "object",
      "properties" : {
        "permission_label" : {
          "type" : "string"
        },
        "privilege_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permission_name" : {
          "type" : "string"
        },
        "principal_type" : {
          "type" : "string",
          "enum" : [ "USER", "GROUP", "ROLE" ]
        },
        "principal_name" : {
          "type" : "string"
        },
        "view_name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "instance_name" : {
          "type" : "string"
        }
      }
    },
    "ViewPrivilegeResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "PrivilegeInfo" : {
          "$ref" : "#/definitions/ViewPrivilegeResponse"
        }
      }
    },
    "ViewPrivilegeService" : {
      "type" : "object"
    },
    "ViewResponse" : {
      "type" : "object",
      "properties" : {
        "ViewInfo" : {
          "$ref" : "#/definitions/ViewInfo"
        }
      }
    },
    "ViewUrlInfo" : {
      "type" : "object",
      "properties" : {
        "view_instance_name" : {
          "type" : "string"
        },
        "url_suffix" : {
          "type" : "string"
        },
        "view_instance_version" : {
          "type" : "string"
        },
        "view_instance_common_name" : {
          "type" : "string"
        },
        "url_name" : {
          "type" : "string"
        }
      }
    },
    "ViewUrlResponseSwagger" : {
      "type" : "object",
      "properties" : {
        "ViewUrlInfo" : {
          "$ref" : "#/definitions/ViewUrlInfo"
        }
      }
    },
    "ViewVersionInfo" : {
      "type" : "object",
      "properties" : {
        "archive" : {
          "type" : "string"
        },
        "build_number" : {
          "type" : "string"
        },
        "cluster_configurable" : {
          "type" : "boolean",
          "default" : false
        },
        "description" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "masker_class" : {
          "type" : "string"
        },
        "max_ambari_version" : {
          "type" : "string"
        },
        "min_ambari_version" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParameterConfig"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PENDING", "DEPLOYING", "DEPLOYED", "ERROR" ]
        },
        "status_detail" : {
          "type" : "string"
        },
        "system" : {
          "type" : "boolean",
          "default" : false
        },
        "version" : {
          "type" : "string"
        },
        "view_name" : {
          "type" : "string"
        }
      }
    },
    "ViewVersionResponse" : {
      "type" : "object",
      "properties" : {
        "ViewVersionInfo" : {
          "$ref" : "#/definitions/ViewVersionInfo"
        }
      }
    },
    "Widget" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "units" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Unit"
          }
        },
        "required-properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "display-name" : {
          "type" : "string"
        }
      }
    },
    "WidgetEntry" : {
      "type" : "object",
      "properties" : {
        "config" : {
          "type" : "string"
        },
        "widget" : {
          "$ref" : "#/definitions/Widget"
        }
      }
    },
    "WidgetLayoutIdWrapper" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "WidgetResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "widgetName" : {
          "type" : "string"
        },
        "widgetType" : {
          "type" : "string"
        },
        "metrics" : {
          "type" : "string"
        },
        "timeCreated" : {
          "type" : "integer",
          "format" : "int64"
        },
        "author" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string"
        },
        "widgetValues" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "string"
        },
        "clusterName" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        }
      }
    }
  }
}