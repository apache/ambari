<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<assembly>
  <id>dist</id>
  <formats>
    <format>dir</format>
    <format>tar.gz</format>
  </formats>
  <includeBaseDirectory>false</includeBaseDirectory>
  <!-- File sets. Syntax:
	  <fileSets>
	    <fileSet>
	      <useDefaultExcludes/>
	      <outputDirectory/>
	      <includes/>
	      <excludes/>
	      <fileMode/>
	      <directoryMode/>
	      <directory/>
	      <lineEnding/>
	      <filtered/>
	    </fileSet>
	  </fileSets>
  -->
  <fileSets>
    <fileSet>
      <directory>${ambari-web-dir}</directory>
      <outputDirectory>/usr/lib/ambari-server/web</outputDirectory>
    </fileSet>
    <fileSet>
      <directory>${project.basedir}/../ambari-common/src/main/python/ambari_commons</directory>
      <outputDirectory>${ambari_commons.install.dir}</outputDirectory>
    </fileSet>
    <fileSet>
      <directory>${resourceManagementSrcLocation}</directory>
      <outputDirectory>${resource_management.install.dir}</outputDirectory>
    </fileSet>
    <fileSet>
      <directory>${project.basedir}/../ambari-common/src/main/python/ambari_jinja2/ambari_jinja2</directory>
      <outputDirectory>${jinja.install.dir}</outputDirectory>
      <excludes>
      	<exclude>**/testsuite/**</exclude>
      </excludes>
    </fileSet>
    <fileSet>
      <directory>${project.basedir}/../ambari-common/src/main/python/ambari_simplejson</directory>
      <outputDirectory>${simplejson.install.dir}</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>700</fileMode>
      <directory>src/main/resources/db</directory>
      <outputDirectory>/var/lib/ambari-server/keys/db</outputDirectory>
    </fileSet>
    <fileSet>
      <directoryMode>755</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/run/ambari-server</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>755</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/run/ambari-server/bootstrap</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>755</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/run/ambari-server/stack-recommendations</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>755</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/log/ambari-server</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>777</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/lib/ambari-server/data/tmp</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>700</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/lib/ambari-server/data/cache</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <directoryMode>700</directoryMode>
      <directory>${empty.dir}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/upgrade</outputDirectory>
	  <excludes>
	    <exclude>*/**</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/scripts</directory>
      <outputDirectory>/var/lib/ambari-server/resources/scripts</outputDirectory>
      <excludes>
        <exclude>post-user-creation-hook.sh</exclude>
      </excludes>
    </fileSet>
    <fileSet>
      <fileMode>644</fileMode>
      <directory>${ambari-admin-dir}/target</directory>
      <outputDirectory>/var/lib/ambari-server/resources/views</outputDirectory>
      <includes>
        <include>*.jar</include>
      </includes>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/upgrade/ddl</directory>
      <outputDirectory>/var/lib/ambari-server/resources/upgrade/ddl</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/upgrade/dml</directory>
      <outputDirectory>/var/lib/ambari-server/resources/upgrade/dml</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>${commonServicesSrcLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/common-services</outputDirectory>
      <excludes>
	    <exclude>/STORM/0.9.1/package/files/wordCount.jar</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <fileMode>644</fileMode>
      <directory>${commonServicesSrcLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/common-services</outputDirectory>
      <includes>
	    <include>/STORM/0.9.1/package/files/wordCount.jar</include>
	  </includes>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>${stackHooksLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/stack-hooks</outputDirectory>
      <excludes>
	    <exclude>/before-START/files/fast-hdfs-resource.jar</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <fileMode>644</fileMode>
      <directory>${stackHooksLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/stack-hooks</outputDirectory>
      <includes>
	    <include>/before-START/files/fast-hdfs-resource.jar</include>
	  </includes>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/upgrade/catalog</directory>
      <outputDirectory>/var/lib/ambari-server/resources/upgrade/catalog</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>${stacksSrcLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/stacks/${stack.distribution}</outputDirectory>
      <excludes>
	    <exclude>/2.1.GlusterFS/services/STORM/package/files/wordCount.jar</exclude>
	  </excludes>
    </fileSet>
    <fileSet>
      <fileMode>644</fileMode>
      <directory>${stacksSrcLocation}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/stacks/${stack.distribution}</outputDirectory>
      <includes>
	    <include>/2.1.GlusterFS/services/STORM/package/files/wordCount.jar</include>
	  </includes>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/python/ambari_server</directory>
      <outputDirectory>/usr/lib/ambari-server/lib/ambari_server</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/custom_action_definitions</directory>
      <outputDirectory>/var/lib/ambari-server/resources/custom_action_definitions</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>${customActionsRoot}</directory>
      <outputDirectory>/var/lib/ambari-server/resources/custom_actions</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>src/main/resources/host_scripts</directory>
      <outputDirectory>/var/lib/ambari-server/resources/host_scripts</outputDirectory>
    </fileSet>
    <fileSet>
      <fileMode>755</fileMode>
      <directory>etc/init</directory>
      <outputDirectory>/etc/init</outputDirectory>
    </fileSet>
  </fileSets>
  <!-- Single files. Syntax:
	  <files>
	    <file>
	      <source/>
	      <outputDirectory/>
	      <destName/>
	      <fileMode/>
	      <lineEnding/>
	      <filtered/>
	    </file>
	  </files>
  -->
  <files>
    <file>
      <fileMode>644</fileMode>
      <source>${project.build.directory}/${project.artifactId}-${project.version}.jar</source>
      <outputDirectory>/usr/lib/ambari-server</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/python/ambari-server.py</source>
      <outputDirectory>/usr/sbin</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/python/ambari_server_main.py</source>
      <outputDirectory>/usr/sbin</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>${basedir}/target/ambari-server</source>
      <outputDirectory>/etc/init.d</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>${ambariProperties}</source>
      <outputDirectory>/etc/ambari-server/conf</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>conf/unix/log4j.properties</source>
      <outputDirectory>/etc/ambari-server/conf</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>conf/unix/metrics.properties</source>
      <outputDirectory>/etc/ambari-server/conf</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>conf/unix/krb5JAASLogin.conf</source>
      <outputDirectory>/etc/ambari-server/conf</outputDirectory>
    </file>
    <file>
      <fileMode>700</fileMode>
      <source>conf/unix/ambari-env.sh</source>
      <outputDirectory>/var/lib/ambari-server/</outputDirectory>
    </file>
    <file>
      <fileMode>700</fileMode>
      <source>conf/unix/ambari-sudo.sh</source>
      <outputDirectory>/var/lib/ambari-server/</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>conf/unix/create-python-wrap.sh</source>
      <outputDirectory>/var/lib/ambari-server/</outputDirectory>
    </file>
    <file>
      <fileMode>700</fileMode>
      <source>conf/unix/install-helper.sh</source>
      <outputDirectory>/var/lib/ambari-server/</outputDirectory>
    </file>
    <file>
      <fileMode>700</fileMode>
      <source>conf/unix/ca.config</source>
      <outputDirectory>/var/lib/ambari-server/keys</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-Postgres-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-Postgres-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-Postgres-EMBEDDED-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-Postgres-EMBEDDED-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-Oracle-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-MySQL-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-Oracle-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-MySQL-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-AzureDB-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-SQLServer-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-SQLServer-CREATELOCAL.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-SQLServer-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>target/classes/Ambari-DDL-SQLAnywhere-CREATE.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/Ambari-DDL-SQLAnywhere-DROP.sql</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>644</fileMode>
      <source>${project.build.directory}/DBConnectionVerification.jar</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>644</fileMode>
      <source>${project.build.directory}/CredentialUtil.jar</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/APACHE-AMBARI-MIB.txt</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/kerberos.json</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/widgets.json</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/stacks/stack_advisor.py</source>
      <outputDirectory>/var/lib/ambari-server/resources/stacks</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/stacks/service_advisor.py</source>
      <outputDirectory>/var/lib/ambari-server/resources/stacks</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/stacks/ambari_configuration.py</source>
      <outputDirectory>/var/lib/ambari-server/resources/stacks</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/python/bootstrap.py</source>
      <outputDirectory>/usr/lib/ambari-server/lib/ambari_server</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/python/setupAgent.py</source>
      <outputDirectory>/usr/lib/ambari-server/lib/ambari_server</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/python/os_check_type.py</source>
      <outputDirectory>/usr/lib/ambari-server/lib/ambari_server</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>${basedir}/target/version</source>
      <outputDirectory>/var/lib/ambari-server/resources</outputDirectory>
    </file>
    <file>
      <fileMode>755</fileMode>
      <source>src/main/resources/scripts/post-user-creation-hook.sh</source>
      <outputDirectory>/var/lib/ambari-server/resources/scripts</outputDirectory>
    </file>
  </files>    
  <dependencySets>
    <dependencySet>
      <fileMode>644</fileMode>
      <outputDirectory>/usr/lib/ambari-server</outputDirectory>
      <unpack>false</unpack>
      <scope>runtime</scope>
    </dependencySet>
  </dependencySets>
</assembly>
