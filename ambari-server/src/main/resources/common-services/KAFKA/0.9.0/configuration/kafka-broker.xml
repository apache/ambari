<?xml version="1.0"?>
<!--
 censed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
  <property>
    <name>listeners</name>
    <value>PLAINTEXT://localhost:6667</value>
    <description>host and port where kafka broker will be accepting connections. localhost will be substituted with hostname.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>controlled.shutdown.enable</name>
    <value>true</value>
    <description>Enable controlled shutdown of the broker. If enabled, the broker will move all leaders on it to some other brokers before shutting itself down. This reduces the unavailability window during shutdown.</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>auto.leader.rebalance.enable</name>
    <value>true</value>
    <description>Enables auto leader balancing. A background thread checks and triggers leader balance if required at regular intervals</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>num.recovery.threads.per.data.dir</name>
    <value>1</value>
    <description>The number of threads per data directory to be used for log recovery at startup and flushing at shutdown</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>min.insync.replicas</name>
    <value>1</value>
    <description>define the minimum number of replicas in ISR needed to satisfy a produce request with required.acks=-1 (or all)</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>leader.imbalance.per.broker.percentage</name>
    <value>10</value>
    <description>The ratio of leader imbalance allowed per broker. The controller would trigger a leader balance if it goes above this value per broker. The value is specified in percentage.</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>leader.imbalance.check.interval.seconds</name>
    <value>300</value>
    <description>The frequency with which the partition rebalance check is triggered by the controller</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offset.metadata.max.bytes</name>
    <value>4096</value>
    <description>The maximum size for a metadata entry associated with an offset commit</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.load.buffer.size</name>
    <value>5242880</value>
    <description>Batch size for reading from the offsets segments when loading offsets into the cache.</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.topic.replication.factor</name>
    <value>3</value>
    <description>The replication factor for the offsets topic (set higher to ensure availability).
    To ensure that the effective replication factor of the offsets topic is the configured value,
    the number of alive brokers has to be at least the replication factor at the time of the
    first request for the offsets topic. If not, either the offsets topic creation will fail or it will get a replication factor of min(alive brokers, configured replication factor).</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.topic.num.partitions</name>
    <value>50</value>
    <description>The number of partitions for the offset commit topic (should not change after deployment)</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.topic.segment.bytes</name>
    <value>104857600</value>
    <description>The offsets topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.topic.compression.codec</name>
    <value>0</value>
    <description>Compression codec for the offsets topic - compression may be used to achieve \"atomic\" commits. Default is NoCompression. For Gzip add value 1 , SnappyCompression add value 2, LZ4CompressionCodec 3.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.retention.minutes</name>
    <value>86400000</value>
    <description>Log retention window in minutes for offsets topic</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.retention.check.interval.ms</name>
    <value>600000</value>
    <description>Frequency at which to check for stale offsets</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.commit.timeout.ms</name>
    <value>5000</value>
    <description>Offset commit will be delayed until all replicas for the offsets topic receive the commit or this timeout is reached. This is similar to the producer request timeout.</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>offsets.commit.required.acks</name>
    <value>-1</value>
    <description>The required acks before the commit can be accepted. In general, the default (-1) should not be overridden</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>delete.topic.enable</name>
    <value>true</value>
    <description>Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>compression.type</name>
    <description>Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', lz4). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.</description>
    <value>producer</value>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>external.kafka.metrics.exclude.prefix</name>
    <value>kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec,kafka.server.KafkaServer.ClusterId</value>
    <description>
      Exclude metrics starting with these prefixes from being collected.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>external.kafka.metrics.include.prefix</name>
    <value>kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request</value>
    <description>
      These metrics would be included even if the exclude prefix omits them.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>authorizer.class.name</name>
    <description>
      Kafka authorizer class
    </description>
    <depends-on>
      <property>
        <type>ranger-kafka-plugin-properties</type>
        <name>ranger-kafka-plugin-enabled</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
</configuration>
