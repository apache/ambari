<?xml version="1.0"?>
<!--
/**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <property>
    <name>ambari.metrics.admanager.spark.operation.mode</name>
    <value>stand-alone</value>
    <display-name>Anomaly Detection Service operation mode</display-name>
    <description>
      Service Operation modes:
      1) stand-alone: Standalone Spark cluster for AD jobs
      2) spark-on-yarn: Spark running on YARN. (Recommended production setting)
    </description>
    <on-ambari-upgrade add="true"/>
    <value-attributes>
      <overridable>false</overridable>
      <type>value-list</type>
      <entries>
        <entry>
          <value>stand-alone</value>
          <label>Stand Alone</label>
        </entry>
        <entry>
          <value>spark-on-yarn</value>
          <label>Spark on YARN</label>
        </entry>
      </entries>
      <selection-cardinality>1</selection-cardinality>
    </value-attributes>
  </property>
  <property>
    <name>ambari.metrics.admanager.application.port</name>
    <value>9090</value>
    <display-name>AD Manager http port</display-name>
    <description>AMS Anomaly Detection Manager application port</description>
    <value-attributes>
      <type>int</type>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ambari.metrics.admanager.input.definition.directory</name>
    <value></value>
    <display-name>AD Manager Input definition directory</display-name>
    <description>AMS Anomaly Detection Manager definition directory</description>
    <value-attributes>
      <type>directory</type>
      <overridable>false</overridable>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>content</name>
    <display-name>ams-admanager-config template</display-name>
    <value>
      server:
        applicationConnectors:
        - type: http
          port: {{ams_admanager_port}}
        requestLog:
          type: external

      logging:
        type: external

      metricDefinitionService:
        inputDefinitionDirectory: {{ams_ad_input_definition_directory}}

      metricsCollector:
        hosts: {{ams_collector_hosts}}
        port: {{metric_collector_port}}
        protocol: {{metric_collector_protocol}}
        metadataEndpoint: /v1/timeline/metrics/metadata/keys

      adQueryService:
        anomalyDataTtl: 604800

      metricDefinitionDB:
        # force checksum verification of all data that is read from the file system on behalf of a particular read
        verifyChecksums: true
        # raise an error as soon as it detects an internal corruption
        performParanoidChecks: false
        # Path to Level DB directory
        dbDirPath: {{ams_ad_data_dir}}

      spark:
        mode: {{admanager_spark_op_mode}}
        masterHostPort: {{admanager_spark_hostport}}
    </value>
    <value-attributes>
      <type>content</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
</configuration>