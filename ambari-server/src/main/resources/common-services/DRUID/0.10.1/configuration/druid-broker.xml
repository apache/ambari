<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <property>
    <name>druid.service</name>
    <value>druid/broker</value>
    <description>The druid.service name of broker node.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.port</name>
    <value>8082</value>
    <description>The port on which the broker will accept connections.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.broker.http.numConnections</name>
    <value>20</value>
    <description>Size of connection pool for the Broker to connect to historical and real-time nodes. If there are more
      queries than this number that all need to speak to the same node, then they will queue up.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.server.http.numThreads</name>
    <value>50</value>
    <description>Number of threads for HTTP requests.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.processing.buffer.sizeBytes</name>
    <value>1073741824</value>
    <value-attributes>
      <type>long</type>
      <minimum>0</minimum>
      <unit>Bytes</unit>
    </value-attributes>
    <description>This specifies a buffer size for the storage of intermediate results. The computation engine in both
      the Historical and Realtime nodes will use a scratch buffer of this size to do all of their intermediate
      computations
      off-heap. Larger values allow for more aggregations in a single pass over the data while smaller values can
      require more passes depending on the query that is being executed.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.processing.numThreads</name>
    <value>2</value>
    <description>The number of processing threads to have available for parallel processing of segments.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.processing.numMergeBuffers</name>
    <value>2</value>
    <description>The number of direct memory buffers available for merging query results. The buffers are sized by druid.processing.buffer.sizeBytes.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.broker.cache.useCache</name>
    <value>true</value>
    <description>Enable the cache on the broker.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.broker.cache.populateCache</name>
    <value>true</value>
    <description>Populate the cache on the broker.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.cache.type</name>
    <value>local</value>
    <description>The type of cache to use for queries.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.cache.sizeInBytes</name>
    <value>10000000</value>
    <value-attributes>
      <type>int</type>
      <minimum>0</minimum>
      <unit>Bytes</unit>
    </value-attributes>
    <description>Maximum cache size in bytes. Zero disables caching.</description>
    <on-ambari-upgrade add="false"/>
  </property>
</configuration>
