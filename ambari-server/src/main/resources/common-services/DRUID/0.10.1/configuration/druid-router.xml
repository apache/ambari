<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <property>
    <name>druid.service</name>
    <value>druid/router</value>
    <description>The druid.service name of router node.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.port</name>
    <value>8888</value>
    <description>The port on which the broker will accept connections.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.router.http.numConnections</name>
    <value>20</value>
    <description>
      Size of connection pool for the router to connect to historical and real-time nodes. If there are more
      queries than this number that all need to speak to the same node, then they will queue up.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.server.http.numThreads</name>
    <value>50</value>
    <description>Number of threads for HTTP requests.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>druid.router.tierToBrokerMap</name>
    <value>{"_default_tier":"druid/broker"}</value>
    <description>
      Used to route queries for a certain tier of data to their appropriate broker. An ordered JSON map of
      tiers to broker names. The priority of brokers is based on the ordering.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
</configuration>
