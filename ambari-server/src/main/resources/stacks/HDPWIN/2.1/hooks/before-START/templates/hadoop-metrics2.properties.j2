{#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#}

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# syntax: [prefix].[source|sink|jmx].[instance].[options]
# See package.html for org.apache.hadoop.metrics2 for details

{% if has_metric_collector %}

*.period=60
*.sink.timeline.plugin.urls={{timeline_plugin_url}}
*.sink.timeline.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink
*.sink.timeline.period=10

datanode.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
namenode.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
resourcemanager.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
nodemanager.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
historyserver.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
journalnode.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
nimbus.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
supervisor.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
maptask.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}
reducetask.sink.timeline.collector={{metric_collector_host}}:{{metric_collector_port}}

resourcemanager.sink.timeline.tagsForPrefix.yarn=Queue
{% endif %}
