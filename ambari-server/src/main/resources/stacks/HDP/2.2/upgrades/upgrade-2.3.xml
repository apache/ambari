<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <target>2.3.*.*</target>
  <target-stack>HDP-2.3</target-stack>
  <type>ROLLING</type>

  <prerequisite-checks>
    <!-- List of additional pre-req checks to run in addition to the required pre-reqs -->
    <check>org.apache.ambari.server.checks.HiveMultipleMetastoreCheck</check>
    <check>org.apache.ambari.server.checks.SecondaryNamenodeDeletedCheck</check>
    <check>org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck</check>
    <check>org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck</check>
    <check>org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck</check>
    <check>org.apache.ambari.server.checks.ServicesTezDistributedCacheCheck</check>
    <check>org.apache.ambari.server.checks.ServicesYarnWorkPreservingCheck</check>
    <check>org.apache.ambari.server.checks.YarnRMHighAvailabilityCheck</check>
    <check>org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck</check>
    <check>org.apache.ambari.server.checks.KafkaKerberosCheck</check>

    <configuration>
      <!-- Configuration properties for all pre-reqs including required pre-reqs -->
      <check-properties name="org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck">
        <property name="min-applicable-stack-version">HDP-2.2.4.2</property>
      </check-properties>
      <check-properties name="org.apache.ambari.server.checks.HiveDynamicServiceDiscoveryCheck">
        <property name="min-failure-stack-version">HDP-2.3.0.0</property>
      </check-properties>
    </configuration>
  </prerequisite-checks>

  <skip-failures>false</skip-failures>
  <skip-service-check-failures>false</skip-service-check-failures>

  <order>
    <group xsi:type="cluster" name="PRE_CLUSTER" title="Prepare Upgrade">
      <direction>UPGRADE</direction>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage service="HDFS" component="NAMENODE" title="Pre Upgrade HDFS">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>prepare_rolling_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage service="TEZ" component="TEZ_CLIENT" title="Check Tez Tarball">
        <task xsi:type="execute" hosts="any">
          <script>scripts/pre_upgrade.py</script>
          <function>prepare</function>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="PREPARE_BACKUPS" title="Prepare Backups">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Pre Upgrade HBase Backup">
        <task xsi:type="execute" hosts="master">
          <script>scripts/hbase_upgrade.py</script>
          <function>take_snapshot</function>
        </task>
      </execute-stage>

      <execute-stage service="HIVE" component="HIVE_METASTORE" title="Pre Upgrade Hive Backup">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Hive Metastore database referenced by the Hive Metastore service(s) located on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Pre Upgrade Oozie Backup">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Oozie Server database referenced by the Oozie server located on {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Pre Upgrade Ranger Backup">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Ranger Admin database and Ranger Audit database.
                If audit database size is too large( > 3GB ) then follow the below instructions:
                1. Backup the audit table from audit database.
                2. Truncate audit table.
                3. Follow upgrade process and once completed then restore audit data to audit table.</message>
        </task>
      </execute-stage>
    </group>

    <!--
    On an HDP 2.3 to 2.2 downgrade, the /etc/component/conf must be turned back from a symlink
    into a normal directory. This will avoid the circular symbolic link that will happen after
    hdp-select sets /usr/hdp/current/component back to 2.2:

    # new symlink created for 2.3
    /etc/flume/conf -> /usr/hdp/current/flume-server/conf

    # circular reference from 2.2 (current)
    /usr/hdp/2.2.0.0-1234/flume/conf -> /etc/flume/conf
    /usr/hdp/current/flume-server/conf -> /etc/flume/conf
    -->
    <group xsi:type="cluster" name="RESTORE_CONFIG_DIRS" title="Restore Configuration Directories">
      <direction>DOWNGRADE</direction>
      <execute-stage title="Restore configuration directories and remove HDP 2.3 symlinks">
        <task xsi:type="execute">
          <script>scripts/ru_set_all.py</script>
          <function>unlink_all_configs</function>
        </task>
      </execute-stage>
    </group>


    <group name="ZOOKEEPER" title="ZooKeeper">
      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_SERVER</component>
      </service>
    </group>

    <group name="RANGER" title="Ranger">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service name="RANGER">
        <component>RANGER_ADMIN</component>
        <component>RANGER_USERSYNC</component>
      </service>
    </group>

    <group name="CORE_MASTER" title="Core Masters">
      <service-check>false</service-check>
      <service name="HDFS">
        <component>NAMENODE</component>
        <component>JOURNALNODE</component>
        <component>ZKFC</component>
      </service>

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
      </service>

      <service name="YARN">
        <component>APP_TIMELINE_SERVER</component>
        <component>RESOURCEMANAGER</component>
      </service>

      <service name="HBASE">
        <component>HBASE_MASTER</component>
      </service>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>ZOOKEEPER</service>
        <service>HDFS</service>
        <service>YARN</service>
        <service>MAPREDUCE2</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
        <service>LOGSEARCH</service>
      </exclude>
    </group>

    <group name="CORE_SLAVES" title="Core Slaves" xsi:type="colocated">
      <skippable>true</skippable>
      <service-check>false</service-check>
      <service name="HDFS">
        <component>DATANODE</component>
      </service>

      <service name="HBASE">
        <component>HBASE_REGIONSERVER</component>
      </service>

      <service name="YARN">
        <component>NODEMANAGER</component>
      </service>

      <batch>
        <percent>20</percent>
        <summary>Verification Required</summary>
        <message>The initial batch of {{components}} hosts have been {{direction.past}}. You are advised to check the hosts and perform cluster/workload-specific tests against your cluster to ensure proper operation before proceeding with {{direction.text}} of the remaining services.</message>
      </batch>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>ZOOKEEPER</service>
        <service>HDFS</service>
        <service>YARN</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
        <service>LOGSEARCH</service>
      </exclude>
    </group>

    <group name="HIVE" title="Hive">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service name="HIVE">
        <component>HIVE_METASTORE</component>
        <component>HIVE_SERVER</component>
        <component>WEBHCAT_SERVER</component>
      </service>
    </group>

    <group name="SPARK" title="Spark">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service-check>false</service-check>
      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
      </service>
    </group>

    <group name="SPARK_CLIENTS" title="Spark Clients">
      <skippable>true</skippable>
      <service name="SPARK">
        <component>SPARK_CLIENT</component>
      </service>
    </group>

    <group name="OOZIE" title="Oozie">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service-check>false</service-check>
      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
      </service>
    </group>

    <group name="OOZIE_CLIENTS" title="Oozie Clients">
      <skippable>true</skippable>
      <service name="OOZIE">
        <component>OOZIE_CLIENT</component>
      </service>
    </group>

    <group name="FALCON" title="Falcon">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service-check>false</service-check>
      <service name="FALCON">
        <component>FALCON_SERVER</component>
      </service>
    </group>

    <group name="FALCON_CLIENTS" title="Falcon Clients">
      <skippable>true</skippable>
      <service name="FALCON">
        <component>FALCON_CLIENT</component>
      </service>
    </group>

    <group name="CLIENTS" title="Client Components">
      <service-check>false</service-check>
      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_CLIENT</component>
      </service>

      <service name="HDFS">
        <component>HDFS_CLIENT</component>
      </service>

      <service name="YARN">
        <component>YARN_CLIENT</component>
      </service>

      <service name="MAPREDUCE2">
        <component>MAPREDUCE2_CLIENT</component>
      </service>

      <service name="TEZ">
        <component>TEZ_CLIENT</component>
      </service>

      <service name="HBASE">
        <component>HBASE_CLIENT</component>
      </service>

      <service name="PIG">
        <component>PIG</component>
      </service>

      <service name="SQOOP">
        <component>SQOOP</component>
      </service>

      <service name="HIVE">
        <component>HIVE_CLIENT</component>
        <component>HCAT</component>
      </service>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>ZOOKEEPER</service>
        <service>HDFS</service>
        <service>YARN</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
        <service>LOGSEARCH</service>
      </exclude>
    </group>

    <group name="KAFKA" title="Kafka">
      <skippable>true</skippable>
      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>
    </group>

    <group name="KNOX" title="Knox">
      <skippable>true</skippable>
      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>
    </group>

    <group name="STORM" title="Storm">
      <skippable>true</skippable>
      <service name="STORM">
        <component>NIMBUS</component>
        <component>SUPERVISOR</component>
        <component>STORM_UI_SERVER</component>
        <component>DRPC_SERVER</component>
      </service>
    </group>

    <group name="SLIDER" title="Slider">
      <skippable>true</skippable>
      <service name="SLIDER">
        <component>SLIDER</component>
      </service>
    </group>

    <group name="FLUME" title="Flume">
      <skippable>true</skippable>
      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>
    </group>

    <group name="ACCUMULO" title="Accumulo">
      <skippable>true</skippable>
      <service name="ACCUMULO">
        <component>ACCUMULO_MASTER</component>
        <component>ACCUMULO_TSERVER</component>
        <component>ACCUMULO_MONITOR</component>
        <component>ACCUMULO_GC</component>
        <component>ACCUMULO_TRACER</component>
        <component>ACCUMULO_CLIENT</component>
      </service>
    </group>

    <group xsi:type="cluster" name="ALL_HOST_OPS" title="Finalize Hosts">
      <execute-stage title="Update remaining HDP stack to {{version}}">
        <task xsi:type="execute">
          <script>scripts/ru_set_all.py</script>
          <function>actionexecute</function>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="FINALIZE_PRE_CHECK" title="Finalize {{direction.text.proper}} Pre-Check">
      <direction>UPGRADE</direction>
      
      <execute-stage title="Check Component Versions">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction" />
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="POST_CLUSTER" title="Finalize {{direction.text.proper}}">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage title="Confirm Finalize">
        <direction>UPGRADE</direction>
        <task xsi:type="manual">
          <message>Please confirm you are ready to finalize.</message>
        </task>
      </execute-stage>

      <execute-stage service="HDFS" component="NAMENODE" title="Execute HDFS Finalize">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>finalize_rolling_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage title="Save Cluster State" service="" component="">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction"/>
      </execute-stage>

    </group>
  </order>

  <processing>
    <service name="ZOOKEEPER">
      <component name="ZOOKEEPER_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="ZOOKEEPER_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_ADMIN">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_env"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_admin"/>

          <task xsi:type="server_action" summary="Calculating Ranger Properties" class="org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation"/>
          
          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_usersync"/>
            
          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_site"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_usersync_sync_source"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_usersync_properties"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_delete_oracle_home"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_admin_hdfs_audit"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_update_ranger_admin_db_audit"/>

          <task xsi:type="execute" hosts="any" sequential="true" summary="Upgrading Ranger database schema">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_database</function>
          </task>
        </pre-upgrade>
      
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>

        <post-upgrade>
          <task xsi:type="execute" hosts="any" sequential="true" summary="Applying Ranger java patches">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_java_patches</function>
          </task>
        </post-upgrade>
      </component>

      <component name="RANGER_USERSYNC">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>

          <task xsi:type="configure" id="hdp_2_3_0_0_namenode_ha_adjustments"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_modify_hadoop_env"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hdfs_adjust_ranger_plugin"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hdfs_transition_ranger_hdfs_policy"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hdfs_transition_ranger_hdfs_audit"/>
          
          <task xsi:type="configure" id="hdp_2_3_0_0_hdfs_transition_ranger_hdfs_security"/>
          
          <task xsi:type="configure" id="hdp_2_3_0_0_hdfs_ranger_hdfs_delete_old_properties"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="DATANODE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HDFS_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="JOURNALNODE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="ZKFC">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="MAPREDUCE2">
      <component name="HISTORYSERVER">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_mapreduce2_adjust_history_server"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="MAPREDUCE2_CLIENT">
        <pre-upgrade>
          <task xsi:type="server_action" summary="Verifying LZO codec path for mapreduce" class="org.apache.ambari.server.serveraction.upgrades.FixLzoCodecPath"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="YARN">
      <component name="APP_TIMELINE_SERVER">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_ats_enable_recovery"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_keep_ats_v1"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="RESOURCEMANAGER">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_rm_disable_node_labels"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_rm_clear_default_node_label_expression"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_rm_check_cs_root_def_capacity"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_yarn_rm_check_cs_root_max_capacity"/>

        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="NODEMANAGER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="YARN_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HBASE">
      <component name="HBASE_MASTER">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_adjust_phoenix_scheduler_factory"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_adjust_phoenix_rpc_controller_factory"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_set_global_memstore_size"/>

          <task xsi:type="server_action" summary="Calculating HBase Properties" class="org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_adjust_phoenix_indexed_wal_edit_codec"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_adjust_authorization_coprocessors"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_transition_ranger_hbase_policy"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_transition_ranger_hbase_audit"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_copy_ranger_policies"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_hbase_master_delete_old_ranger_properties"/>

          <!-- These HBASE configs changed in HDP 2.3.4.0, but Ambari can't distinguish HDP 2.3.2.0 vs HDP 2.3.4.0, so easier to always do them. -->
          <task xsi:type="configure" id="hdp_2_3_4_0_hbase_remove_local_indexing"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HBASE_REGIONSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HBASE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="TEZ">
      <component name="TEZ_CLIENT">
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_tez_client_adjust_properties"/>
          <task xsi:type="configure" id="hdp_2_2_0_0_tez_client_adjust_tez_counters_properties"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_tez_client_adjust_tez_lib_uris_property"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_tez_keep_ats_v1"/>
          <task xsi:type="server_action" summary="Verifying LZO codec path for Tez" class="org.apache.ambari.server.serveraction.upgrades.FixLzoCodecPath"/>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="PIG">
      <component name="PIG">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SQOOP">
      <component name="SQOOP">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_METASTORE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HIVE_SERVER">
        <pre-upgrade>
          <task xsi:type="manual">
            <summary>HiveServer Port Availability</summary>
            <message>Please note that the HiveServer port will now change to 10010 if Hive is using a binary transfer mode or 10011 if Hive is using an http transport mode. You can use "netstat -anp | grep 1001[01]" to determine if the port is available on each of following HiveServer host(s): {{hosts.all}}. If the port is not available, the process using it must be terminated.</message>
          </task>

          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_set_transport_mode"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_replace_auth_manager"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_configure_authentication"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_configure_ranger_policy"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_configure_ranger_security"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_configure_ranger_audit"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_remove_deprecated_ranger_properties"/>
          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_remove_datastore_classname"/>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="manual">
            <summary>HiveServer Port Availability</summary>
            <message>Please note that the HiveServer port will now change to 10000 if Hive is using a binary transfer mode or 10001 if Hive is using an http transport mode. You can use "netstat -anp | grep 1000[01]" to determine if the port is available on each of following HiveServer host(s): {{hosts.all}}. If the port is not available, the process using it must be terminated.</message>
          </task>

          <task xsi:type="configure" id="hdp_2_3_0_0_hive_server_restore_transport_mode_on_downgrade"/>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="WEBHCAT_SERVER">
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_webhcat_server_update_env"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_webhcat_server_update_configuration_paths"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HIVE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HCAT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SLIDER">
      <component name="SLIDER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_JOBHISTORYSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="SPARK_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="OOZIE">
      <component name="OOZIE_SERVER">
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_oozie_remove_redundant_configurations"/>

          <task xsi:type="server_action" summary="Adjusting Oozie properties" class="org.apache.ambari.server.serveraction.upgrades.OozieConfigCalculation"/>

          <task xsi:type="execute" hosts="all" sequential="true" summary="Shut down all Oozie servers">
            <script>scripts/oozie_server.py</script>
            <function>stop</function>
          </task>

          <!-- It is extremely important that both of these tasks run on the exact same host. Hence, pick the first alphabetically. -->
          <task xsi:type="configure_function" hosts="first" />

          <task xsi:type="execute" hosts="first" sequential="true" summary="Upgrading the Oozie database and creating a new sharelib">
            <script>scripts/oozie_server_upgrade.py</script>
            <function>upgrade_oozie_database_and_sharelib</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="execute" hosts="all" sequential="true" summary="Shut down all Oozie servers">
            <script>scripts/oozie_server.py</script>
            <function>stop</function>
          </task>

          <task xsi:type="execute" hosts="any" sequential="true" summary="Create a new sharelib">
            <script>scripts/oozie_server_upgrade.py</script>
            <function>create_sharelib</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="OOZIE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="FALCON">
      <component name="FALCON_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="FALCON_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <!-- In HDP 2.3.4.0, Kafka had changes that required stopping all Kafka Brokers, running a migration script,
        and then starting one at a time. This is needed during both upgrade and downgrade. -->
        <pre-upgrade>
          <task xsi:type="execute" hosts="all" summary="Shut down all Kafka Brokers">
            <script>scripts/kafka_broker.py</script>
            <function>stop</function>
          </task>

          <task xsi:type="configure" id="hdp_2_3_0_0_kafka_broker_deprecate_port"/>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
        <pre-upgrade>
          <task xsi:type="configure" id="hdp_2_3_0_0_knox_configure_ranger_policy"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_knox_configure_ranger_knox_audit"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_knox_remove_deprecated_ranger_properties"/>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="STORM">
      <component name="NIMBUS">
        <pre-downgrade>
          <task xsi:type="execute" summary="Removing Storm data from ZooKeeper">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_zookeeper_data</function>
          </task>

          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>
        </pre-downgrade>
      
        <pre-upgrade>
          <task xsi:type="manual">
            <message>Before continuing, please deactivate and kill any currently running topologies.</message>
          </task>

          <task xsi:type="execute" summary="Removing Storm data from ZooKeeper">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_zookeeper_data</function>
          </task>

          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_monitor_freq_adjustment"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_convert_nimbus_host_to_seeds"/>
          
          <task xsi:type="configure" id="hdp_2_3_0_0_update_storm_env"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_update_env_vars"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_configure_ranger_policy"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_configure_ranger_audit"/>

          <task xsi:type="configure" id="hdp_2_3_0_0_nimbus_remove_deprecated_ranger_properties"/>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="SUPERVISOR">
        <pre-upgrade>
          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="manual">
            <message>Before continuing, please deactivate and kill any currently running topologies.</message>
          </task>

          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="STORM_UI_SERVER">
        <pre-upgrade>
          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="DRPC_SERVER">
        <pre-upgrade>
          <task xsi:type="execute" summary="Removing local Storm data">
            <script>scripts/storm_upgrade.py</script>
            <function>delete_storm_local_data</function>
          </task>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>

        <post-upgrade>
          <task xsi:type="manual">
            <message>Please rebuild your topology using the new Storm version dependencies and resubmit it using the newly created jar.</message>
          </task>
        </post-upgrade>
      </component>
    </service>

    <service name="FLUME">
      <component name="FLUME_HANDLER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="ACCUMULO">
      <component name="ACCUMULO_MASTER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="ACCUMULO_MONITOR">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="ACCUMULO_GC">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="ACCUMULO_TRACER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="ACCUMULO_TSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="ACCUMULO_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>
  </processing>
</upgrade>
