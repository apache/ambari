<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!-- Put site-specific property overrides in this file. -->
<configuration xmlns:xi="http://www.w3.org/2001/XInclude" supports_final="true">
  <!-- These properties exist in HDP 2.2 and higher. -->
  <property>
    <name>mapreduce.admin.user.env</name>
    <value>LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64</value>
    <description>
      Additional execution environment entries for map and reduce task processes.
      This is not an additive property. You must preserve the original value if
      you want your map and reduce tasks to have access to native libraries (compression, etc)
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.application.classpath</name>
    <value>$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure</value>
    <description>
      CLASSPATH for MR applications. A comma-separated list of CLASSPATH
      entries.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.application.framework.path</name>
    <value>/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>yarn.app.mapreduce.am.admin-command-opts</name>
    <value>-Dhdp.version=${hdp.version}</value>
    <description>
      Java opts for the MR App Master processes.
      The following symbol, if present, will be interpolated: @taskid@ is replaced
      by current TaskID. Any other occurrences of '@' will go unchanged.
      For example, to enable verbose gc logging to a file named for the taskid in
      /tmp and to set the heap maximum to be a gigabyte, pass a 'value' of:
      -Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc

      Usage of -Djava.library.path can cause programs to no longer function if
      hadoop native libraries are used. These values should instead be set as part
      of LD_LIBRARY_PATH in the map / reduce JVM env using the mapreduce.map.env and
      mapreduce.reduce.env config settings.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.admin.map.child.java.opts</name>
    <value>-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.admin.reduce.child.java.opts</name>
    <value>-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.reduce.shuffle.fetch.retry.enabled</name>
    <value>1</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.reduce.shuffle.fetch.retry.interval-ms</name>
    <value>1000</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.reduce.shuffle.fetch.retry.timeout-ms</name>
    <value>30000</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.job.emit-timeline-data</name>
    <value>false</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.jobhistory.bind-host</name>
    <value>0.0.0.0</value>
    <description/>
    <on-ambari-upgrade add="false"/>
  </property>

  <!-- These properties exist in HDP 2.3 and higher. -->
  <property>
    <name>mapreduce.jobhistory.recovery.enable</name>
    <value>true</value>
    <description>Enable the history server to store server state and recover
      server state upon startup.  If enabled then
      mapreduce.jobhistory.recovery.store.class must be specified.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.jobhistory.recovery.store.class</name>
    <value>org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService</value>
    <description>The HistoryServerStateStoreService class to store history server
      state for recovery.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>mapreduce.jobhistory.recovery.store.leveldb.path</name>
    <value>/hadoop/mapreduce/jhs</value>
    <description>The URI where history server state will be stored if HistoryServerLeveldbSystemStateStoreService
      is configured as the recovery storage class.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>
</configuration>
