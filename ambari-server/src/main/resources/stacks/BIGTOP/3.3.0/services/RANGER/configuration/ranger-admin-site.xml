<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<configuration supports_final="true">
  <property>
    <name>ranger.admin.cookie.name</name>
    <value>RANGERADMINSESSIONID</value>
    <description>Specifies the name of the cookie used to store the user session information in the web browser.</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.host</name>
    <value>{{ranger_host}}</value>
    <description>Host where ranger service to be installed</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.http.enabled</name>
    <value>true</value>
    <display-name>HTTP enabled</display-name>
    <description>Enable HTTP</description>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.http.port</name>
    <value>6080</value>
    <description>HTTP port</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.port</name>
    <value>6182</value>
    <description>HTTPS port (if SSL is enabled)</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.attrib.ssl.enabled</name>
    <value>false</value>
    <description>true/false, set to true if using SSL</description>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.attrib.clientAuth</name>
    <value>want</value>
    <description>Needs to be set to want for two way SSL</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.attrib.keystore.keyalias</name>
    <value>rangeradmin</value>
    <description>Alias for Ranger Admin key in keystore</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.attrib.keystore.pass</name>
    <value>xasecure</value>
    <property-type>PASSWORD</property-type>
    <description>Password for keystore</description>
    <value-attributes>
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.https.attrib.keystore.file</name>
    <value>/etc/security/serverKeys/ranger-admin-keystore.jks</value>
    <description>Ranger admin keystore (specify full path)</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.externalurl</name>
    <value>{{ranger_external_url}}</value>
    <display-name>External URL</display-name>
    <description>URL to be used by clients to access ranger admin</description>
    <value-attributes>
      <visible>false</visible>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.driver</name>
    <value>com.mysql.jdbc.Driver</value>
    <display-name>Driver class name for a JDBC Ranger database</display-name>
    <description>JDBC driver class name. Example: For MySQL / MariaDB: com.mysql.jdbc.Driver, For Oracle: oracle.jdbc.OracleDriver</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <depends-on>
      <property>
        <type>admin-properties</type>
        <name>DB_FLAVOR</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.url</name>
    <value>jdbc:mysql://localhost</value>
    <display-name>JDBC connect string for a Ranger database</display-name>
    <description>JDBC connect string</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <depends-on>
      <property>
        <type>admin-properties</type>
        <name>DB_FLAVOR</name>
      </property>
      <property>
        <type>admin-properties</type>
        <name>db_host</name>
      </property>
      <property>
        <type>admin-properties</type>
        <name>db_name</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.user</name>
    <value>{{ranger_db_user}}</value>
    <description>JDBC user</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.password</name>
    <value>_</value>
    <property-type>PASSWORD</property-type>
    <description>JDBC password</description>
    <value-attributes>
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.credential.alias</name>
    <value>rangeradmin</value>
    <description>Alias name for storing JDBC password</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.credential.provider.path</name>
    <value>/etc/ranger/admin/rangeradmin.jceks</value>
    <description>File for credential store, provide full file path</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.audit.source.type</name>
    <value>solr</value>
    <description>db or solr, based on the audit destination used</description>
    <depends-on>
      <property>
        <type>ranger-env</type>
        <name>xasecure.audit.destination.solr</name>
      </property>
      <property>
        <type>ranger-env</type>
        <name>xasecure.audit.destination.db</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.audit.solr.urls</name>
    <value/>
    <description>Solr url for audit. Example: http://solr_host:6083/solr/ranger_audits</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.authentication.method</name>
    <value>UNIX</value>
    <display-name>Authentication method</display-name>
    <description>Ranger admin Authentication - UNIX/PAM/LDAP/AD/NONE</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <depends-on>
      <property>
        <type>ranger-ugsync-site</type>
        <name>ranger.usersync.source.impl.class</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.url</name>
    <display-name>​LDAP URL</display-name>
    <value>{{ranger_ug_ldap_url}}</value>
    <description>LDAP Server URL, only used if Authentication method is LDAP</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.user.dnpattern</name>
    <display-name>Ldap User DN Pattern</display-name>
    <value>uid={0},ou=users,dc=xasecure,dc=net</value>
    <description>LDAP user DN, only used if Authentication method is LDAP</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.group.searchbase</name>
    <display-name>Group Search Base</display-name>
    <value>{{ranger_ug_ldap_group_searchbase}}</value>
    <description>LDAP group searchbase, only used if Authentication method is LDAP</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.group.searchfilter</name>
    <display-name>Group Search Filter</display-name>
    <value>{{ranger_ug_ldap_group_searchfilter}}</value>
    <description>LDAP group search filter, only used if Authentication method is LDAP</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.group.roleattribute</name>
    <display-name>Ldap Group Role Attribute</display-name>
    <value>cn</value>
    <description>LDAP group role attribute, only used if Authentication method is LDAP</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.base.dn</name>
    <display-name>Ldap Base DN</display-name>
    <value>dc=example,dc=com</value>
    <description>The Distinguished Name (DN) of the starting point for directory server searches.</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.bind.dn</name>
    <display-name>Bind User</display-name>
    <value>{{ranger_ug_ldap_bind_dn}}</value>
    <description>Full distinguished name (DN), including common name (CN), of an LDAP user account that has privileges to search for users. </description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.bind.password</name>
    <display-name>​Bind User Password</display-name>
    <value></value>
    <property-type>PASSWORD</property-type>
    <description>Password for the account that can search for users</description>
    <value-attributes>
      <type>password</type>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.referral</name>
    <display-name>Ldap Referral</display-name>
    <value>ignore</value>
    <description>Set to follow if multiple LDAP servers are configured to return continuation references for results. Set to ignore (default) if no referrals should be followed. Possible values are follow|throw|ignore</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.domain</name>
    <display-name>Domain Name (Only for AD)</display-name>
    <value/>
    <description>AD domain, only used if Authentication method is AD</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.url</name>
    <display-name>AD URL</display-name>
    <value>{{ranger_ug_ldap_url}}</value>
    <description>AD URL, only used if Authentication method is AD</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.base.dn</name>
    <display-name>AD Base DN</display-name>
    <value>dc=example,dc=com</value>
    <description>The Distinguished Name (DN) of the starting point for directory server searches.</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.bind.dn</name>
    <display-name>AD Bind DN</display-name>
    <value>{{ranger_ug_ldap_bind_dn}}</value>
    <description>Full distinguished name (DN), including common name (CN), of an LDAP user account that has privileges to search for users.</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.bind.password</name>
    <display-name>AD Bind Password</display-name>
    <value></value>
    <property-type>PASSWORD</property-type>
    <description>Password for the account that can search for users</description>
    <value-attributes>
      <type>password</type>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.referral</name>
    <display-name>AD Referral</display-name>
    <value>ignore</value>
    <description>Set to follow if multiple LDAP servers are configured to return continuation references for results. Set to ignore (default) if no referrals should be followed. Possible values are follow|throw|ignore</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.unixauth.remote.login.enabled</name>
    <value>true</value>
    <display-name>Allow remote Login</display-name>
    <description>Remote login enabled? - only used if Authentication method is UNIX</description>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
      <type>value-list</type>
      <overridable>false</overridable>
      <entries>
        <entry>
          <value>true</value>
          <label>Yes</label>
        </entry>
        <entry>
          <value>false</value>
          <label>No</label>
        </entry>
      </entries>
      <selection-cardinality>1</selection-cardinality>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.unixauth.service.hostname</name>
    <display-name>Unix Auth Service Hostname</display-name>
    <value>{{ugsync_host}}</value>
    <description>Host where unix authentication service is running - only used if Authentication method is UNIX</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.unixauth.service.port</name>
    <display-name>Unix Auth Service Port</display-name>
    <value>5151</value>
    <description>Port for unix authentication service - only used if Authentication method is UNIX</description>
    <value-attributes>
      <type>int</type>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.jpa.jdbc.dialect</name>
    <value>{{jdbc_dialect}}</value>
    <description>JDBC dialect used for policy DB</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.audit.solr.username</name>
    <value>ranger_solr</value>
    <description>Solr username</description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.audit.solr.password</name>
    <value>NONE</value>
    <property-type>PASSWORD</property-type>
    <description>Solr password</description>
    <value-attributes>
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.sso.providerurl</name>
    <value/>
    <display-name>SSO provider url</display-name>
    <description>Example: https://KNOX_HOST:KNOX_PORT/gateway/TOPOLOGY_NAME/knoxsso/api/v1/websso</description>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <depends-on>
      <property>
        <type>gateway-site</type>
        <name>gateway.port</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.sso.publicKey</name>
    <value/>
    <display-name>SSO public key</display-name>
    <description>Public key for SSO cookie verification</description>
    <value-attributes>
      <type>multiLine</type>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.sso.enabled</name>
    <value>false</value>
    <display-name>Enable Ranger SSO</display-name>
    <description/>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.sso.browser.useragent</name>
    <value>Mozilla,chrome</value>
    <display-name>SSO browser useragent</display-name>
    <description>Comma seperated browser agent</description>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.binddn.credential.alias</name>
    <value>ranger.ldap.bind.password</value>
    <description></description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.ad.binddn.credential.alias</name>
    <value>ranger.ldap.ad.bind.password</value>
    <description></description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.admin.kerberos.token.valid.seconds</name>
    <value>30</value>
    <description/>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.admin.kerberos.cookie.domain</name>
    <value>{{ranger_host}}</value>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.admin.kerberos.cookie.path</name>
    <value>/</value>
    <description/>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.spnego.kerberos.principal</name>
    <value>*</value>
    <description/>
    <property-type>KERBEROS_PRINCIPAL</property-type>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.spnego.kerberos.keytab</name>
    <value/>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.admin.kerberos.principal</name>
    <value/>
    <description/>
    <property-type>KERBEROS_PRINCIPAL</property-type>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.admin.kerberos.keytab</name>
    <value/>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.lookup.kerberos.principal</name>
    <value/>
    <description/>
    <property-type>KERBEROS_PRINCIPAL</property-type>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.lookup.kerberos.keytab</name>
    <value/>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.truststore.file</name>
    <value>/etc/ranger/admin/conf/ranger-admin-keystore.jks</value>
    <display-name>ranger.truststore.file</display-name>
    <description>Ranger trust-store file-path</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.truststore.password</name>
    <value>changeit</value>
    <property-type>PASSWORD</property-type>
    <value-attributes>
      <type>password</type>
    </value-attributes>
    <display-name>ranger.truststore.password</display-name>
    <description>Ranger trust-store password</description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.audit.solr.zookeepers</name>
    <value>NONE</value>
    <description>Solr Zookeeper string</description>
    <depends-on>
      <property>
        <type>infra-solr-env</type>
        <name>infra_solr_znode</name>
      </property>
      <property>
        <type>ranger-env</type>
        <name>is_solrCloud_enabled</name>
      </property>
      <property>
        <type>ranger-env</type>
        <name>is_external_solrCloud_enabled</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.ldap.ad.user.searchfilter</name>
    <display-name>AD User Search Filter</display-name>
    <value>(sAMAccountName={0})</value>
    <description>Search filter used for Bind Authentication</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.ldap.user.searchfilter</name>
    <display-name>User Search Filter</display-name>
    <value>(uid={0})</value>
    <description>Search filter used for Bind Authentication</description>
    <value-attributes>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.kms.service.user.hdfs</name>
    <value/>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <depends-on>
      <property>
        <type>hadoop-env</type>
        <name>hdfs_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.kms.service.user.hive</name>
    <value/>
    <description/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.hdfs.serviceuser</name>
    <value>hdfs</value>
    <depends-on>
      <property>
        <type>hadoop-env</type>
        <name>hdfs_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.hive.serviceuser</name>
    <value>hive</value>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.hbase.serviceuser</name>
    <value>hbase</value>
    <depends-on>
      <property>
        <type>hbase-env</type>
        <name>hbase_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.yarn.serviceuser</name>
    <value>yarn</value>
    <depends-on>
      <property>
        <type>yarn-env</type>
        <name>yarn_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.knox.serviceuser</name>
    <value>knox</value>
    <depends-on>
      <property>
        <type>knox-env</type>
        <name>knox_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.storm.serviceuser</name>
    <value>storm</value>
    <depends-on>
      <property>
        <type>storm-env</type>
        <name>storm_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.kafka.serviceuser</name>
    <value>kafka</value>
    <depends-on>
      <property>
        <type>kafka-env</type>
        <name>kafka_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.atlas.serviceuser</name>
    <value>atlas</value>
    <depends-on>
      <property>
        <type>atlas-env</type>
        <name>metadata_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.plugins.kms.serviceuser</name>
    <value>kms</value>
    <depends-on>
      <property>
        <type>kms-env</type>
        <name>kms_user</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.is.solr.kerberised</name>
    <value>{{ranger_is_solr_kerberised}}</value>
    <value-attributes>
      <visible>false</visible>
    </value-attributes>
    <description/>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>ranger.truststore.alias</name>
    <value>trustStoreAlias</value>
    <description></description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.service.https.attrib.keystore.credential.alias</name>
    <value>keyStoreCredentialAlias</value>
    <description></description>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.ldap.starttls</name>
    <value>false</value>
    <description></description>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <depends-on>
      <property>
        <type>ranger-ugsync-site</type>
        <name>ranger.usersync.ldap.starttls</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.logs.base.dir</name>
    <display-name>Ranger Admin Log Dir</display-name>
    <value>/var/log/ranger/admin</value>
    <description>Ranger Admin Log Dir</description>
    <value-attributes>
      <type>directory</type>
      <overridable>false</overridable>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.authentication.allow.trustedproxy</name>
    <value>false</value>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>ranger.audit.solr.bootstrap.enabled</name>
    <description>Enable Ranger Audit Solr Bootstrap. Keep this config disable for Ambari based installation.</description>
    <value>false</value>
    <value-attributes>
      <overridable>false</overridable>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
</configuration>
