# Copyright 2011 The Apache Software Foundation
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

security.server.keys_dir = $ROOT/var/lib/ambari-server/keys
#security.server.disabled.ciphers=SSL_RSA_WITH_DES_CBC_SHA|SSL_RSA_EXPORT_WITH_RC4_40_MD5|SSL_DHE_RSA_WITH_DES_CBC_SHA|SSL_DHE_DSS_WITH_DES_CBC_SHA|SSL_RSA_EXPORT_WITH_DES40_CBC_SHA|SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA|SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA|SSL_RSA_WITH_3DES_EDE_CBC_SHA|SSL_DHE_RSA_WITH_DES_CBC_SHA
#security.server.disabled.protocols=SSL|SSLv2|SSLv3
resources.dir = $ROOT/var/lib/ambari-server/resources
shared.resources.dir = $ROOT/usr/lib/ambari-server/lib/ambari_commons/resources
custom.action.definitions = $ROOT/var/lib/ambari-server/resources/custom_action_definitions

java.releases=jdk1.8
java.releases.ppc64le=

jdk1.8.desc=Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8
jdk1.8.url=http://public-repo-1.hortonworks.com/ARTIFACTS/jdk-8u112-linux-x64.tar.gz
jdk1.8.dest-file=jdk-8u112-linux-x64.tar.gz
jdk1.8.jcpol-url=http://public-repo-1.hortonworks.com/ARTIFACTS/jce_policy-8.zip
jdk1.8.jcpol-file=jce_policy-8.zip
jdk1.8.home=$ROOT/usr/jdk64/
jdk1.8.re=(jdk.*)/jre
jdk.download.supported=true
jce.download.supported=true

metadata.path=$ROOT/var/lib/ambari-server/resources/stacks
common.services.path=$ROOT/var/lib/ambari-server/resources/common-services
extensions.path=$ROOT/var/lib/ambari-server/resources/extensions
server.version.file=$ROOT/var/lib/ambari-server/resources/version
webapp.dir=$ROOT/usr/lib/ambari-server/web
pid.dir=$ROOT/var/run/ambari-server
recommendations.dir=$ROOT/var/run/ambari-server/stack-recommendations
bootstrap.dir=$ROOT/var/run/ambari-server/bootstrap
bootstrap.script=$ROOT/usr/lib/ambari-server/lib/ambari_server/bootstrap.py
bootstrap.setup_agent.script=$ROOT/usr/lib/ambari-server/lib/ambari_server/setupAgent.py
stackadvisor.script=$ROOT/var/lib/ambari-server/resources/scripts/stack_advisor.py
server.tmp.dir=$ROOT/var/lib/ambari-server/data/tmp
ambari.python.wrap=ambari-python-wrap

# removes artifacts from recommendations.dir which are older than specified (h,d,w,m,y) during the next recommendation call.
recommendations.artifacts.lifetime=1w

server.connection.max.idle.millis=900000
server.fqdn.service.url=http://169.254.169.254/latest/meta-data/public-hostname
server.stages.parallel=true

# Views settings
views.request.connect.timeout.millis=5000
views.request.read.timeout.millis=10000
views.ambari.request.connect.timeout.millis=30000
views.ambari.request.read.timeout.millis=45000
views.skip.home-directory-check.file-system.list=wasb,adls,adl

# Scheduler settings
server.execution.scheduler.isClustered=false
server.execution.scheduler.maxThreads=5
server.execution.scheduler.maxDbConnections=5
server.execution.scheduler.misfire.toleration.minutes=480

# Kerberos settings
kerberos.keytab.cache.dir = $ROOT/var/lib/ambari-server/data/cache

# Validate trust when communicating with the KDC (via SSL) when performing Kerberos-related
# operations, if applicable
kerberos.operation.verify.kdc.trust = true

# Default timeout in seconds before task is killed
agent.task.timeout=900
# Default timeout in seconds before package installation task is killed
agent.package.install.task.timeout=1800

# Enables package installation retry on repository unavailability error
agent.stack.retry.on_repo_unavailability=false
# Default count of tries
agent.stack.retry.tries=5

# Default timeout in seconds before a server-side task is killed
server.task.timeout=1200

# thread pool maximums
client.threadpool.size.max=25
agent.threadpool.size.max=25

# linux open-file limit
ulimit.open.files=65536

# Server HTTP settings
server.http.session.inactive_timeout=1800

# user inactivity timeout setting
user.inactivity.timeout.default=0
user.inactivity.timeout.role.readonly.default=0

# to skip service checks during deploy
skip.service.checks=false

rolling.upgrade.skip.packages.prefixes=

# HTTP Header settings for Ambari Server UI
http.strict-transport-security=max-age=31536000
http.x-xss-protection=1; mode=block
http.x-frame-options=DENY
http.x-content-type-options=nosniff
http.cache-control=no-store
http.pragma=no-cache
http.charset=utf-8

# HTTP Header settings for Ambari Views
views.http.strict-transport-security=max-age=31536000
views.http.x-xss-protection=1; mode=block
views.http.x-frame-options=SAMEORIGIN
views.http.x-content-type-options=nosniff
views.http.cache-control=no-store
#views.additional.classpath=<comma separated list of dir and jars>
views.http.pragma=no-cache
views.http.charset=utf-8

mpacks.staging.path=$ROOT/var/lib/ambari-server/resources/mpacks
mpacks-v2.staging.path=$ROOT/var/lib/ambari-server/resources/mpacks-v2

# exclude some ciphers that are not supported by old versions of ssl (this fix was added for SLES12)
security.server.disabled.ciphers=TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384|TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384|TLS_RSA_WITH_AES_256_CBC_SHA256|TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384|TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384|TLS_DHE_RSA_WITH_AES_256_CBC_SHA256|TLS_DHE_DSS_WITH_AES_256_CBC_SHA256|TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA|TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA|TLS_RSA_WITH_AES_256_CBC_SHA|TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA|TLS_ECDH_RSA_WITH_AES_256_CBC_SHA|TLS_DHE_RSA_WITH_AES_256_CBC_SHA|TLS_DHE_DSS_WITH_AES_256_CBC_SHA|TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256|TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256|TLS_RSA_WITH_AES_128_CBC_SHA256|TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256|TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256|TLS_DHE_RSA_WITH_AES_128_CBC_SHA256|TLS_DHE_DSS_WITH_AES_128_CBC_SHA256|TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA|TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA|TLS_RSA_WITH_AES_128_CBC_SHA|TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA|TLS_ECDH_RSA_WITH_AES_128_CBC_SHA|TLS_DHE_RSA_WITH_AES_128_CBC_SHA|TLS_DHE_DSS_WITH_AES_128_CBC_SHA|TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA|TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA|TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA|TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA|SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA|SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA|TLS_EMPTY_RENEGOTIATION_INFO_SCSV|TLS_DH_anon_WITH_AES_256_CBC_SHA256|TLS_ECDH_anon_WITH_AES_256_CBC_SHA|TLS_DH_anon_WITH_AES_256_CBC_SHA|TLS_DH_anon_WITH_AES_128_CBC_SHA256|TLS_ECDH_anon_WITH_AES_128_CBC_SHA|TLS_DH_anon_WITH_AES_128_CBC_SHA|TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA|SSL_DH_anon_WITH_3DES_EDE_CBC_SHA|SSL_RSA_WITH_DES_CBC_SHA|SSL_DHE_RSA_WITH_DES_CBC_SHA|SSL_DHE_DSS_WITH_DES_CBC_SHA|SSL_DH_anon_WITH_DES_CBC_SHA|SSL_RSA_EXPORT_WITH_DES40_CBC_SHA|SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA|SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA|SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA|TLS_RSA_WITH_NULL_SHA256|TLS_ECDHE_ECDSA_WITH_NULL_SHA|TLS_ECDHE_RSA_WITH_NULL_SHA|SSL_RSA_WITH_NULL_SHA|TLS_ECDH_ECDSA_WITH_NULL_SHA|TLS_ECDH_RSA_WITH_NULL_SHA|TLS_ECDH_anon_WITH_NULL_SHA|SSL_RSA_WITH_NULL_MD5|TLS_KRB5_WITH_3DES_EDE_CBC_SHA|TLS_KRB5_WITH_3DES_EDE_CBC_MD5|TLS_KRB5_WITH_DES_CBC_SHA|TLS_KRB5_WITH_DES_CBC_MD5|TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA|TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5

server.python.log.name=ambari-server-command.log
# server.pyton.log.level=(INFO/DEBUG)
server.python.log.level=INFO
