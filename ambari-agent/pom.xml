<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
  <parent>
    <groupId>org.apache.ambari</groupId>
    <artifactId>ambari-project</artifactId>
    <version>1.3.0-SNAPSHOT</version>
    <relativePath>../ambari-project</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.ambari</groupId>
  <artifactId>ambari-agent</artifactId>
  <packaging>pom</packaging>
  <version>1.3.0-SNAPSHOT</version>
  <name>Ambari Agent</name>
  <description>Ambari Agent</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <final.name>${project.artifactId}-${project.version}</final.name>
    <package.release>1</package.release>
    <package.prefix>/usr</package.prefix>
    <package.log.dir>/var/log/ambari-agent</package.log.dir>
    <package.pid.dir>/var/run/ambari-agent</package.pid.dir>
    <skipTests>false</skipTests>
    <agent.install.dir>/usr/lib/python2.6/site-packages/ambari_agent</agent.install.dir>
    <ambari_commons.install.dir>/usr/lib/ambari-agent/lib/ambari_commons</ambari_commons.install.dir>
    <resource_management.install.dir>/usr/lib/ambari-agent/lib/resource_management</resource_management.install.dir>
    <jinja.install.dir>/usr/lib/python2.6/site-packages/jinja2</jinja.install.dir>
    <lib.dir>/usr/lib/ambari-agent/lib</lib.dir>
    <python.ver>python &gt;= 2.6</python.ver>
    <deb.python.ver>python (&gt;= 2.6)</deb.python.ver>
    <deb.architecture>amd64</deb.architecture>
    <deb.dependency.list>openssl, zlibc, ${deb.python.ver}</deb.dependency.list>
    <ambari.server.module>../ambari-server</ambari.server.module>
    <target.cache.dir>${project.build.directory}/cache/</target.cache.dir>
    <resource.keeper.script>${ambari.server.module}/src/main/python/ambari_server/resourceFilesKeeper.py</resource.keeper.script>
  </properties>
  <build>
    <plugins>
      <plugin>
         <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>validate</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
          <execution>
            <id>regex-property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>ambariVersion</name>
              <value>${project.version}</value>
              <regex>^([0-9]+)\.([0-9]+)\.([0-9]+)(\.|-).*</regex>
              <replacement>$1.$2.$3</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
          <descriptors>
            <descriptor>src/packages/tarball/all.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>build-tarball</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <configuration>
              <executable>${project.basedir}/../ambari-common/src/main/unix/ambari-python-wrap</executable>
              <workingDirectory>src/test/python</workingDirectory>
              <arguments>
                <argument>unitTests.py</argument>
              </arguments>
              <environmentVariables>
                <PYTHONPATH>${project.basedir}/../ambari-common/src/main/python/jinja2:${project.basedir}/../ambari-common/src/main/python/ambari_commons:${project.basedir}/../ambari-common/src/main/python/resource_management:${project.basedir}/../ambari-common/src/test/python:${project.basedir}/../ambari-common/src/main/python:${project.basedir}/src/main/python/ambari_agent:${project.basedir}/src/test/python/ambari_agent:${project.basedir}/src/test/python/resource_management:${project.basedir}/src/main/python:${project.basedir}/../ambari-server/src/main/resources/stacks/HDP/2.0.6/services/HDFS/package/files:${project.basedir}/../ambari-server/src/main/resources/stacks/HDP/1.3.2/services/HDFS/package/files:$PYTHONPATH</PYTHONPATH>
              </environmentVariables>
              <skip>${skipTests}</skip>
            </configuration>
            <id>python-test</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <!-- TODO: Looks like section is unused, maybe remove? -->
            <configuration>
              <executable>${project.basedir}/../ambari-common/src/main/unix/ambari-python-wrap</executable>
              <workingDirectory>target/ambari-agent-${project.version}</workingDirectory>
              <arguments>
                <argument>${project.basedir}/src/main/python/setup.py</argument>
                <argument>clean</argument>
                <argument>bdist_dumb</argument>
              </arguments>
              <environmentVariables>
                <PYTHONPATH>target/ambari-agent-${project.version}:$PYTHONPATH</PYTHONPATH>
              </environmentVariables>
            </configuration>
            <id>python-package</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <configuration>
              <executable>${project.basedir}/../ambari-common/src/main/unix/ambari-python-wrap</executable>
              <workingDirectory>${basedir}</workingDirectory>
              <arguments>
                <argument>${resource.keeper.script}</argument>
                <argument>${target.cache.dir}</argument>
              </arguments>
              <environmentVariables>
                <PYTHONPATH>target/ambari-agent-${project.version}:$PYTHONPATH</PYTHONPATH>
              </environmentVariables>
            </configuration>
            <id>generate-hash-files</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>2.0.1</version>
        <executions>
          <execution>
            <!-- unbinds rpm creation from maven lifecycle -->
            <phase>none</phase>
            <goals>
              <goal>rpm</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <copyright>2012, Apache Software Foundation</copyright>
          <group>Development</group>
          <description>Maven Recipe: RPM Package.</description>
          <requires>
            <require>openssl</require>
            <require>zlib</require>
            <require>${python.ver}</require>
          </requires>
          <postinstallScriptlet>
            <scriptFile>src/main/package/rpm/postinstall.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
          </postinstallScriptlet>
          <preinstallScriptlet>
            <scriptFile>src/main/package/rpm/preinstall.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
          </preinstallScriptlet>
          <preremoveScriptlet>
            <scriptFile>src/main/package/rpm/preremove.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
          </preremoveScriptlet>

          <needarch>x86_64</needarch>
          <autoRequires>false</autoRequires>
          <mappings>
            <mapping>
              <directory>${agent.install.dir}</directory>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>${project.build.directory}/${project.artifactId}-${project.version}/ambari_agent</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/var/lib/ambari-agent/</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <directoryIncluded>false</directoryIncluded>
              <sources>
                <source>
                  <location>../ambari-common/src/main/unix/ambari-python-wrap</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${ambari_commons.install.dir}</directory>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>${project.basedir}/../ambari-common/src/main/python/ambari_commons</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${resource_management.install.dir}</directory>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>${project.basedir}/../ambari-common/src/main/python/resource_management</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${jinja.install.dir}</directory>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>${project.basedir}/../ambari-common/src/main/python/jinja2/jinja2</location>
                  <excludes>
                    <exclude>${project.basedir}/../ambari-common/src/main/python/jinja2/jinja2/testsuite</exclude>
                  </excludes>
                </source>
              </sources>
            </mapping>
             <mapping>
              <directory>${lib.dir}/examples</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>src/examples</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/etc/ambari-agent/conf</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>conf/unix/ambari-agent.ini</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/sbin</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <directoryIncluded>false</directoryIncluded>
              <sources>
                <source>
                  <location>conf/unix/ambari-agent</location>
                  <filter>true</filter>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/var/lib/ambari-agent</directory>
              <filemode>700</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>conf/unix/ambari-env.sh</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/var/lib/ambari-agent</directory>
              <filemode>700</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>conf/unix/install-helper.sh</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${package.pid.dir}</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
            </mapping>
            <mapping>
              <directory>/var/lib/${project.artifactId}/data</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
            </mapping>
            <mapping>
              <directory>/var/lib/${project.artifactId}/data/tmp</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
            </mapping>
            <mapping>
              <directory>/var/lib/${project.artifactId}/keys</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
            </mapping>
            <mapping>
              <directory>${package.log.dir}</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
            </mapping>
            <mapping>
              <directory>/etc/rc.d/init.d</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>etc/init.d/ambari-agent</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/var/lib/${project.artifactId}/data</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>../version</location>
                  <filter>true</filter>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/var/lib/ambari-agent/cache</directory>
              <filemode>755</filemode>
              <username>root</username>
              <groupname>root</groupname>
              <sources>
                <source>
                  <location>${target.cache.dir}</location>
                </source>
              </sources>
            </mapping>
          </mappings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.vafer</groupId>
        <artifactId>jdeb</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <phase>none</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <controlDir>${basedir}/src/main/package/deb/control</controlDir>
          <deb>${basedir}/target/${project.artifactId}_${package-version}-${package-release}.deb</deb>
          <dataSet>
            <data>
              <src>${project.build.directory}/${project.artifactId}-${project.version}/ambari_agent</src>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>${agent.install.dir}</prefix>
                <user>root</user>
                <group>root</group>
              </mapper>
            </data>
            <data>
              <src>${project.basedir}/../ambari-common/src/main/python/jinja2/jinja2</src>
              <excludes>${project.basedir}/../ambari-common/src/main/python/jinja2/jinja2/testsuite</excludes>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>${jinja.install.dir}</prefix>
                <user>root</user>
                <group>root</group>
              </mapper>
            </data>
            <data>
              <src>src/examples</src>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>${lib.dir}/examples</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>conf/unix/ambari-agent.ini</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/etc/ambari-agent/conf</prefix>
                  <user>root</user>
                  <group>root</group>
                  <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>${basedir}/target/src/ambari-agent</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/usr/sbin</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>conf/unix/ambari-env.sh</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/var/lib/ambari-agent</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>700</filemode>
              </mapper>
            </data>
            <data>
              <src>conf/unix/install-helper.sh</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/var/lib/ambari-agent</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>700</filemode>
              </mapper>
            </data>
            <data>
              <type>template</type>
              <paths>
                <path>${package.pid.dir}</path>
                <path>/var/lib/${project.artifactId}/data</path>
                <path>/var/lib/${project.artifactId}/data/tmp</path>
                <path>/var/lib/${project.artifactId}/keys</path>
                <path>${package.log.dir}</path>
              </paths>
              <mapper>
                <type>perm</type>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>etc/init.d/ambari-agent</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/etc/init.d</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>${basedir}/target/src/version</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/var/lib/${project.artifactId}/data</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>../ambari-common/src/main/unix/ambari-python-wrap</src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <prefix>/var/lib/ambari-agent</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>${target.cache.dir}</src>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>/var/lib/ambari-agent/cache</prefix>
                <user>root</user>
                <group>root</group>
                <filemode>755</filemode>
              </mapper>
            </data>
            <data>
              <src>
                ${project.basedir}/../ambari-common/src/main/python/ambari_commons
              </src>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>${ambari_commons.install.dir}</prefix>
                <filemode>755</filemode>
                <user>root</user>
                <group>root</group>
              </mapper>
            </data>
            <data>
              <src>
                ${project.basedir}/../ambari-common/src/main/python/resource_management
              </src>
              <type>directory</type>
              <mapper>
                <type>perm</type>
                <prefix>${resource_management.install.dir}</prefix>
                <filemode>755</filemode>
                <user>root</user>
                <group>root</group>
              </mapper>
            </data>
          </dataSet>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${target.cache.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${ambari.server.module}/src/main/resources</directory>
                  <includes>
                    <include>stacks/**/*</include>
                    <include>custom_actions/**/*</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
           <execution>
            <id>copy-resources-filter</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/src</outputDirectory>
              <resources>
                <resource>
                  <directory>conf/unix</directory>
                  <includes>
                    <include>ambari-agent</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${basedir}/../</directory>
                  <includes>
                    <include>version</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>src/examples/*</exclude>
            <exclude>src/test/python/dummy*.txt</exclude>
            <exclude>src/test/python/ambari_agent/dummy_files/*</exclude>
            <exclude>src/test/python/ambari_agent/dummy*.txt</exclude>
            <exclude>src/main/python/ambari_agent/imports.txt</exclude>
            <exclude>**/*.erb</exclude>
            <exclude>**/*.json</exclude>
            <exclude>**/*.pydevproject</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${buildnumber-maven-plugin-version}</version>
          <configuration>
              <urlScm>scm:git:https://git-wip-us.apache.org/repos/asf/incubator-ambari.git</urlScm>
          </configuration>
          <executions>
              <execution>
                  <phase>validate</phase>
                  <goals>
                      <goal>create</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
      </extension>
    </extensions>
  </build>
</project>
