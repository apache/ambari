{
  "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations?fields=*",
  "items" : [
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/datanode_du_reserved",
      "StackConfigurations" : {
        "property_description" : "Reserved space for HDFS",
        "property_name" : "datanode_du_reserved",
        "property_value" : "1",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.access.time.precision",
      "StackConfigurations" : {
        "property_description" : "The access time for HDFS file is precise up to this value.\n               The default value is 1 hour. Setting a value of 0 disables\n               access times for HDFS.\n  ",
        "property_name" : "dfs.access.time.precision",
        "property_value" : "0",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.balance.bandwidthPerSec",
      "StackConfigurations" : {
        "property_description" : "\n        Specifies the maximum amount of bandwidth that each datanode\n        can utilize for the balancing purpose in term of\n        the number of bytes per second.\n  ",
        "property_name" : "dfs.balance.bandwidthPerSec",
        "property_value" : "6250000",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.block.access.token.enable",
      "StackConfigurations" : {
        "property_description" : "\nIf \"true\", access tokens are used as capabilities for accessing datanodes.\nIf \"false\", no access tokens are checked on accessing datanodes.\n",
        "property_name" : "dfs.block.access.token.enable",
        "property_value" : "true",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.block.size",
      "StackConfigurations" : {
        "property_description" : "The default block size for new files.",
        "property_name" : "dfs.block.size",
        "property_value" : "134217728",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.blockreport.initialDelay",
      "StackConfigurations" : {
        "property_description" : "Delay for first block report in seconds.",
        "property_name" : "dfs.blockreport.initialDelay",
        "property_value" : "120",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.cluster.administrators",
      "StackConfigurations" : {
        "property_description" : "ACL for who all can view the default servlets in the HDFS",
        "property_name" : "dfs.cluster.administrators",
        "property_value" : " hdfs",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.datanode.du.pct",
      "StackConfigurations" : {
        "property_description" : "When calculating remaining space, only use this percentage of the real available space\n",
        "property_name" : "dfs.datanode.du.pct",
        "property_value" : "0.85f",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.datanode.failed.volumes.tolerated",
      "StackConfigurations" : {
        "property_description" : "Number of failed disks datanode would tolerate",
        "property_name" : "dfs.datanode.failed.volumes.tolerated",
        "property_value" : "0",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.datanode.ipc.address",
      "StackConfigurations" : {
        "property_description" : "\nThe datanode ipc server address and port.\nIf the port is 0 then the server will start on a free port.\n",
        "property_name" : "dfs.datanode.ipc.address",
        "property_value" : "0.0.0.0:8010",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.datanode.max.xcievers",
      "StackConfigurations" : {
        "property_description" : "PRIVATE CONFIG VARIABLE",
        "property_name" : "dfs.datanode.max.xcievers",
        "property_value" : "4096",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.datanode.socket.write.timeout",
      "StackConfigurations" : {
        "property_description" : "DFS Client write socket timeout",
        "property_name" : "dfs.datanode.socket.write.timeout",
        "property_value" : "0",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.heartbeat.interval",
      "StackConfigurations" : {
        "property_description" : "Determines datanode heartbeat interval in seconds.",
        "property_name" : "dfs.heartbeat.interval",
        "property_value" : "3",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.https.port",
      "StackConfigurations" : {
        "property_description" : "The https port where namenode binds",
        "property_name" : "dfs.https.port",
        "property_value" : "50470",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.avoid.read.stale.datanode",
      "StackConfigurations" : {
        "property_description" : "\n      Indicate whether or not to avoid reading from stale datanodes whose\n      heartbeat messages have not been received by the namenode for more than a\n      specified time interval.\n    ",
        "property_name" : "dfs.namenode.avoid.read.stale.datanode",
        "property_value" : "true",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.avoid.write.stale.datanode",
      "StackConfigurations" : {
        "property_description" : "\n      Indicate whether or not to avoid writing to stale datanodes whose\n      heartbeat messages have not been received by the namenode for more than a\n      specified time interval.\n    ",
        "property_name" : "dfs.namenode.avoid.write.stale.datanode",
        "property_value" : "true",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.handler.count",
      "StackConfigurations" : {
        "property_description" : "Added to grow Queue size so that more client connections are allowed",
        "property_name" : "dfs.namenode.handler.count",
        "property_value" : "100",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.handler.count",
      "StackConfigurations" : {
        "property_description" : "The number of server threads for the namenode.",
        "property_name" : "dfs.namenode.handler.count",
        "property_value" : "40",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.stale.datanode.interval",
      "StackConfigurations" : {
        "property_description" : "Datanode is stale after not getting a heartbeat in this interval in ms",
        "property_name" : "dfs.namenode.stale.datanode.interval",
        "property_value" : "30000",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.namenode.write.stale.datanode.ratio",
      "StackConfigurations" : {
        "property_description" : "When the ratio of number stale datanodes to total datanodes marked is greater\n      than this ratio, stop avoiding writing to stale nodes so as to prevent causing hotspots.\n    ",
        "property_name" : "dfs.namenode.write.stale.datanode.ratio",
        "property_value" : "1.0f",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.permissions",
      "StackConfigurations" : {
        "property_description" : "\nIf \"true\", enable permission checking in HDFS.\nIf \"false\", permission checking is turned off,\nbut all other behavior is unchanged.\nSwitching from one parameter value to the other does not change the mode,\nowner or group of files or directories.\n",
        "property_name" : "dfs.permissions",
        "property_value" : "true",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.permissions.supergroup",
      "StackConfigurations" : {
        "property_description" : "The name of the group of super-users.",
        "property_name" : "dfs.permissions.supergroup",
        "property_value" : "hdfs",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.replication.max",
      "StackConfigurations" : {
        "property_description" : "Maximal block replication.\n  ",
        "property_name" : "dfs.replication.max",
        "property_value" : "50",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.safemode.threshold.pct",
      "StackConfigurations" : {
        "property_description" : "\n        Specifies the percentage of blocks that should satisfy\n        the minimal replication requirement defined by dfs.replication.min.\n        Values less than or equal to 0 mean not to start in safe mode.\n        Values greater than 1 will make safe mode permanent.\n        ",
        "property_name" : "dfs.safemode.threshold.pct",
        "property_value" : "1.0f",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.secondary.https.port",
      "StackConfigurations" : {
        "property_description" : "The https port where secondary-namenode binds",
        "property_name" : "dfs.secondary.https.port",
        "property_value" : "50490",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.umaskmode",
      "StackConfigurations" : {
        "property_description" : "\nThe octal umask used when creating files and directories.\n",
        "property_name" : "dfs.umaskmode",
        "property_value" : "077",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs.web.ugi",
      "StackConfigurations" : {
        "property_description" : "The user account used by the web interface.\nSyntax: USERNAME,GROUP1,GROUP2, ...\n",
        "property_name" : "dfs.web.ugi",
        "property_value" : "gopher,gopher",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_block_local_path_access_user",
      "StackConfigurations" : {
        "property_description" : "Default Block Replication.",
        "property_name" : "dfs_block_local_path_access_user",
        "property_value" : "hbase",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_data_dir",
      "StackConfigurations" : {
        "property_description" : "Data directories for Data Nodes.",
        "property_name" : "dfs_data_dir",
        "property_value" : "/hadoop/hdfs/data",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_datanode_address",
      "StackConfigurations" : {
        "property_description" : "Port for datanode address.",
        "property_name" : "dfs_datanode_address",
        "property_value" : "50010",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_datanode_data_dir_perm",
      "StackConfigurations" : {
        "property_description" : "Datanode dir perms.",
        "property_name" : "dfs_datanode_data_dir_perm",
        "property_value" : "750",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_datanode_failed_volume_tolerated",
      "StackConfigurations" : {
        "property_description" : "DataNode volumes failure toleration",
        "property_name" : "dfs_datanode_failed_volume_tolerated",
        "property_value" : "0",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_datanode_http_address",
      "StackConfigurations" : {
        "property_description" : "Port for datanode address.",
        "property_name" : "dfs_datanode_http_address",
        "property_value" : "50075",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_name_dir",
      "StackConfigurations" : {
        "property_description" : "NameNode Directories.",
        "property_name" : "dfs_name_dir",
        "property_value" : "/hadoop/hdfs/namenode",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_replication",
      "StackConfigurations" : {
        "property_description" : "Default Block Replication.",
        "property_name" : "dfs_replication",
        "property_value" : "3",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dfs_webhdfs_enabled",
      "StackConfigurations" : {
        "property_description" : "WebHDFS enabled",
        "property_name" : "dfs_webhdfs_enabled",
        "property_value" : "true",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/dtnode_heapsize",
      "StackConfigurations" : {
        "property_description" : "DataNode maximum Java heap size",
        "property_name" : "dtnode_heapsize",
        "property_value" : "1024",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs.checkpoint.edits.dir",
      "StackConfigurations" : {
        "property_description" : "Determines where on the local filesystem the DFS secondary\n        name node should store the temporary edits to merge.\n        If this is a comma-delimited list of directoires then teh edits is\n        replicated in all of the directoires for redundancy.\n        Default value is same as fs.checkpoint.dir\n    ",
        "property_name" : "fs.checkpoint.edits.dir",
        "property_value" : "${fs.checkpoint.dir}",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs.checkpoint.period",
      "StackConfigurations" : {
        "property_description" : "The number of seconds between two periodic checkpoints.\n  ",
        "property_name" : "fs.checkpoint.period",
        "property_value" : "21600",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs.checkpoint.size",
      "StackConfigurations" : {
        "property_description" : "The size of the current edit log (in bytes) that triggers\n       a periodic checkpoint even if the fs.checkpoint.period hasn't expired.\n  ",
        "property_name" : "fs.checkpoint.size",
        "property_value" : "536870912",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs.trash.interval",
      "StackConfigurations" : {
        "property_description" : "Number of minutes between trash checkpoints.\n  If zero, the trash feature is disabled.\n  ",
        "property_name" : "fs.trash.interval",
        "property_value" : "360",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs_checkpoint_dir",
      "StackConfigurations" : {
        "property_description" : "Secondary NameNode checkpoint dir.",
        "property_name" : "fs_checkpoint_dir",
        "property_value" : "/hadoop/hdfs/namesecondary",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs_checkpoint_period",
      "StackConfigurations" : {
        "property_description" : "HDFS Maximum Checkpoint Delay",
        "property_name" : "fs_checkpoint_period",
        "property_value" : "21600",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/fs_checkpoint_size",
      "StackConfigurations" : {
        "property_description" : "FS Checkpoint Size.",
        "property_name" : "fs_checkpoint_size",
        "property_value" : "0.5",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/hadoop.security.authentication",
      "StackConfigurations" : {
        "property_description" : "\n   Set the authentication for the cluster. Valid values are: simple or\n   kerberos.\n   ",
        "property_name" : "hadoop.security.authentication",
        "property_value" : "simple",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/hadoop_heapsize",
      "StackConfigurations" : {
        "property_description" : "Hadoop maximum Java heap size",
        "property_name" : "hadoop_heapsize",
        "property_value" : "1024",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/hadoop_pid_dir_prefix",
      "StackConfigurations" : {
        "property_description" : "Hadoop PID Dir Prefix",
        "property_name" : "hadoop_pid_dir_prefix",
        "property_value" : "/var/run/hadoop",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/hdfs_log_dir_prefix",
      "StackConfigurations" : {
        "property_description" : "Hadoop Log Dir Prefix",
        "property_name" : "hdfs_log_dir_prefix",
        "property_value" : "/var/log/hadoop",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/hdfs_user",
      "StackConfigurations" : {
        "property_description" : "User and Groups.",
        "property_name" : "hdfs_user",
        "property_value" : "hdfs",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/io.compression.codec.lzo.class",
      "StackConfigurations" : {
        "property_description" : "The implementation for lzo codec.",
        "property_name" : "io.compression.codec.lzo.class",
        "property_value" : "com.hadoop.compression.lzo.LzoCodec",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/io.compression.codecs",
      "StackConfigurations" : {
        "property_description" : "A list of the compression codec classes that can be used\n                 for compression/decompression.",
        "property_name" : "io.compression.codecs",
        "property_value" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec,org.apache.hadoop.io.compress.SnappyCodec",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/io.file.buffer.size",
      "StackConfigurations" : {
        "property_description" : "The size of buffer for use in sequence files.\n  The size of this buffer should probably be a multiple of hardware\n  page size (4096 on Intel x86), and it determines how much data is\n  buffered during read and write operations.",
        "property_name" : "io.file.buffer.size",
        "property_value" : "131072",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/io.serializations",
      "StackConfigurations" : {
        "property_description" : null,
        "property_name" : "io.serializations",
        "property_value" : "org.apache.hadoop.io.serializer.WritableSerialization",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/ipc.client.connect.max.retries",
      "StackConfigurations" : {
        "property_description" : "Defines the maximum number of retries for IPC connections.",
        "property_name" : "ipc.client.connect.max.retries",
        "property_value" : "50",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/ipc.client.connection.maxidletime",
      "StackConfigurations" : {
        "property_description" : "The maximum time after which a client will bring down the\n               connection to the server.\n  ",
        "property_name" : "ipc.client.connection.maxidletime",
        "property_value" : "30000",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/ipc.client.idlethreshold",
      "StackConfigurations" : {
        "property_description" : "Defines the threshold number of connections after which\n               connections will be inspected for idleness.\n  ",
        "property_name" : "ipc.client.idlethreshold",
        "property_value" : "8000",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/ipc.server.max.response.size",
      "StackConfigurations" : {
        "property_description" : null,
        "property_name" : "ipc.server.max.response.size",
        "property_value" : "5242880",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/ipc.server.read.threadpool.size",
      "StackConfigurations" : {
        "property_description" : null,
        "property_name" : "ipc.server.read.threadpool.size",
        "property_value" : "5",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hdfs-site.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/kerberos_domain",
      "StackConfigurations" : {
        "property_description" : "Kerberos realm.",
        "property_name" : "kerberos_domain",
        "property_value" : "EXAMPLE.COM",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/keytab_path",
      "StackConfigurations" : {
        "property_description" : "Kerberos keytab path.",
        "property_name" : "keytab_path",
        "property_value" : "/etc/security/keytabs",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_formatted_mark_dir",
      "StackConfigurations" : {
        "property_description" : "Formatteed Mark Directory.",
        "property_name" : "namenode_formatted_mark_dir",
        "property_value" : "/var/run/hadoop/hdfs/namenode/formatted/",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_heapsize",
      "StackConfigurations" : {
        "property_description" : "NameNode Java heap size",
        "property_name" : "namenode_heapsize",
        "property_value" : "1024",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_opt_maxnewsize",
      "StackConfigurations" : {
        "property_description" : "NameNode maximum new generation size",
        "property_name" : "namenode_opt_maxnewsize",
        "property_value" : "640",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_opt_newsize",
      "StackConfigurations" : {
        "property_description" : "NameNode new generation size",
        "property_name" : "namenode_opt_newsize",
        "property_value" : "200",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_opt_maxpermsize",
      "StackConfigurations" : {
        "property_description" : "NameNode maximum permanent generation size",
        "property_name" : "namenode_opt_maxpermsize",
        "property_value" : "256",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/namenode_opt_permsize",
      "StackConfigurations" : {
        "property_description" : "NameNode permanent generation size",
        "property_name" : "namenode_opt_permsize",
        "property_value" : "128",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/proxyuser_group",
      "StackConfigurations" : {
        "property_description" : "Proxy user group.",
        "property_name" : "proxyuser_group",
        "property_value" : "users",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.client.datanode.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for ClientDatanodeProtocol, the client-to-datanode protocol\n    for block recovery.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.client.datanode.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.client.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for ClientProtocol, which is used by user code\n    via the DistributedFileSystem.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.client.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.datanode.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for DatanodeProtocol, which is used by datanodes to\n    communicate with the namenode.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.datanode.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.inter.datanode.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for InterDatanodeProtocol, the inter-datanode protocol\n    for updating generation timestamp.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.inter.datanode.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.inter.tracker.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for InterTrackerProtocol, used by the tasktrackers to\n    communicate with the jobtracker.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.inter.tracker.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.job.submission.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for JobSubmissionProtocol, used by job clients to\n    communciate with the jobtracker for job submission, querying job status etc.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.job.submission.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.namenode.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for NamenodeProtocol, the protocol used by the secondary\n    namenode to communicate with the namenode.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.namenode.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security.task.umbilical.protocol.acl",
      "StackConfigurations" : {
        "property_description" : "ACL for TaskUmbilicalProtocol, used by the map and reduce\n    tasks to communicate with the parent tasktracker.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
        "property_name" : "security.task.umbilical.protocol.acl",
        "property_value" : "*",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "hadoop-policy.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/security_enabled",
      "StackConfigurations" : {
        "property_description" : "Hadoop Security",
        "property_name" : "security_enabled",
        "property_value" : "false",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "global.xml"
      }
    },
    {
      "href" : "http://localhost:8080/api/v1/stacks2/HDP/versions/1.3.0/stackServices/HDFS/configurations/webinterface.private.actions",
      "StackConfigurations" : {
        "property_description" : " If set to true, the web interfaces of JT and NN may contain\n                actions, such as kill job, delete file, etc., that should\n                not be exposed to public. Enable this option if the interfaces\n                are only reachable by those who have the right authorization.\n  ",
        "property_name" : "webinterface.private.actions",
        "property_value" : "false",
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "1.3.0",
        "type" : "core-site.xml"
      }
    }
  ]
}