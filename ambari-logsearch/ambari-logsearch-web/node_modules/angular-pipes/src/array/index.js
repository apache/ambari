"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var empty_pipe_1 = require("./empty.pipe");
var head_pipe_1 = require("./head.pipe");
var initial_pipe_1 = require("./initial.pipe");
var last_pipe_1 = require("./last.pipe");
var join_pipe_1 = require("./join.pipe");
var tail_pipe_1 = require("./tail.pipe");
var uniq_pipe_1 = require("./uniq.pipe");
var without_pipe_1 = require("./without.pipe");
var map_pipe_1 = require("./map.pipe");
var where_pipe_1 = require("./where.pipe");
var first_or_default_pipe_1 = require("./first-or-default.pipe");
var range_pipe_1 = require("./range.pipe");
var pluck_pipe_1 = require("./pluck.pipe");
var reverse_pipe_1 = require("./reverse.pipe");
var order_by_pipe_1 = require("./order-by.pipe");
var count_pipe_1 = require("./count.pipe");
var some_pipe_1 = require("./some.pipe");
var every_pipe_1 = require("./every.pipe");
var shuffle_pipe_1 = require("./shuffle.pipe");
var take_pipe_1 = require("./take.pipe");
var drop_pipe_1 = require("./drop.pipe");
var deep_pipe_1 = require("./deep.pipe");
var chunk_pipe_1 = require("./chunk.pipe");
var flatten_pipe_1 = require("./flatten.pipe");
var intersection_pipe_1 = require("./intersection.pipe");
var union_pipe_1 = require("./union.pipe");
var take_while_pipe_1 = require("./take-while.pipe");
var take_until_pipe_1 = require("./take-until.pipe");
__export(require("./empty.pipe"));
__export(require("./head.pipe"));
__export(require("./initial.pipe"));
__export(require("./last.pipe"));
__export(require("./join.pipe"));
__export(require("./tail.pipe"));
__export(require("./uniq.pipe"));
__export(require("./without.pipe"));
__export(require("./map.pipe"));
__export(require("./where.pipe"));
__export(require("./first-or-default.pipe"));
__export(require("./range.pipe"));
__export(require("./pluck.pipe"));
__export(require("./reverse.pipe"));
__export(require("./order-by.pipe"));
__export(require("./count.pipe"));
__export(require("./some.pipe"));
__export(require("./every.pipe"));
__export(require("./shuffle.pipe"));
__export(require("./take.pipe"));
__export(require("./drop.pipe"));
__export(require("./deep.pipe"));
__export(require("./chunk.pipe"));
__export(require("./flatten.pipe"));
__export(require("./intersection.pipe"));
__export(require("./union.pipe"));
__export(require("./take-while.pipe"));
__export(require("./take-until.pipe"));
var NgArrayPipesModule = (function () {
    function NgArrayPipesModule() {
    }
    return NgArrayPipesModule;
}());
NgArrayPipesModule.decorators = [
    { type: core_1.NgModule, args: [{
                declarations: [
                    empty_pipe_1.EmptyPipe,
                    head_pipe_1.HeadPipe,
                    initial_pipe_1.InitialPipe,
                    last_pipe_1.LastPipe,
                    join_pipe_1.JoinPipe,
                    tail_pipe_1.TailPipe,
                    uniq_pipe_1.UniqPipe,
                    without_pipe_1.WithoutPipe,
                    map_pipe_1.MapPipe,
                    where_pipe_1.WherePipe,
                    range_pipe_1.RangePipe,
                    pluck_pipe_1.PluckPipe,
                    reverse_pipe_1.ReversePipe,
                    order_by_pipe_1.OrderByPipe,
                    count_pipe_1.CountPipe,
                    some_pipe_1.SomePipe,
                    every_pipe_1.EveryPipe,
                    shuffle_pipe_1.ShufflePipe,
                    take_pipe_1.TakePipe,
                    drop_pipe_1.DropPipe,
                    deep_pipe_1.DeepPipe,
                    chunk_pipe_1.ChunkPipe,
                    flatten_pipe_1.FlattenPipe,
                    first_or_default_pipe_1.FirstOrDefaultPipe,
                    intersection_pipe_1.IntersectionPipe,
                    union_pipe_1.UnionPipe,
                    take_while_pipe_1.TakeWhilePipe,
                    take_until_pipe_1.TakeUntilPipe
                ],
                exports: [
                    empty_pipe_1.EmptyPipe,
                    head_pipe_1.HeadPipe,
                    initial_pipe_1.InitialPipe,
                    last_pipe_1.LastPipe,
                    join_pipe_1.JoinPipe,
                    tail_pipe_1.TailPipe,
                    uniq_pipe_1.UniqPipe,
                    without_pipe_1.WithoutPipe,
                    map_pipe_1.MapPipe,
                    where_pipe_1.WherePipe,
                    range_pipe_1.RangePipe,
                    pluck_pipe_1.PluckPipe,
                    reverse_pipe_1.ReversePipe,
                    order_by_pipe_1.OrderByPipe,
                    count_pipe_1.CountPipe,
                    some_pipe_1.SomePipe,
                    every_pipe_1.EveryPipe,
                    shuffle_pipe_1.ShufflePipe,
                    take_pipe_1.TakePipe,
                    drop_pipe_1.DropPipe,
                    deep_pipe_1.DeepPipe,
                    chunk_pipe_1.ChunkPipe,
                    flatten_pipe_1.FlattenPipe,
                    first_or_default_pipe_1.FirstOrDefaultPipe,
                    intersection_pipe_1.IntersectionPipe,
                    union_pipe_1.UnionPipe,
                    take_while_pipe_1.TakeWhilePipe,
                    take_until_pipe_1.TakeUntilPipe
                ]
            },] },
];
/** @nocollapse */
NgArrayPipesModule.ctorParameters = function () { return []; };
exports.NgArrayPipesModule = NgArrayPipesModule;
//# sourceMappingURL=index.js.map