import { Pipe } from '@angular/core';
import { isArray, isFunction, getProperty } from '../utils/utils';
var WherePipe = (function () {
    function WherePipe() {
    }
    /**
    * Support a function or a value or the shorthand ['key', value] like the lodash shorthand.
    */
    WherePipe.prototype.transform = function (input, fn) {
        if (!isArray(input)) {
            return input;
        }
        if (isFunction(fn)) {
            return input.filter(fn);
        }
        else if (isArray(fn)) {
            var key_1 = fn[0], value_1 = fn[1];
            return input.filter(function (item) { return getProperty(item, key_1) === value_1; });
        }
        else if (fn) {
            return input.filter(function (item) { return item === fn; });
        }
        else {
            return input;
        }
    };
    return WherePipe;
}());
export { WherePipe };
WherePipe.decorators = [
    { type: Pipe, args: [{
                name: 'where'
            },] },
];
/** @nocollapse */
WherePipe.ctorParameters = function () { return []; };
//# sourceMappingURL=where.pipe.js.map