import { Pipe } from '@angular/core';
import { isArray, isFunction, getProperty } from '../utils/utils';
var FirstOrDefaultPipe = (function () {
    function FirstOrDefaultPipe() {
    }
    FirstOrDefaultPipe.find = function (input, predicate, defaultValue) {
        var found = false;
        var result;
        var i = -1;
        while (!found && ++i < input.length) {
            found = predicate(input[i], i, input);
        }
        if (found) {
            result = input[i];
        }
        if (typeof result === 'undefined' && typeof defaultValue !== 'undefined') {
            result = defaultValue;
        }
        return result;
    };
    FirstOrDefaultPipe.prototype.transform = function (input, predicate, defaultValue) {
        if (!isArray(input)) {
            return input;
        }
        if (isFunction(predicate)) {
            return FirstOrDefaultPipe.find(input, predicate, defaultValue);
        }
        else if (isArray(predicate)) {
            var _a = predicate, key_1 = _a[0], value_1 = _a[1];
            return FirstOrDefaultPipe.find(input, function (item) { return getProperty(item, key_1) === value_1; }, defaultValue);
        }
        else if (predicate) {
            return FirstOrDefaultPipe.find(input, function (item) { return item === predicate; }, defaultValue);
        }
        else {
            return input;
        }
    };
    return FirstOrDefaultPipe;
}());
export { FirstOrDefaultPipe };
FirstOrDefaultPipe.decorators = [
    { type: Pipe, args: [{
                name: 'firstOrDefault'
            },] },
];
/** @nocollapse */
FirstOrDefaultPipe.ctorParameters = function () { return []; };
//# sourceMappingURL=first-or-default.pipe.js.map