import { Pipe } from '@angular/core';
import { isArray, isDeepObject, unwrapDeep, deepIndexOf } from '../utils/utils';
var IntersectionPipe = (function () {
    function IntersectionPipe() {
    }
    IntersectionPipe.prototype.transform = function (a, b) {
        if ((!isArray(a) && !isDeepObject(a)) || !isArray(b)) {
            return [];
        }
        if (isDeepObject(a)) {
            var unwrapped = unwrapDeep(a);
            if (!isArray(unwrapped)) {
                return [];
            }
            return unwrapped.reduce(function (intersection, value) { return intersection.concat((deepIndexOf(b, value) !== -1 && deepIndexOf(intersection, value) === -1) ? value : []); }, []);
        }
        return a.reduce(function (intersection, value) { return intersection.concat((b.indexOf(value) !== -1 && intersection.indexOf(value) === -1) ? value : []); }, []);
    };
    return IntersectionPipe;
}());
export { IntersectionPipe };
IntersectionPipe.decorators = [
    { type: Pipe, args: [{
                name: 'intersection'
            },] },
];
/** @nocollapse */
IntersectionPipe.ctorParameters = function () { return []; };
//# sourceMappingURL=intersection.pipe.js.map