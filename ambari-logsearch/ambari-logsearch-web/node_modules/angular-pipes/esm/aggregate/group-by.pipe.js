import { Pipe } from '@angular/core';
import { getProperty, isArray, isUndefined } from '../utils/utils';
var GroupByPipe = (function () {
    function GroupByPipe() {
    }
    GroupByPipe.prototype.transform = function (input, prop) {
        if (!isArray(input)) {
            return input;
        }
        var arr = {};
        for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {
            var value = input_1[_i];
            var field = getProperty(value, prop);
            if (isUndefined(arr[field])) {
                arr[field] = [];
            }
            arr[field].push(value);
        }
        return Object.keys(arr).map(function (key) { return ({ key: key, 'value': arr[key] }); });
    };
    return GroupByPipe;
}());
export { GroupByPipe };
GroupByPipe.decorators = [
    { type: Pipe, args: [{
                name: 'groupBy'
            },] },
];
/** @nocollapse */
GroupByPipe.ctorParameters = function () { return []; };
//# sourceMappingURL=group-by.pipe.js.map