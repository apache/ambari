{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,mBAAmB,EAAE,MAAM,WAAW,CAAC;AAEhD,MAAM,qBAAqB,KAAY,EAAE,MAAa;IACpD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAxB,CAAwB,CAAC,CAAC;AACxD,CAAC;AAED;;GAEG;AACH,MAAM,sBAAsB,WAAwB;IAC1C,IAAA,2CAAc,EAAE,iDAAiB,CAAiB;IAClD,IAAA,+CAAK,CAAuC;IAEpD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAED,MAAM,uBAAuB,WAAwB;IACnD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED;;EAEE;AACF,MAAM,qBAAqB,MAAM;IAC/B,MAAM,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC;AAGD,MAAM,yBAAyB,MAAuB,EAAE,SAAkB;IACxE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,EAAqB;YAAnB,gBAAQ,EAAE,kBAAO;QACnD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC,EAAE,MAAM,CAAC,CAAC;AACb,CAAC","file":"utils.js","sourceRoot":"","sourcesContent":["import { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { LiftedState } from './reducer';\nimport { StoreDevtoolActions } from './actions';\n\nexport function difference(first: any[], second: any[]) {\n  return first.filter(item => second.indexOf(item) < 0);\n}\n\n/**\n * Provides an app's view into the state of the lifted store.\n */\nexport function unliftState(liftedState: LiftedState) {\n  const { computedStates, currentStateIndex } = liftedState;\n  const { state } = computedStates[currentStateIndex];\n\n  return state;\n}\n\nexport function unliftAction(liftedState: LiftedState) {\n  return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n\n/**\n* Lifts an app's action into an action on the lifted store.\n*/\nexport function liftAction(action) {\n  return StoreDevtoolActions.performAction(action);\n}\n\n\nexport function applyOperators(input$: Observable<any>, operators: any[][]): Observable<any> {\n  return operators.reduce((source$, [ operator, ...args ]) => {\n    return operator.apply(source$, args);\n  }, input$);\n}"]}