{"version":3,"sources":["../../src/devtools.ts"],"names":[],"mappings":"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","file":"devtools.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { State, INITIAL_STATE, INITIAL_REDUCER, Dispatcher, Reducer } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operator/map';\nimport { merge } from 'rxjs/operator/merge';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { scan } from 'rxjs/operator/scan';\nimport { skip } from 'rxjs/operator/skip';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { queue } from 'rxjs/scheduler/queue';\n\nimport { DevtoolsExtension } from './extension';\nimport { liftAction, unliftState, applyOperators } from './utils';\nimport { liftReducerWith, liftInitialState, LiftedState } from './reducer';\nimport { StoreDevtoolActions as actions } from './actions';\nimport { StoreDevtoolsConfig, STORE_DEVTOOLS_CONFIG } from './config';\n\n\nexport class DevtoolsDispatcher extends Dispatcher { static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class StoreDevtools implements Observer<any> {\n  private stateSubscription: Subscription;\n  public dispatcher: Dispatcher;\n  public liftedState: Observable<LiftedState>;\n  public state: Observable<any>;\n\n  constructor(\n    dispatcher: DevtoolsDispatcher,\n    actions$: Dispatcher,\n    reducers$: Reducer,\n    extension: DevtoolsExtension,\n     initialState: any,\n     config: StoreDevtoolsConfig\n  ) {\n    const liftedInitialState = liftInitialState(initialState, config.monitor);\n    const liftReducer = liftReducerWith(initialState, liftedInitialState, config.monitor, {\n      maxAge: config.maxAge\n    });\n\n    const liftedAction$ = applyOperators(actions$, [\n      [ skip, 1 ],\n      [ merge, extension.actions$ ],\n      [ map, liftAction ],\n      [ merge, dispatcher, extension.liftedActions$ ],\n      [ observeOn, queue ]\n    ]);\n\n    const liftedReducer$ = map.call(reducers$, liftReducer);\n\n    const liftedStateSubject = new ReplaySubject(1);\n    const liftedStateSubscription = applyOperators(liftedAction$, [\n      [ withLatestFrom, liftedReducer$ ],\n      [ scan, (liftedState, [ action, reducer ]) => {\n        const nextState = reducer(liftedState, action);\n\n        extension.notify(action, nextState);\n\n        return nextState;\n      }, liftedInitialState]\n    ]).subscribe(liftedStateSubject);\n\n    const liftedState$ = liftedStateSubject.asObservable();\n    const state$ = map.call(liftedState$, unliftState);\n\n    this.stateSubscription = liftedStateSubscription;\n    this.dispatcher = dispatcher;\n    this.liftedState = liftedState$;\n    this.state = state$;\n  }\n\n  dispatch(action) {\n    this.dispatcher.dispatch(action);\n  }\n\n  next(action: any) {\n    this.dispatcher.dispatch(action);\n  }\n\n  error(error: any) { }\n\n  complete() { }\n\n  performAction(action: any) {\n    this.dispatch(actions.performAction(action));\n  }\n\n  reset() {\n    this.dispatch(actions.reset());\n  }\n\n  rollback() {\n    this.dispatch(actions.rollback());\n  }\n\n  commit() {\n    this.dispatch(actions.commit());\n  }\n\n  sweep() {\n    this.dispatch(actions.sweep());\n  }\n\n  toggleAction(id: number) {\n    this.dispatch(actions.toggleAction(id));\n  }\n\n  jumpToState(index: number) {\n    this.dispatch(actions.jumpToState(index));\n  }\n\n  importState(nextLiftedState: any) {\n    this.dispatch(actions.importState(nextLiftedState));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DevtoolsDispatcher, },\n{type: Dispatcher, },\n{type: Reducer, },\n{type: DevtoolsExtension, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}