{"version":3,"sources":["../../.tmp/utils/decorators.ts"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,MAAM,mBAAmB,YAAiB;IACxC,IAAM,KAAK,GAAG,QAAQ,CAAC;IACvB,MAAM,CAAC,yBAAyB,MAAU,EAAE,WAAkB;QAC5D,IAAI,IAAI,GAAG,QAAM,WAAW,UAAO,CAAC;QACpC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,WAAW,EAAE;YACzC,GAAG,EAAH,cAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,GAAG,EAAH,UAAI,KAAS;gBACX,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;gBACnB,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AACD,mBAAmB","file":"decorators.js","sourceRoot":"","sourcesContent":["/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?:any):any {\n  const sufix = 'Change';\n  return function OnChangeHandler(target:any, propertyKey:string):void {\n    let _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get():any { return this[_key]; },\n      set(value:any):void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n"]}