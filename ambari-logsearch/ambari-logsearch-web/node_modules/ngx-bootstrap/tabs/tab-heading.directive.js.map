{"version":3,"sources":["../../.tmp/tabs/tab-heading.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,WAAA,EAAY,MAAO,eAAA,CAAgB;AAEvD,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAE/C,8EAA8E;AAE9E;IAGE,6BAAmB,WAA4B,EAAE,GAAgB;QAC/D,GAAG,CAAC,UAAU,GAAG,WAAW,CAAC;IAC/B,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,cAAc,EAAC,EAAG,EAAE;KACxD,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;QACrB,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAH6F,CAG7F,CAAC;IACF,0BAAC;CAdD,AAcC,IAAA;SAdY,mBAAmB","file":"tab-heading.directive.js","sourceRoot":"","sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <template> element as a template for tab heading */\n\nexport class TabHeadingDirective {\n  public templateRef:TemplateRef<any>;\n\n  public constructor(templateRef:TemplateRef<any>, tab:TabDirective) {\n    tab.headingRef = templateRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[tabHeading]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: TabDirective, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}