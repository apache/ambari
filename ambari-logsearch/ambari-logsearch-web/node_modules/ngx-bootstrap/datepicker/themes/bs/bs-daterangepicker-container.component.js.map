{"version":3,"sources":["../../../../.tmp/datepicker/themes/bs/bs-daterangepicker-container.component.ts"],"names":[],"mappings":"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","file":"bs-daterangepicker-container.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { BsDatepickerAbstractComponent } from '../../base/bs-datepicker-container';\nimport { BsDatepickerConfig } from '../../bs-datepicker.config';\nimport { DayViewModel } from '../../models/index';\nimport { BsDatepickerActions } from '../../reducer/bs-datepicker.actions';\nimport { BsDatepickerEffects } from '../../reducer/bs-datepicker.effects';\nimport { BsDatepickerStore } from '../../reducer/bs-datepicker.store';\nimport { Subscription } from 'rxjs/Subscription';\n\n\nexport class BsDaterangepickerContainerComponent\n  extends BsDatepickerAbstractComponent\n  implements OnInit, OnDestroy {\n\n  set value(value: Date[]) {\n    this._effects.setRangeValue(value);\n  }\n\n  valueChange = new EventEmitter<Date[]>();\n\n  _rangeStack: Date[] = [];\n  _subs: Subscription[] = [];\n  constructor(private _config: BsDatepickerConfig,\n              private _store: BsDatepickerStore,\n              private _actions: BsDatepickerActions,\n              _effects: BsDatepickerEffects) {\n    super();\n    this._effects = _effects;\n  }\n\n  ngOnInit(): void {\n    this.containerClass = this._config.containerClass;\n    this._effects\n      .init(this._store)\n      // intial state options\n      // todo: fix this, split configs\n      .setOptions(this._config)\n      // data binding view --> model\n      .setBindings(this)\n      // set event handlers\n      .setEventHandlers(this)\n      .registerDatepickerSideEffects();\n\n    // todo: move it somewhere else\n    // on selected date change\n    this._subs.push(this._store\n      .select(state => state.selectedRange)\n      .subscribe(date => this.valueChange.emit(date)));\n  }\n\n  daySelectHandler(day: DayViewModel): void {\n    if (day.isOtherMonth || day.isDisabled) {\n      return;\n    }\n\n    // if only one date is already selected\n    // and user clicks on previous date\n    // start selection from new date\n    // but if new date is after initial one\n    // than finish selection\n    if (this._rangeStack.length === 1) {\n      this._rangeStack = day.date >= this._rangeStack[0]\n        ? [this._rangeStack[0], day.date]\n        : [day.date];\n    }\n\n    if (this._rangeStack.length === 0) {\n      this._rangeStack = [day.date];\n    }\n\n    this._store.dispatch(this._actions.selectRange(this._rangeStack));\n\n    if (this._rangeStack.length === 2) {\n      this._rangeStack = [];\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subs) {\n      sub.unsubscribe();\n    }\n    this._effects.destroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-daterangepicker-container',\n  providers: [BsDatepickerStore, BsDatepickerEffects],\n  template: \"<!-- days calendar view mode --> <div class=\\\"bs-datepicker\\\" [ngClass]=\\\"containerClass\\\" *ngIf=\\\"viewMode | async\\\"> <div class=\\\"bs-datepicker-container\\\"> <!--calendars--> <div class=\\\"bs-calendar-container\\\" [ngSwitch]=\\\"viewMode | async\\\"> <!--days calendar--> <div *ngSwitchCase=\\\"'day'\\\"> <bs-days-calendar-view *ngFor=\\\"let calendar of (daysCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async).length > 1\\\" [calendar]=\\\"calendar\\\" [options]=\\\"options | async\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"dayHoverHandler($event)\\\" (onSelect)=\\\"daySelectHandler($event)\\\" ></bs-days-calendar-view> </div> <!--months calendar--> <div *ngSwitchCase=\\\"'month'\\\"> <bs-month-calendar-view *ngFor=\\\"let calendar of (monthsCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async).length > 1\\\" [calendar]=\\\"calendar\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"monthHoverHandler($event)\\\" (onSelect)=\\\"monthSelectHandler($event)\\\" ></bs-month-calendar-view> </div> <!--years calendar--> <div *ngSwitchCase=\\\"'year'\\\"> <bs-years-calendar-view *ngFor=\\\"let calendar of (yearsCalendar | async)\\\" [class.bs-datepicker-multiple]=\\\"(daysCalendar | async).length > 1\\\" [calendar]=\\\"calendar\\\" (onNavigate)=\\\"navigateTo($event)\\\" (onViewMode)=\\\"setViewMode($event)\\\" (onHover)=\\\"yearHoverHandler($event)\\\" (onSelect)=\\\"yearSelectHandler($event)\\\" ></bs-years-calendar-view> </div> </div> <!--applycancel buttons--> <div class=\\\"bs-datepicker-buttons\\\" *ngIf=\\\"false\\\"> <button class=\\\"btn btn-success\\\">Apply</button> <button class=\\\"btn btn-default\\\">Cancel</button> </div> </div> <!--custom dates or date ranges picker--> <div class=\\\"bs-datepicker-custom-range\\\" *ngIf=\\\"false\\\"> <bs-custom-date-view [ranges]=\\\"_customRangesFish\\\"></bs-custom-date-view> </div> </div> \",\n  host: {\n    '(click)': '_stopPropagation($event)',\n    style: 'position: absolute; display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatepickerConfig, },\n{type: BsDatepickerStore, },\n{type: BsDatepickerActions, },\n{type: BsDatepickerEffects, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}