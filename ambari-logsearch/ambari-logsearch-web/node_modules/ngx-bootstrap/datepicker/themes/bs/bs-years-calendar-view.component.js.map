{"version":3,"sources":["../../../../.tmp/datepicker/themes/bs/bs-years-calendar-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAO,eAAA,CAAgB;AACvE,OAAO,EAAE,gBAAA,EAAiB,MAAO,oCAAA,CAAqC;AACtE,OAAO,EAEL,qBAAqB,EAKtB,MAAM,oBAAA,CAAqB;AAG5B;IAAA;QAGG,eAAU,GAAG,IAAI,YAAY,EAAqB,CAAC;QACnD,eAAU,GAAG,IAAI,YAAY,EAAwB,CAAC;QAEtD,aAAQ,GAAG,IAAI,YAAY,EAAyB,CAAC;QACrD,YAAO,GAAG,IAAI,YAAY,EAAkB,CAAC;IAyDhD,CAAC;IAvDC,iDAAU,GAAV,UAAW,KAA4B;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,GAAG,gBAAgB,EAAC,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,+CAAQ,GAAR,UAAS,IAA2B;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,gDAAS,GAAT,UAAU,IAA2B,EAAE,SAAkB;QACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,MAAA,EAAE,SAAS,WAAA,EAAC,CAAC,CAAC;IACvC,CAAC;IAED,qDAAc,GAAd,UAAe,KAA2B;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACI,uCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,0yBAuBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,2CAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACjC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACjC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC/B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC7B,CAAC;IACF,mCAAC;CAhED,AAgEC,IAAA;SAhEY,4BAA4B","file":"bs-years-calendar-view.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { yearsPerCalendar } from '../../engine/format-years-calendar';\nimport {\n  BsDatepickerViewMode,\n  BsNavigationDirection,\n  BsNavigationEvent,\n  CalendarCellViewModel,\n  CellHoverEvent,\n  YearsCalendarViewModel\n} from '../../models/index';\n\n\nexport class BsYearsCalendarViewComponent {\n   calendar: YearsCalendarViewModel;\n\n   onNavigate = new EventEmitter<BsNavigationEvent>();\n   onViewMode = new EventEmitter<BsDatepickerViewMode>();\n\n   onSelect = new EventEmitter<CalendarCellViewModel>();\n   onHover = new EventEmitter<CellHoverEvent>();\n\n  navigateTo(event: BsNavigationDirection): void {\n    const step = BsNavigationDirection.DOWN === event ? -1 : 1;\n    this.onNavigate.emit({step: {year: step * yearsPerCalendar}});\n  }\n\n  viewYear(year: CalendarCellViewModel) {\n    this.onSelect.emit(year);\n  }\n\n  hoverYear(cell: CalendarCellViewModel, isHovered: boolean) {\n    this.onHover.emit({cell, isHovered});\n  }\n\n  changeViewMode(event: BsDatepickerViewMode): void {\n    this.onViewMode.emit(event);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-years-calendar-view',\n  template: `\n    <bs-calendar-layout>\n      <bs-datepicker-navigation-view\n        [calendar]=\"calendar\"\n        (onNavigate)=\"navigateTo($event)\"\n        (onViewMode)=\"changeViewMode($event)\"\n      ></bs-datepicker-navigation-view>\n\n      <table role=\"grid\" class=\"years\">\n        <tbody>\n        <tr *ngFor=\"let row of calendar.years\">\n          <td *ngFor=\"let year of row\" role=\"gridcell\"\n              (click)=\"viewYear(year)\"\n              (mouseenter)=\"hoverYear(year, true)\"\n              (mouseleave)=\"hoverYear(year, false)\"\n              [class.disabled]=\"year.isDisabled\"\n              [class.is-highlighted]=\"year.isHovered\">\n            <span>{{ year.label }}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </bs-calendar-layout>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'calendar': [{ type: Input },],\n'onNavigate': [{ type: Output },],\n'onViewMode': [{ type: Output },],\n'onSelect': [{ type: Output },],\n'onHover': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}