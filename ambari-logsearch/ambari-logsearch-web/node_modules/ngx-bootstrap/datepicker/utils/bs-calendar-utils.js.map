{"version":3,"sources":["../../../.tmp/datepicker/utils/bs-calendar-utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AACpF,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACnF,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAEpE,MAAM,mCAAmC,IAAU,EAAE,OAAkC;IACrF,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,IAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAEnC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,0BAA0B,IAAU,EAAE,GAAS,EAAE,GAAS;IAC9D,IAAM,QAAQ,GAAG,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACzE,IAAM,QAAQ,GAAG,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAE1E,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAC9B,CAAC;AAED,MAAM,yBAAyB,IAAU,EAAE,GAAS,EAAE,GAAS;IAC7D,IAAM,QAAQ,GAAG,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACxE,IAAM,QAAQ,GAAG,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAEzE,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAC9B,CAAC","file":"bs-calendar-utils.js","sourceRoot":"","sourcesContent":["import { getDayOfWeek, isFirstDayOfWeek } from '../../bs-moment/utils/date-getters';\nimport { shiftDate } from '../../bs-moment/utils/date-setters';\nimport { isSameOrAfter, isSameOrBefore } from '../../bs-moment/utils/date-compare';\nimport { endOf, startOf } from '../../bs-moment/utils/start-end-of';\n\nexport function getStartingDayOfCalendar(date: Date, options: {firstDayOfWeek?: number}): Date {\n  if (isFirstDayOfWeek(date, options.firstDayOfWeek)) {\n    return date;\n  }\n\n  const weekDay = getDayOfWeek(date);\n\n  return shiftDate(date, {day: -weekDay});\n}\n\nexport function isMonthDisabled(date: Date, min: Date, max: Date): boolean {\n  const minBound = min && isSameOrBefore(endOf(date, 'month'), min, 'day');\n  const maxBound = max && isSameOrAfter(startOf(date, 'month'), max, 'day');\n\n  return minBound || maxBound;\n}\n\nexport function isYearDisabled(date: Date, min: Date, max: Date): boolean {\n  const minBound = min && isSameOrBefore(endOf(date, 'year'), min, 'day');\n  const maxBound = max && isSameOrAfter(startOf(date, 'year'), max, 'day');\n\n  return minBound || maxBound;\n}\n"]}