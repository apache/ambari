{"version":3,"sources":["../../../.tmp/datepicker/engine/format-days-calendar.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AAEnE,MAAM,6BAA6B,YAA+B,EAC/B,aAAsC,EACtC,UAAkB;IACnD,MAAM,CAAC;QACL,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC;QAC1F,SAAS,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;QACxF,WAAW,EAAE,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,MAAM,CAAC;QACrG,QAAQ,EAAE,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,aAAa,EAAc;QACrE,KAAK,EAAE,YAAY,CAAC,UAAU;aAC3B,GAAG,CAAC,UAAC,IAAY,EAAE,SAAiB,IAAK,OAAA,CAAC;YACvC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,UAAC,IAAU,EAAE,QAAgB,IAAK,OAAA,CAAC;gBAChD,IAAI,MAAA;gBACJ,KAAK,EAAE,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC;gBACrE,UAAU,YAAA,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA;aAChC,CAAC,EAJ+C,CAI/C,CAAC;SACJ,CAAC,EANsC,CAMtC,CACH;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,yBAAyB,UAAoB,EAAE,MAAc,EAAE,MAAc;IACjF,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,CAAC,CAAC;UAC3C,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC;UACnC,EAAE,EAFkC,CAElC,CAAC,CAAC;AACV,CAAC","file":"format-days-calendar.js","sourceRoot":"","sourcesContent":["import {\n  DatepickerFormatOptions, DaysCalendarModel, DaysCalendarViewModel\n} from '../models/index';\nimport { formatDate } from '../../bs-moment/format';\nimport { getLocale } from '../../bs-moment/locale/locales.service';\n\nexport function formatDaysCalendar(daysCalendar: DaysCalendarModel,\n                                   formatOptions: DatepickerFormatOptions,\n                                   monthIndex: number): DaysCalendarViewModel {\n  return {\n    month: daysCalendar.month,\n    monthTitle: formatDate(daysCalendar.month, formatOptions.monthTitle, formatOptions.locale),\n    yearTitle: formatDate(daysCalendar.month, formatOptions.yearTitle, formatOptions.locale),\n    weekNumbers: getWeekNumbers(daysCalendar.daysMatrix, formatOptions.weekNumbers, formatOptions.locale),\n    weekdays: getLocale(formatOptions.locale).weekdaysShort() as string[],\n    weeks: daysCalendar.daysMatrix\n      .map((week: Date[], weekIndex: number) => ({\n          days: week.map((date: Date, dayIndex: number) => ({\n            date,\n            label: formatDate(date, formatOptions.dayLabel, formatOptions.locale),\n            monthIndex, weekIndex, dayIndex\n          }))\n        })\n      )\n  };\n}\n\nexport function getWeekNumbers(daysMatrix: Date[][], format: string, locale: string): string[] {\n  return daysMatrix.map((days: Date[]) => days[0]\n    ? formatDate(days[0], format, locale)\n    : '');\n}\n"]}