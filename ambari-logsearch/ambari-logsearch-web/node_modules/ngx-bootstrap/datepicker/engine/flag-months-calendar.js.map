{"version":3,"sources":["../../../.tmp/datepicker/engine/flag-months-calendar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC7E,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAW/D,MAAM,6BAA6B,aAAsC,EACtC,OAAiC;IAClE,aAAa,CAAC,MAAM;SACjB,OAAO,CAAC,UAAC,MAA+B,EAAE,QAAgB;QACzD,MAAM,CAAC,OAAO,CAAC,UAAC,KAA4B,EAAE,UAAkB;YAC9D,IAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAChE,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU;mBAChC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YACnE,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAC,SAAS,WAAA,EAAE,UAAU,YAAA,EAAC,CAAC,CAAC;YACvE,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;mBACrC,KAAK,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9C,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;YACxD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEL,uCAAuC;IACvC,aAAa,CAAC,aAAa,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC;WAC/C,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,aAAa,CAAC;IAClD,aAAa,CAAC,cAAc,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,aAAa;WACpE,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,aAAa,CAAC;IAExD,aAAa,CAAC,gBAAgB,GAAG,cAAc,CAC7C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EACtD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,aAAa,CAAC,iBAAiB,GAAG,cAAc,CAC9C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,EACrD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAAC,CAAC;IAEnB,MAAM,CAAC,aAAa,CAAC;AACvB,CAAC","file":"flag-months-calendar.js","sourceRoot":"","sourcesContent":["import { isSameMonth } from '../../bs-moment/utils/date-getters';\nimport { MonthsCalendarViewModel, CalendarCellViewModel } from '../models/index';\nimport { isMonthDisabled, isYearDisabled } from '../utils/bs-calendar-utils';\nimport { shiftDate } from '../../bs-moment/utils/date-setters';\n\nexport interface FlagMonthCalendarOptions {\n  isDisabled: boolean;\n  minDate: Date;\n  maxDate: Date;\n  hoveredMonth: Date;\n  displayMonths: number;\n  monthIndex: number;\n}\n\nexport function flagMonthsCalendar(monthCalendar: MonthsCalendarViewModel,\n                                   options: FlagMonthCalendarOptions): MonthsCalendarViewModel {\n  monthCalendar.months\n    .forEach((months: CalendarCellViewModel[], rowIndex: number) => {\n      months.forEach((month: CalendarCellViewModel, monthIndex: number) => {\n        const isHovered = isSameMonth(month.date, options.hoveredMonth);\n        const isDisabled = options.isDisabled\n          || isMonthDisabled(month.date, options.minDate, options.maxDate);\n        const newMonth = Object.assign(/*{},*/ month, {isHovered, isDisabled});\n        if (month.isHovered !== newMonth.isHovered\n          || month.isDisabled !== newMonth.isDisabled) {\n          monthCalendar.months[rowIndex][monthIndex] = newMonth;\n        }\n      });\n    });\n\n  // todo: add check for linked calendars\n  monthCalendar.hideLeftArrow = options.monthIndex > 0\n    && options.monthIndex !== options.displayMonths;\n  monthCalendar.hideRightArrow = options.monthIndex < options.displayMonths\n    && (options.monthIndex + 1) !== options.displayMonths;\n\n  monthCalendar.disableLeftArrow = isYearDisabled(\n    shiftDate(monthCalendar.months[0][0].date, {year: -1}),\n    options.minDate,\n    options.maxDate);\n  monthCalendar.disableRightArrow = isYearDisabled(\n    shiftDate(monthCalendar.months[0][0].date, {year: 1}),\n    options.minDate,\n    options.maxDate);\n\n  return monthCalendar;\n}\n"]}