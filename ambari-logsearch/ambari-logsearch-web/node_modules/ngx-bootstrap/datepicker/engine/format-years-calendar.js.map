{"version":3,"sources":["../../../.tmp/datepicker/engine/format-years-calendar.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAC/D,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,IAAM,MAAM,GAAG,CAAC,CAAC;AACjB,IAAM,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,CAAC,IAAM,gBAAgB,GAAG,MAAM,GAAG,KAAK,CAAC;AAC/C,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,IAAM,KAAK,GAAG,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC;AAExB,MAAM,8BAA8B,QAAc,EAAE,aAAsC;IAExF,IAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC;IAC9D,IAAM,aAAa,GAAG,EAAC,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,WAAW,aAAA,EAAE,KAAK,OAAA,EAAC,CAAC;IAC1D,IAAM,WAAW,GAAG,YAAY,CAAwB,aAAa,EACnE,UAAA,IAAI,IAAI,OAAA,CAAC;QACP,IAAI,MAAA;QACJ,KAAK,EAAE,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;KACvE,CAAC,EAHM,CAGN,CAAC,CAAC;IACN,IAAM,SAAS,GAAG,oBAAoB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAEnE,MAAM,CAAC;QACL,KAAK,EAAE,WAAW;QAClB,UAAU,EAAE,EAAE;QACd,SAAS,WAAA;KACV,CAAC;AACJ,CAAC;AAED,8BAA8B,WAAsC,EAAE,aAAsC;IAC1G,IAAM,IAAI,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;IAC/F,IAAM,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;IAE9G,MAAM,CAAI,IAAI,WAAM,EAAI,CAAC;AAC3B,CAAC","file":"format-years-calendar.js","sourceRoot":"","sourcesContent":["import {\n  DatepickerFormatOptions, YearsCalendarViewModel, CalendarCellViewModel\n} from '../models/index';\nimport { shiftDate } from '../../bs-moment/utils/date-setters';\nimport { formatDate } from '../../bs-moment/format';\nimport { TimeUnit } from '../../bs-moment/types';\nimport { createMatrix } from '../utils/matrix-utils';\n\nconst height = 4;\nconst width = 4;\nexport const yearsPerCalendar = height * width;\nconst initialShift = (Math.floor(yearsPerCalendar / 2) - 1) * -1;\nconst shift = {year: 1};\n\nexport function formatYearsCalendar(viewDate: Date, formatOptions: DatepickerFormatOptions): YearsCalendarViewModel {\n\n  const initialDate = shiftDate(viewDate, {year: initialShift});\n  const matrixOptions = {width, height, initialDate, shift};\n  const yearsMatrix = createMatrix<CalendarCellViewModel>(matrixOptions,\n    date => ({\n      date,\n      label: formatDate(date, formatOptions.yearLabel, formatOptions.locale)\n    }));\n  const yearTitle = formatYearRangeTitle(yearsMatrix, formatOptions);\n\n  return {\n    years: yearsMatrix,\n    monthTitle: '',\n    yearTitle\n  };\n}\n\nfunction formatYearRangeTitle(yearsMatrix: CalendarCellViewModel[][], formatOptions: DatepickerFormatOptions): string {\n  const from = formatDate(yearsMatrix[0][0].date, formatOptions.yearTitle, formatOptions.locale);\n  const to = formatDate(yearsMatrix[height - 1][width - 1].date, formatOptions.yearTitle, formatOptions.locale);\n\n  return `${from} - ${to}`;\n}\n"]}