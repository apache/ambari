{"version":3,"sources":["../../../.tmp/datepicker/engine/flag-years-calendar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAEhE,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAW/D,MAAM,4BAA4B,aAAqC,EAAE,OAAiC;IACxG,aAAa,CAAC,KAAK;SAChB,OAAO,CAAC,UAAC,KAA8B,EAAE,QAAgB;QACxD,KAAK,CAAC,OAAO,CAAC,UAAC,IAA2B,EAAE,SAAiB;YAC3D,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;YAC7D,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU;mBAChC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YAEjE,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC,SAAS,WAAA,EAAE,UAAU,YAAA,EAAC,CAAC,CAAC;YACtE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;mBACpC,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC7C,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;YACtD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEL,uCAAuC;IACvC,aAAa,CAAC,aAAa,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC;WAC9C,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,aAAa,CAAC;IACjD,aAAa,CAAC,cAAc,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa;WACnE,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,aAAa,CAAC;IAEvD,aAAa,CAAC,gBAAgB,GAAG,cAAc,CAC7C,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EACrD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,IAAM,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACzC,IAAM,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,aAAa,CAAC,iBAAiB,GAAG,cAAc,CAC9C,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,EACpD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAAC,CAAC;IAEnB,MAAM,CAAC,aAAa,CAAC;AACvB,CAAC","file":"flag-years-calendar.js","sourceRoot":"","sourcesContent":["import { isSameYear } from '../../bs-moment/utils/date-getters';\nimport { YearsCalendarViewModel, CalendarCellViewModel } from '../models/index';\nimport { isYearDisabled } from '../utils/bs-calendar-utils';\nimport { shiftDate } from '../../bs-moment/utils/date-setters';\n\nexport interface FlagYearsCalendarOptions {\n  isDisabled: boolean;\n  minDate: Date;\n  maxDate: Date;\n  hoveredYear: Date;\n  displayMonths: number;\n  yearIndex: number;\n}\n\nexport function flagYearsCalendar(yearsCalendar: YearsCalendarViewModel, options: FlagYearsCalendarOptions): YearsCalendarViewModel {\n  yearsCalendar.years\n    .forEach((years: CalendarCellViewModel[], rowIndex: number) => {\n      years.forEach((year: CalendarCellViewModel, yearIndex: number) => {\n        const isHovered = isSameYear(year.date, options.hoveredYear);\n        const isDisabled = options.isDisabled\n          || isYearDisabled(year.date, options.minDate, options.maxDate);\n\n        const newMonth = Object.assign(/*{},*/ year, {isHovered, isDisabled});\n        if (year.isHovered !== newMonth.isHovered\n          || year.isDisabled !== newMonth.isDisabled) {\n          yearsCalendar.years[rowIndex][yearIndex] = newMonth;\n        }\n      });\n    });\n\n  // todo: add check for linked calendars\n  yearsCalendar.hideLeftArrow = options.yearIndex > 0\n    && options.yearIndex !== options.displayMonths;\n  yearsCalendar.hideRightArrow = options.yearIndex < options.displayMonths\n    && (options.yearIndex + 1) !== options.displayMonths;\n\n  yearsCalendar.disableLeftArrow = isYearDisabled(\n    shiftDate(yearsCalendar.years[0][0].date, {year: -1}),\n    options.minDate,\n    options.maxDate);\n  const i = yearsCalendar.years.length - 1;\n  const j = yearsCalendar.years[i].length - 1;\n  yearsCalendar.disableRightArrow = isYearDisabled(\n    shiftDate(yearsCalendar.years[i][j].date, {year: 1}),\n    options.minDate,\n    options.maxDate);\n\n  return yearsCalendar;\n}\n"]}