{"version":3,"sources":["../../.tmp/datepicker/bs-daterangepicker-input.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,UAAA,EAAY,IAAA,EAAc,QAAA,EAAS,MAAO,eAAA,CAAgB;AAC1F,OAAO,EAAwB,iBAAA,EAAkB,MAAO,gBAAA,CAAiB;AACzE,OAAO,EAAE,kBAAA,EAAmB,MAAO,wBAAA,CAAyB;AAC5D,OAAO,EAAE,0BAAA,EAA2B,MAAO,gCAAA,CAAiC;AAC5E,OAAO,EAAE,UAAA,EAAW,MAAO,qBAAA,CAAsB;AACjD,OAAO,EAAE,SAAA,EAAU,MAAO,qCAAA,CAAsC;AAEhE,IAAM,iCAAA,GAAoC;IACxC,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,+BAAA,EAAA,CAAA,CAAgC;IAC9D,KAAK,EAAE,IAAA;CACR,CAAC;AAGF;IAME,yCAAqB,OAAmC,EACpC,OAA2B,EAC3B,SAAmB,EACnB,MAAkB;QAHjB,YAAO,GAAP,OAAO,CAA4B;QACpC,YAAO,GAAP,OAAO,CAAoB;QAC3B,cAAS,GAAT,SAAS,CAAU;QACnB,WAAM,GAAN,MAAM,CAAY;QAN9B,cAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC/B,eAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;IAMxC,CAAC;IAED,kDAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,CAAS;YAC7C,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,IAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACnG,IAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACjG,KAAK,GAAG,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,GAAG,GAAG,CAAC;YAC5D,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAC7E,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAQ,GAAR,UAAS,KAAU;QACjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oDAAU,GAAV,UAAW,KAAsB;QAC/B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC9B,CAAC;QAED,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,cAAW,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,gEAA0D,CAAC,CAAC;QACpH,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK;iBACzB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC;iBAC1C,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAhC,CAAgC,CAAC;iBAC7C,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,EAAnC,CAAmC,CAAC,CAAC;QACtD,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,0DAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACxF,CAAC;IAED,0DAAgB,GAAhB,UAAiB,EAAuB,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;IAExE,2DAAiB,GAAjB,UAAkB,EAAa,IAAU,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC;IAEhE,gDAAM,GAAN,cAAW,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAE/B,8CAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACI,0CAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,0BAA0B;oBACpC,IAAI,EAAE;wBACJ,UAAU,EAAE,kBAAkB;wBAC9B,aAAa,EAAE,QAAQ;wBACvB,QAAQ,EAAE,UAAU;qBACrB;oBACD,SAAS,EAAE,CAAC,iCAAiC,CAAC;iBAC/C,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,0BAA0B,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;QAClE,EAAC,IAAI,EAAE,kBAAkB,GAAG;QAC5B,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAL6F,CAK7F,CAAC;IACF,sCAAC;CAnFD,AAmFC,IAAA;SAnFY,+BAA+B","file":"bs-daterangepicker-input.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, forwardRef, Host, OnInit, Renderer } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BsDatepickerConfig } from './bs-datepicker.config';\nimport { BsDaterangepickerComponent } from './bs-daterangepicker.component';\nimport { formatDate } from '../bs-moment/format';\nimport { getLocale } from '../bs-moment/locale/locales.service';\n\nconst BS_DATERANGEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BsDaterangepickerInputDirective),\n  multi: true\n};\n\n\nexport class BsDaterangepickerInputDirective\n  implements OnInit, ControlValueAccessor {\n\n  private _onChange = Function.prototype;\n  private _onTouched = Function.prototype;\n\n  constructor( private _picker: BsDaterangepickerComponent,\n              private _config: BsDatepickerConfig,\n              private _renderer: Renderer,\n              private _elRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    this._picker.bsValueChange.subscribe((v: Date[]) => {\n      let range = '';\n      if (v) {\n        const start = formatDate(v[0], this._picker._config.rangeInputFormat, this._picker._config.locale);\n        const end = formatDate(v[1], this._picker._config.rangeInputFormat, this._picker._config.locale);\n        range = start + this._picker._config.rangeSeparator + end;\n      }\n      this._renderer.setElementProperty(this._elRef.nativeElement, 'value', range);\n      this._onChange(v);\n    });\n  }\n\n  onChange(event: any) {\n    this.writeValue(event.target.value);\n    this._onTouched();\n  }\n\n  writeValue(value: Date[] | string) {\n    if (!value) {\n      this._picker.bsValue = null;\n    }\n\n    const _locale = getLocale(this._picker._config.locale);\n    if (!_locale) {\n      throw new Error(`Locale \"${this._picker._config.locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n    }\n    if (typeof value === 'string') {\n      this._picker.bsValue = value\n        .split(this._picker._config.rangeSeparator)\n        .map(date => new Date(_locale.preparse(date)))\n        .map(date => isNaN(date.valueOf()) ? null : date);\n    }\n\n    if (Array.isArray(value)) {\n      this._picker.bsValue = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._picker.isDisabled = isDisabled;\n    this._renderer.setElementAttribute(this._elRef.nativeElement, 'disabled', 'disabled');\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  onBlur() { this._onTouched(); }\n\n  hide() {\n    this._picker.hide();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[bsDaterangepicker]`,\n  host: {\n    '(change)': 'onChange($event)',\n    '(keyup.esc)': 'hide()',\n    '(blur)': 'onBlur()'\n  },\n  providers: [BS_DATERANGEPICKER_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDaterangepickerComponent, decorators: [{ type: Host }, ]},\n{type: BsDatepickerConfig, },\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}