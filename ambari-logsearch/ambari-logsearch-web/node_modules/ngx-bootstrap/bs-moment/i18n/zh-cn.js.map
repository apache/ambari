{"version":3,"sources":["../../../.tmp/bs-moment/i18n/zh-cn.ts"],"names":[],"mappings":"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","file":"zh-cn.js","sourceRoot":"","sourcesContent":["// moment.js locale configuration\n// locale : Chinese (China) [zh-cn]\n// author : suupic : https://github.com/suupic\n// author : Zeno Zeng : https://github.com/zenozeng\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const zhCn: LocaleData = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY年MMMD日',\n    LL: 'YYYY年MMMD日',\n    LLL: 'YYYY年MMMD日Ah点mm分',\n    LLLL: 'YYYY年MMMD日ddddAh点mm分',\n    l: 'YYYY年MMMD日',\n    ll: 'YYYY年MMMD日',\n    lll: 'YYYY年MMMD日 HH:mm',\n    llll: 'YYYY年MMMD日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour: number, meridiem: string): number {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' ||\n      meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour: number, minute: number): string {\n    const hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n  ordinal(num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${num}日`;\n      case 'M':\n        return `${num}月`;\n      case 'w':\n      case 'W':\n        return `${num}周`;\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]}