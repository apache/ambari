{"version":3,"sources":["../../../.tmp/bs-moment/i18n/de.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,uBAAuB;AACvB,8CAA8C;AAC9C,qDAAqD;AACrD,uDAAuD;AAIvD,6BAA6B,GAAW,EAAE,aAAsB,EAAE,GAAW,EAAE,QAAiB;IAC9F,IAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IAE3B,IAAM,MAAM,GAAQ;QAClB,CAAC,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;QAClC,CAAC,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;QAClC,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;QAC3B,EAAE,EAAE,CAAI,GAAG,UAAO,EAAK,GAAG,WAAQ,CAAC;QACnC,CAAC,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC;QAC/B,EAAE,EAAE,CAAI,GAAG,YAAS,EAAK,GAAG,aAAU,CAAC;QACvC,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC;QAC7B,EAAE,EAAE,CAAI,GAAG,WAAQ,EAAK,GAAG,YAAS,CAAC;KACtC,CAAC;IAEF,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,MAAM,CAAC,IAAM,EAAE,GAAe;IAC5B,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,oFAAoF,CAAC,KAAK,CAAC,GAAG,CAAC;IACvG,WAAW,EAAE,4DAA4D,CAAC,KAAK,CAAC,GAAG,CAAC;IACpF,gBAAgB,EAAE,IAAI;IACtB,QAAQ,EAAE,6DAA6D,CAAC,KAAK,CAAC,GAAG,CAAC;IAClF,aAAa,EAAE,6BAA6B,CAAC,KAAK,CAAC,GAAG,CAAC;IACvD,WAAW,EAAE,sBAAsB,CAAC,KAAK,CAAC,GAAG,CAAC;IAC9C,kBAAkB,EAAE,IAAI;IACxB,cAAc,EAAE;QACd,EAAE,EAAE,OAAO;QACX,GAAG,EAAE,UAAU;QACf,CAAC,EAAE,YAAY;QACf,EAAE,EAAE,cAAc;QAClB,GAAG,EAAE,oBAAoB;QACzB,IAAI,EAAE,0BAA0B;KACjC;IACD,QAAQ,EAAE;QACR,OAAO,EAAE,qBAAqB;QAC9B,QAAQ,EAAE,GAAG;QACb,OAAO,EAAE,sBAAsB;QAC/B,QAAQ,EAAE,oBAAoB;QAC9B,OAAO,EAAE,uBAAuB;QAChC,QAAQ,EAAE,8BAA8B;KACzC;IACD,YAAY,EAAE;QACZ,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,QAAQ;QACd,CAAC,EAAE,mBAAmB;QACtB,CAAC,EAAE,mBAAmB;QACtB,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE,mBAAmB;QACtB,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE,mBAAmB;QACtB,EAAE,EAAE,mBAAmB;QACvB,CAAC,EAAE,mBAAmB;QACtB,EAAE,EAAE,mBAAmB;QACvB,CAAC,EAAE,mBAAmB;QACtB,EAAE,EAAE,mBAAmB;KACxB;IACD,sBAAsB,EAAE,WAAW;IACnC,OAAO,EAAP,UAAQ,GAAW,EAAE,KAAc,IAAY,MAAM,CAAI,GAAG,MAAG,CAAC,CAAC,CAAC;IAClE,IAAI,EAAE;QACJ,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC,CAAE,gEAAgE;KACzE;CACF,CAAC","file":"de.js","sourceRoot":"","sourcesContent":["// moment.js locale configuration\n// locale : German [de]\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n// author : Mikolaj Dadela : https://github.com/mik01aj\n\nimport { LocaleData } from '../locale/locale.class';\n\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const str = num.toString();\n\n  const format: any = {\n    m: ['eine Minute', 'einer Minute'],\n    h: ['eine Stunde', 'einer Stunde'],\n    d: ['ein Tag', 'einem Tag'],\n    dd: [`${str} Tage`, `${str} Tagen`],\n    M: ['ein Monat', 'einem Monat'],\n    MM: [`${str} Monate`, `${str} Monaten`],\n    y: ['ein Jahr', 'einem Jahr'],\n    yy: [`${str} Jahre`, `${str} Jahren`]\n  };\n\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport const de: LocaleData = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal(num: number, token?: string): string { return `${num}.`; },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]}