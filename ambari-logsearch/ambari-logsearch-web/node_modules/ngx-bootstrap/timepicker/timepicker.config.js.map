{"version":3,"sources":["../../.tmp/timepicker/timepicker.config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,2DAA2D;AAE3D;IAAA;QACE,wBAAwB;QACxB,aAAQ,GAAG,CAAC,CAAC;QACb,wBAAwB;QACxB,eAAU,GAAG,CAAC,CAAC;QACf,2BAA2B;QAC3B,gBAAW,GAAG,EAAE,CAAC;QACjB,+FAA+F;QAC/F,iBAAY,GAAG,IAAI,CAAC;QACpB,sCAAsC;QACtC,cAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzB,wDAAwD;QACxD,kBAAa,GAAG,KAAK,CAAC;QACtB,sEAAsE;QACtE,eAAU,GAAG,IAAI,CAAC;QAClB,iFAAiF;QACjF,cAAS,GAAG,IAAI,CAAC;QACjB,sEAAsE;QACtE,iBAAY,GAAG,IAAI,CAAC;QACpB,iCAAiC;QACjC,gBAAW,GAAG,KAAK,CAAC;IAWtB,CAAC;IANM,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;CA/BD,AA+BC,IAAA;SA/BY,gBAAgB","file":"timepicker.config.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}