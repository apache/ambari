{"version":3,"sources":["../../.tmp/modal/modal-options.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAAA;IAiCA,CAAC;IANM,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CAjCD,AAiCC,IAAA;SAjCY,YAAY;AAoCzB;IAAA;IAeA,CAAC;IAdC;;OAEG;IACH,yBAAI,GAAJ,cAAc,CAAC;IAKV,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iBAAC;CAfD,AAeC,IAAA;SAfY,UAAU;AAiBvB,MAAM,CAZC,IAAM,mBAAA,GAAmC;IAa9C,QAAQ,EAZE,IAAA;IAaV,QAAQ,EAZE,IAAA;IAaV,KAAK,EAZE,IAAA;IAaP,IAAI,EAZE,KAAA;IAaN,mBAAmB,EAZE,KAAA;IAarB,KAAK,EAZE,EAAA;IAaP,QAAQ,EAZE,IAAA;CAaX,CAZC;AAcF,MAAM,CAZC,IAAM,SAAA,GAAgB;IAa3B,kBAAkB,EAZE,yBAAA;IAapB,QAAQ,EAZE,gBAAA;IAaV,IAAI,EAZE,YAAA;IAaN,IAAI,EAZE,MAAA;IAaN,EAAE,EAZE,IAAA;IAaJ,IAAI,EAZE,MAAA,CAAO,MAAA;CAad,CAZC;AAcF,MAAM,CAZC,IAAM,QAAA,GAAe;IAa1B,MAAM,EAZE,eAAA;IAaR,WAAW,EAZE,uBAAA;IAab,YAAY,EAZE,wBAAA;IAad,aAAa,EAZE,oDAAA;CAahB,CAZC;AAcF,MAAM,CAZC,IAAM,mBAAA,GAA2B;IAatC,KAAK,EAZE,GAAA;IAaP,QAAQ,EAZE,GAAA;CAaX,CAZC;AAcF,MAAM,CAZC,IAAM,eAAA,GAAkB;IAa7B,QAAQ,EAZE,gBAAA;IAaV,GAAG,EAZE,KAAA;CAaN,CAZC","file":"modal-options.class.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\n\nexport class ModalOptions {\n  /**\n   *  Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?:boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?:boolean;\n\n  focus?:boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?:boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?:boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?:string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class BsModalRef {\n  /**\n   * Hides the modal\n   */\n  hide(): void {}\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n  content?: any | null;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport const modalConfigDefaults:ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true\n};\n\nexport const ClassName:any = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in',         // bs3\n  SHOW: 'show'  // bs4\n};\n\nexport const Selector:any = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TransitionDurations: any = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc'\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}