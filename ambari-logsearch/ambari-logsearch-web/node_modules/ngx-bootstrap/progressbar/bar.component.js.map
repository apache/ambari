{"version":3,"sources":["../../.tmp/progressbar/bar.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,IAAA,EAAM,WAAA,EAAa,KAAA,EAAyB,MAAO,eAAA,CAAgB;AAEvF,OAAO,EAAE,iBAAA,EAAkB,MAAO,sBAAA,CAAuB;AACzD,OAAO,EAAE,KAAA,EAAM,MAAO,+BAAA,CAAgC;AAEtD,oBAAoB;AACpB,iCAAiC;AAEjC;IAgCE,sBAAoB,QAA0B;QANvC,YAAO,GAAU,CAAC,CAAC;QAOxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IA3BD,sBAAW,+BAAK;QAFhB,oCAAoC;aAEpC;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAMD,UAAiB,CAAQ;YACvB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;;;OAZA;IACA,sBAAI,qCAAW;aAAf;YACC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACxC,CAAC;;;OAAA;IAAA,CAAC;IAUF,sBAAW,+BAAK;aAAhB;YACE,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;;;OAAA;IAWM,+BAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,kCAAW,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,4CAAqB,GAA5B;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElE,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAY,EAAE,GAAgB;YACtF,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,EAAE,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;QACxC,CAAC;IACH,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,gcAUX;iBACA,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;KACxD,EAF6F,CAE7F,CAAC;IACK,2BAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;KACjE,CAAC;IACF,mBAAC;CAhFD,AAgFC,IAAA;SAhFY,YAAY","file":"bar.component.js","sourceRoot":"","sourcesContent":["import { Component, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { ProgressDirective } from './progress.directive';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n// todo: number pipe\n// todo: use query from progress?\n\nexport class BarComponent implements OnInit, OnDestroy {\n  public max:number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n   public type:string;\n  /** current value of progress bar */\n  \n  public get value():number {\n    return this._value;\n  }\n   get setBarWidth(){\n    this.recalculatePercentage();\n    return this.isBs3 ? '' : this.percent;\n  };\n\n  public set value(v:number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  public get isBs3(): boolean {\n    return isBs3();\n  }\n  public percent:number = 0;\n  public transition:string;\n  public progress:ProgressDirective;\n\n  protected _value:number;\n\n  public constructor( progress:ProgressDirective) {\n    this.progress = progress;\n  }\n\n  public ngOnInit():void {\n    this.progress.addBar(this);\n  }\n\n  public ngOnDestroy():void {\n    this.progress.removeBar(this);\n  }\n\n  public recalculatePercentage():void {\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\n\n    let totalPercentage = this.progress.bars.reduce(function (total:number, bar:BarComponent):number {\n      return total + bar.percent;\n    }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bar',\n  template: `\n  <div class=\"progress-bar\"\n    style=\"min-width: 0;\"\n    role=\"progressbar\"\n    [ngClass]=\"type && 'progress-bar-' + type + ' bg-' + type\"\n    [ngStyle]=\"{width: (isBs3 ? (percent < 100 ? percent : 100) + '%' : '100%'), transition: transition}\"\n    aria-valuemin=\"0\"\n    [attr.aria-valuenow]=\"value\"\n    [attr.aria-valuetext]=\"percent.toFixed(0) + '%'\"\n    [attr.aria-valuemax]=\"max\"><ng-content></ng-content></div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProgressDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n'setBarWidth': [{ type: HostBinding, args: ['style.width.%', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}