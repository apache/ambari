{"version":3,"file":"subtract.pipe.js","sourceRoot":"","sources":["subtract.pipe.ts"],"names":[],"mappings":"AAAA,6DAA6D;;AAE7D,qBAAqD,eAAe,CAAC,CAAA;AACrE,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAGjC;IAAA;IAaA,CAAC;IAZG,gCAAS,GAAT,UAAU,KAAU,EAAE,MAAgC,EAAE,IAA+B;QACnF,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/F,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAChE,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IACE,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,EAAG,EAAE;KAC/C,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA6D,EACjF,CAAC;IACF,mBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,oBAAY,eAaxB,CAAA","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return moment(value).subtract(amount, unit);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'amSubtract' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}