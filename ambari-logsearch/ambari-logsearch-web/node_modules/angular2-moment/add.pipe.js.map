{"version":3,"file":"add.pipe.js","sourceRoot":"","sources":["add.pipe.ts"],"names":[],"mappings":"AAAA,6DAA6D;;;;;;;;AAE7D,sCAAqE;AACrE,+BAAiC;AAGjC,IAAa,OAAO;IAApB;IAOA,CAAC;IANG,2BAAS,GAAT,UAAU,KAAU,EAAE,MAAgC,EAAE,IAA+B;QACnF,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/F,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IACL,cAAC;AAAD,CAAC,AAPD,IAOC;AAPY,OAAO;IADnB,WAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;GACX,OAAO,CAOnB;AAPY,0BAAO","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return moment(value).add(amount, unit);\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}