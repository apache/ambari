{"version":3,"sources":["/Users/iminar/Dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","obj","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","preserveWhitespaces","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","join","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitExportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","entries","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createTypeReferenceStub","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","enableSummariesForJit","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","setPrototypeOf","__proto__","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","parameters","typeOrFunc","annotations","propMetadata","lcProperty","componentModuleUrl","cmpMetadata","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","SKIP_WS_TRIM_TAGS","isBlank","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","throwIfNotFound","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","getImportAs","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_enableSummariesForJit","_symbolResolver","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","emitAllStubs","sourceModules","_compileStubFile","emitPartialStubs","emitAllImpls","_compileImplFile","partial","generatedFiles","ngFactoryOutputCtx","_createOutputContext","jitSummaryOutputCtx","partialJitStubRequired","partialFactoryStubRequired","stylesheetMeta","styleContext","_codegenSourceModule","_createSummary","_compileModule","componentStylesheet","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","ANGULAR_ROUTER","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ROUTES","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","Ignore","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory"],"mappings":"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,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ18D,yBAA4B,SAAUn1B,QAEtC,QAASm1B,4BACL,GAAIsC,OAAQz3B,OAAOi8B,KAAK5vC,OAASA,IAqCjC,OApCAorC,OAAMq6D,WACNR,OAAO/jG,QAAQ,SAAUwkG,aACrB,GAAIh+F,SACAgQ,GAAKguF,YAAY76F,MAAM,KAAM86F,QAAUjuF,GAAG,GAAIkuF,cAAgBluF,GAAG,GACjEmuF,WAAaD,cAAc/6F,MAAM,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","file":"/Users/iminar/Dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.4.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v4.4.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.4.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        ((error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return ((error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null,\n            preserveWhitespaces: false,\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    CompileReflector.prototype.hasLifecycleHook = function (type, lcProperty) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    CompileReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { };\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    CompileReflector.prototype.resolveExternalReference = function (ref) { };\n    return CompileReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 4 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited post Angular 5\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = function (text, context) {\n        var /** @type {?} */ isBlank = text.value.trim().length === 0;\n        if (!isBlank) {\n            return new Text(replaceNgsp(text.value).replace(/\\s\\s+/g, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component));\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: [],\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n            preserveWhitespaces: templateMeta.preserveWhitespaces,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    /**\n     * @param {?} comment\n     * @param {?=} sourceSpan\n     */\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            expressionType(outputCtx.importExpr(this.component.type.reference));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (Object.assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when the current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _enableSummariesForJit\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _enableSummariesForJit, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._enableSummariesForJit = _enableSummariesForJit;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitPartialStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileImplFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} partial\n     * @return {?}\n     */\n    AotCompiler.prototype._compileStubFile = function (srcFileUrl, directives, pipes, ngModules, partial) {\n        var _this = this;\n        // partial is true when we only need the files we are certain will produce a factory and/or\n        // summary.\n        // This is the normal case for `ngc` but if we assume libraryies are generating their own\n        // factories\n        // then we might need a factory for a file that re-exports a module or factory which we cannot\n        // know\n        // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n        // to\n        // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n        // up\n        // not being needed, the factory file is not written in writeFile callback.\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        var /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        // create exports that user code can reference\n        ngModules.forEach(function (ngModuleReference) {\n            _this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n            createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n        });\n        var /** @type {?} */ partialJitStubRequired = false;\n        var /** @type {?} */ partialFactoryStubRequired = false;\n        // create stubs for external stylesheets (always empty, as users should not import anything from\n        // the generated code)\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            partialJitStubRequired = true;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                var /** @type {?} */ styleContext = _this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMeta.moduleUrl)), _this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n                _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n                generatedFiles.push(_this._codegenSourceModule(/** @type {?} */ ((stylesheetMeta.moduleUrl)), styleContext));\n            });\n            partialFactoryStubRequired = true;\n        });\n        // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n        if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n        }\n        if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n            jitSummaryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n        }\n        // Note: we are creating stub ngfactory/ngsummary for all source files,\n        // as the real calculation requires almost the same logic as producing the real content for\n        // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n        // stub references to the reference type needs to be generated even if the user cannot\n        // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n        generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n        if (this._enableSummariesForJit) {\n            generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        var _a = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n        if (this._enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileUrl, forJitOutputCtx)];\n        }\n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            var /** @type {?} */ normalizedLocale = this._localeId.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces;\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx, reference) {\n    outputCtx.statements.push(importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression) || references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        var /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces; /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template))), preserveWhitespaces), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) { return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol }); };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ÉµConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) {\n            translations = translations || '';\n            var missingTranslation = translations ? config.missingTranslation : _angular_core.MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n            preserveWhitespaces: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        enableLegacyTemplate: _lastDefined(optionsArr.map(function (options) { return options.enableLegacyTemplate; })),\n        preserveWhitespaces: _lastDefined(optionsArr.map(function (options) { return options.preserveWhitespaces; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}