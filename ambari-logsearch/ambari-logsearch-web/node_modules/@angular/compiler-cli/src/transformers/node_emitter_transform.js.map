{"version":3,"file":"node_emitter_transform.js","sourceRoot":"","sources":["../../../../../packages/compiler-cli/src/transformers/node_emitter_transform.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAKH,+CAAqD;AAErD,2CAAkD,cAA+B;IAE/E,MAAM,CAAC;QACL,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAzB,CAAyB,CAAC;aAChD,GAAG,CAA0B,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QAC/E,IAAM,OAAO,GAAG,IAAI,oCAAqB,EAAE,CAAC;QAC5C,MAAM,CAAC,UAAS,UAAyB;YACvC,IAAM,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAA,gEAAa,CAAkD;gBACtE,MAAM,CAAC,aAAa,CAAC;YACvB,CAAC;YACD,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAfD,8EAeC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GeneratedFile} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nimport {TypeScriptNodeEmitter} from './node_emitter';\n\nexport function getAngularEmitterTransformFactory(generatedFiles: GeneratedFile[]): () =>\n    (sourceFile: ts.SourceFile) => ts.SourceFile {\n  return function() {\n    const map = new Map(generatedFiles.filter(g => g.stmts && g.stmts.length)\n                            .map<[string, GeneratedFile]>(g => [g.genFileUrl, g]));\n    const emitter = new TypeScriptNodeEmitter();\n    return function(sourceFile: ts.SourceFile): ts.SourceFile {\n      const g = map.get(sourceFile.fileName);\n      if (g && g.stmts) {\n        const [newSourceFile] = emitter.updateSourceFile(sourceFile, g.stmts);\n        return newSourceFile;\n      }\n      return sourceFile;\n    };\n  };\n}"]}