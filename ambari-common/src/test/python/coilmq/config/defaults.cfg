;Licensed to the Apache Software Foundation (ASF) under one
;or more contributor license agreements.  See the NOTICE file
;distributed with this work for additional information
;regarding copyright ownership.  The ASF licenses this file
;to you under the Apache License, Version 2.0 (the
;"License"); you may not use this file except in compliance
;with the License.  You may obtain a copy of the License at
;
;    http://www.apache.org/licenses/LICENSE-2.0
;
;Unless required by applicable law or agreed to in writing, software
;distributed under the License is distributed on an "AS IS" BASIS,
;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;See the License for the specific language governing permissions and
;limitations under the License.

; ---------------------------------------------------------------------------------------
; Default configuration values for the coilmq broker.
;
; Do not modify this file; instead, copy over the coilmq.cfg-sample file in this 
; directory and customize that to your needs.  Those values will override any values
; here.
; ---------------------------------------------------------------------------------------

[coilmq]

listen_addr = 127.0.0.1
listen_port = 61613

; Backend implementation configuration.
; -------------------------------------
; Factories for implementations can be configured by passing a dotted-path.
; This is typically the path to a class or to a callable that returns a configured
; object (that implements the necessary functionality).  The reason to use a callable
; is in cases when the object may need to be initialized with values from the
; app's configuration.  (For example, a database storage engine will need to know
; the database connect URI.)

; Configuration backend used for storage
qstore.factory = coilmq.store.memory.MemoryQueue

; Configure some defaults for the DBM store
qstore.dbm.checkpoint_operations = 100
qstore.dbm.checkpoint_timeout = 20

; Configure the scheduler implementations used
scheduler.subscriber_priority_factory = coilmq.scheduler.FavorReliableSubscriberScheduler
scheduler.queue_priority_factory = coilmq.scheduler.RandomQueueScheduler

; Authentication configuration
; auth.factory = coilmq.auth.simple.make_simple
; auth.simple.file = coilmq/tests/resources/auth.ini

; When running in debug mode how frequently we should print out stats/diagnostic information
; about queue sizes, memory, etc.
; (Set to 0 too disable the diagnostic information.)
debug.stats_poll_interval = 10.0