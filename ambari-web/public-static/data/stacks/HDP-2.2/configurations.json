{
  "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services?fields=configurations/*,StackServices/config_types/*&_=1426241618885",
  "items" : [
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS",
      "StackServices" : {
        "service_name" : "AMBARI_METRICS",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "ams-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-hbase-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-hbase-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-hbase-policy" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "ams-hbase-security-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-hbase-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ams-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/ambari_metrics_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ambari Metrics User Name.",
            "property_name" : "ambari_metrics_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "ams",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/ams.zookeeper.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "ams.zookeeper.keytab",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/ams.zookeeper.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "ams.zookeeper.principal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p [%t] %c{1}:%L - %m%n\n    ",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO\n\n    ",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for hbase-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HBASE_HEAPSIZE={{hbase_heapsize}}\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\nexport HBASE_MASTER_OPTS=\"-Xmx{{master_heapsize}}\"\nexport HBASE_REGIONSERVER_OPTS=\"-Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n    ",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n    ",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hadoop.security.authentication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hadoop.security.authentication",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.client.scanner.caching",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Number of rows that will be fetched when calling next on a scanner\n      if it is not served from (local, client) memory.\n    ",
            "property_name" : "hbase.client.scanner.caching",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.client.scanner.timeout.period",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Client scanner lease period in milliseconds.\n    ",
            "property_name" : "hbase.client.scanner.timeout.period",
            "property_type" : [ ],
            "property_value" : "900000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.cluster.distributed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The mode the cluster will be in. Possible values are false for\n      standalone mode and true for distributed mode. If false, startup will run\n      all HBase and ZooKeeper daemons together in the one JVM.\n    ",
            "property_name" : "hbase.cluster.distributed",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.coprocessor.master.classes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.coprocessor.master.classes",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.coprocessor.region.classes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.coprocessor.region.classes",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.hregion.majorcompaction",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The time (in milliseconds) between 'major' compactions of all\n      HStoreFiles in a region.\n      0 to disable automated major compactions.\n    ",
            "property_name" : "hbase.hregion.majorcompaction",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.hregion.memstore.block.multiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Block updates if memstore has hbase.hregion.memstore.block.multiplier\n      times hbase.hregion.memstore.flush.size bytes. Useful preventing runaway\n      memstore during spikes in update traffic.\n    ",
            "property_name" : "hbase.hregion.memstore.block.multiplier",
            "property_type" : [ ],
            "property_value" : "4",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.hregion.memstore.flush.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Memstore will be flushed to disk if size of the memstore exceeds this\n      number of bytes. Value is checked by a thread that runs every\n      hbase.server.thread.wakefrequency.\n    ",
            "property_name" : "hbase.hregion.memstore.flush.size",
            "property_type" : [ ],
            "property_value" : "134217728",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.hstore.blockingStoreFiles",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If more than this number of StoreFiles exist in any one Store\n      (one StoreFile is written per flush of MemStore), updates are blocked for\n      this region until a compaction is completed, or until\n      hbase.hstore.blockingWaitTime has been exceeded.\n    ",
            "property_name" : "hbase.hstore.blockingStoreFiles",
            "property_type" : [ ],
            "property_value" : "200",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.hstore.flusher.count",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of flush threads. With fewer threads, the MemStore flushes\n      will be queued. With more threads, the flushes will be executed in parallel,\n      increasing the load on HDFS, and potentially causing more compactions.\n    ",
            "property_name" : "hbase.hstore.flusher.count",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.local.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory on the local filesystem to be used as a local storage\n    ",
            "property_name" : "hbase.local.dir",
            "property_type" : [ ],
            "property_value" : "${hbase.tmp.dir}/local",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.info.bindAddress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The bind address for the HBase Master web UI",
            "property_name" : "hbase.master.info.bindAddress",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.info.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase Master web UI.",
            "property_name" : "hbase.master.info.port",
            "property_type" : [ ],
            "property_value" : "61310",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.master.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.keytab.file",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.master.keytab.file",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase Master web UI.",
            "property_name" : "hbase.master.port",
            "property_type" : [ ],
            "property_value" : "61300",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.master.wait.on.regionservers.mintostart",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Ensure that HBase Master waits for # many region server to start.\n    ",
            "property_name" : "hbase.master.wait.on.regionservers.mintostart",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.myclient.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.myclient.keytab",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.myclient.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.myclient.principal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.global.memstore.lowerLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When memstores are being forced to flush to make room in\n      memory, keep flushing until we hit this mark. Defaults to 35% of heap.\n      This value equal to hbase.regionserver.global.memstore.upperLimit causes\n      the minimum possible flushing to occur when updates are blocked due to\n      memstore limiting.\n    ",
            "property_name" : "hbase.regionserver.global.memstore.lowerLimit",
            "property_type" : [ ],
            "property_value" : "0.4",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.global.memstore.upperLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Maximum size of all memstores in a region server before new\n      updates are blocked and flushes are forced. Defaults to 40% of heap\n    ",
            "property_name" : "hbase.regionserver.global.memstore.upperLimit",
            "property_type" : [ ],
            "property_value" : "0.5",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.info.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase RegionServer web UI.",
            "property_name" : "hbase.regionserver.info.port",
            "property_type" : [ ],
            "property_value" : "61330",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.regionserver.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.keytab.file",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.regionserver.keytab.file",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase RegionServer web UI.",
            "property_name" : "hbase.regionserver.port",
            "property_type" : [ ],
            "property_value" : "61320",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.thread.compaction.large",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Configuration key for the large compaction threads.\n    ",
            "property_name" : "hbase.regionserver.thread.compaction.large",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.regionserver.thread.compaction.small",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Configuration key for the small compaction threads.\n    ",
            "property_name" : "hbase.regionserver.thread.compaction.small",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.replication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable/Disable HBase replication.",
            "property_name" : "hbase.replication",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.rootdir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Ambari Metrics service uses HBase as default storage backend. Set the rootdir for\n      HBase to either local filesystem path if using Ambari Metrics in embedded mode or\n      to a HDFS dir, example: hdfs://namenode.example.org:8020/amshbase.\n    ",
            "property_name" : "hbase.rootdir",
            "property_type" : [ ],
            "property_value" : "file:///var/lib/ambari-metrics-collector/hbase",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.security.authentication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.security.authentication",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.security.authorization",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.security.authorization",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.snapshot.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable/Disable HBase snapshots.",
            "property_name" : "hbase.snapshot.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.tmp.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Temporary directory on the local filesystem.\n      Change this setting to point to a location more permanent\n      than '/tmp' (The '/tmp' directory is often cleared on\n      machine restart).\n    ",
            "property_name" : "hbase.tmp.dir",
            "property_type" : [ ],
            "property_value" : "/var/lib/ambari-metrics-collector/hbase-tmp",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.leaderport",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.leaderport",
            "property_type" : [ ],
            "property_value" : "61388",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.peerport",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.peerport",
            "property_type" : [ ],
            "property_value" : "61288",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.authProvider.1",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.property.authProvider.1",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.clientPort",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.property.clientPort",
            "property_type" : [ ],
            "property_value" : "61181",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.dataDir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Property from ZooKeeper's config zoo.cfg.\n      The directory where the snapshot is stored.\n    ",
            "property_name" : "hbase.zookeeper.property.dataDir",
            "property_type" : [ ],
            "property_value" : "${hbase.tmp.dir}/zookeeper",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.jaasLoginRenew",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.property.jaasLoginRenew",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.kerberos.removeHostFromPrincipal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.property.kerberos.removeHostFromPrincipal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.property.kerberos.removeRealmFromPrincipal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase.zookeeper.quorum",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Comma separated list of servers in the ZooKeeper Quorum.\n      For example, \"host1.mydomain.com,host2.mydomain.com,host3.mydomain.com\".\n      By default this is set to localhost for local and pseudo-distributed modes\n      of operation. For a fully-distributed setup, this should be set to a full\n      list of ZooKeeper quorum servers. If HBASE_MANAGES_ZK is set in hbase-env.sh\n      this is the list of servers which we will start/stop ZooKeeper on.\n    ",
            "property_name" : "hbase.zookeeper.quorum",
            "property_type" : [ ],
            "property_value" : "{{zookeeper_quorum_hosts}}",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Log Directories for HBase.",
            "property_name" : "hbase_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/ambari-metrics-collector",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_master_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase Master Heap Size",
            "property_name" : "hbase_master_heapsize",
            "property_type" : [ ],
            "property_value" : "1024m",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Pid Directory for HBase.",
            "property_name" : "hbase_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/ambari-metrics-collector/",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_regionserver_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer Heap Size.",
            "property_name" : "hbase_regionserver_heapsize",
            "property_type" : [ ],
            "property_value" : "1024m",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_regionserver_xmn_max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer maximum value for minimum heap size.",
            "property_name" : "hbase_regionserver_xmn_max",
            "property_type" : [ ],
            "property_value" : "512m",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hbase_regionserver_xmn_ratio",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer minimum heap size is calculated as a percentage of max heap size.",
            "property_name" : "hbase_regionserver_xmn_ratio",
            "property_type" : [ ],
            "property_value" : "0.2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/hfile.block.cache.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Percentage of maximum heap (-Xmx setting) to allocate to block cache\n      used by a StoreFile. Default of 0.4 means allocate 40%.\n    ",
            "property_name" : "hfile.block.cache.size",
            "property_type" : [ ],
            "property_value" : "0.3",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/metrics_collector_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Collector log directory.",
            "property_name" : "metrics_collector_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/ambari-metrics-collector",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/metrics_collector_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Collector pid directory.",
            "property_name" : "metrics_collector_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/ambari-metrics-collector",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/metrics_monitor_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Monitor log directory.",
            "property_name" : "metrics_monitor_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/ambari-metrics-monitor",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/metrics_monitor_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Monitor pid directory.",
            "property_name" : "metrics_monitor_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/ambari-metrics-monitor",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/phoenix.groupby.maxCacheSize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Size in bytes of pages cached during GROUP BY spilling. Default is 100Mb.\n    ",
            "property_name" : "phoenix.groupby.maxCacheSize",
            "property_type" : [ ],
            "property_value" : "307200000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/phoenix.query.spoolThresholdBytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Threshold size in bytes after which results from parallelly executed\n      query results are spooled to disk. Default is 20 mb.\n    ",
            "property_name" : "phoenix.query.spoolThresholdBytes",
            "property_type" : [ ],
            "property_value" : "12582912",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/phoenix.query.spoolThresholdBytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "phoenix.query.spoolThresholdBytes",
            "property_type" : [ ],
            "property_value" : "12582912",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/phoenix.query.timeoutMs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Number of milliseconds after which a query will timeout on the client.\n      Default is 10 min.\n    ",
            "property_name" : "phoenix.query.timeoutMs",
            "property_type" : [ ],
            "property_value" : "1200000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/phoenix.sequence.saltBuckets",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Controls the number of pre-allocated regions for SYSTEM.SEQUENCE table.\n    ",
            "property_name" : "phoenix.sequence.saltBuckets",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/security.admin.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HMasterInterface protocol implementation (ie.\n      clients talking to HMaster for admin operations).\n      The ACL is a comma-separated list of user and group names. The user and\n      group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n      A special value of \"*\" means all users are allowed.",
            "property_name" : "security.admin.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/security.client.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HRegionInterface protocol implementations (ie.\n      clients talking to HRegionServers)\n      The ACL is a comma-separated list of user and group names. The user and\n      group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n      A special value of \"*\" means all users are allowed.",
            "property_name" : "security.client.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/security.masterregion.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HMasterRegionInterface protocol implementations\n      (for HRegionServers communicating with HMaster)\n      The ACL is a comma-separated list of user and group names. The user and\n      group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n      A special value of \"*\" means all users are allowed.",
            "property_name" : "security.masterregion.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.aggregator.checkpoint.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Directory to store aggregator checkpoints. Change to a permanent\n      location so that checkpoint ar not lost.\n    ",
            "property_name" : "timeline.metrics.aggregator.checkpoint.dir",
            "property_type" : [ ],
            "property_value" : "/var/lib/ambari-metrics-collector/checkpoint",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Multiplier value * interval = Max allowed checkpoint lag. Effectively\n      if aggregator checkpoint is greater than max allowed checkpoint delay,\n      the checkpoint will be discarded by the aggregator.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.hourly.disabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Disable cluster based hourly aggregations.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.hourly.disabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.hourly.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to sleep for the hourly resolution cluster wide\n      aggregator. Default is 1 hour.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.hourly.interval",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.hourly.ttl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Cluster wide hourly resolution data purge interval. Default is 1 year.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.hourly.ttl",
            "property_type" : [ ],
            "property_value" : "31536000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Multiplier value * interval = Max allowed checkpoint lag. Effectively\n      if aggregator checkpoint is greater than max allowed checkpoint delay,\n      the checkpoint will be discarded by the aggregator.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.minute.disabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Disable cluster based minute aggregations.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.minute.disabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.minute.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to sleep for the minute resolution cluster wide\n      aggregator. Default resolution is 2 minutes.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.minute.interval",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.minute.timeslice.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Lowest resolution of desired data for cluster level minute aggregates.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.minute.timeslice.interval",
            "property_type" : [ ],
            "property_value" : "15",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.cluster.aggregator.minute.ttl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Cluster wide minute resolution data purge interval. Default is 30 days.\n    ",
            "property_name" : "timeline.metrics.cluster.aggregator.minute.ttl",
            "property_type" : [ ],
            "property_value" : "2592000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.hbase.compression.scheme",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Compression codes need to be installed and available before setting the\n      scheme. Default compression is SNAPPY. Disable by setting to None.\n      This can be changed only before creating tables.\n    ",
            "property_name" : "timeline.metrics.hbase.compression.scheme",
            "property_type" : [ ],
            "property_value" : "SNAPPY",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.hbase.data.block.encoding",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Codecs are enabled on a table by setting the DATA_BLOCK_ENCODING property.\n      Default encoding is FAST_DIFF. This can be changed only before creating\n      tables.\n    ",
            "property_name" : "timeline.metrics.hbase.data.block.encoding",
            "property_type" : [ ],
            "property_value" : "FAST_DIFF",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Multiplier value * interval = Max allowed checkpoint lag. Effectively\n      if aggregator checkpoint is greater than max allowed checkpoint delay,\n      the checkpoint will be discarded by the aggregator.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.hourly.disabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Disable host based hourly aggregations.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.hourly.disabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.hourly.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to sleep for the hourly resolution host based\n      aggregator. Default resolution is 1 hour.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.hourly.interval",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.hourly.ttl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Host based hourly resolution data purge interval. Default is 30 days.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.hourly.ttl",
            "property_type" : [ ],
            "property_value" : "2592000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Multiplier value * interval = Max allowed checkpoint lag. Effectively\n      if aggregator checkpoint is greater than max allowed checkpoint delay,\n      the checkpoint will be discarded by the aggregator.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.minute.disabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Disable host based minute aggregations.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.minute.disabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.minute.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to sleep for the minute resolution host based\n      aggregator. Default resolution is 5 minutes.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.minute.interval",
            "property_type" : [ ],
            "property_value" : "300",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.minute.ttl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Host based minute resolution data purge interval. Default is 7 days.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.minute.ttl",
            "property_type" : [ ],
            "property_value" : "604800",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.host.aggregator.ttl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      1 minute resolution data purge interval. Default is 1 day.\n    ",
            "property_name" : "timeline.metrics.host.aggregator.ttl",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.checkpointDelay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to sleep on the first run or when the checkpoint is\n      too old.\n    ",
            "property_name" : "timeline.metrics.service.checkpointDelay",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.default.result.limit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Max result limit on number of rows returned. Calculated as follows:\n      4 aggregate metrics/min * 60 * 24: Retrieve aggregate data for 1 day.\n    ",
            "property_name" : "timeline.metrics.service.default.result.limit",
            "property_type" : [ ],
            "property_value" : "5760",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.operation.mode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Service Operation modes:\n      1) embedded: Metrics stored on local FS, HBase in Standalone mode\n      2) distributed: HBase daemons writing to HDFS\n    ",
            "property_name" : "timeline.metrics.service.operation.mode",
            "property_type" : [ ],
            "property_value" : "embedded",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.resultset.fetchSize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      JDBC resultset prefect size for aggregator queries.\n    ",
            "property_name" : "timeline.metrics.service.resultset.fetchSize",
            "property_type" : [ ],
            "property_value" : "2000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.rpc.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The address of the metrics service rpc listeners.\n    ",
            "property_name" : "timeline.metrics.service.rpc.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:60200",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/timeline.metrics.service.webapp.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The address of the metrics service web application.\n    ",
            "property_name" : "timeline.metrics.service.webapp.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:6188",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/zookeeper.session.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper session timeout in milliseconds.",
            "property_name" : "zookeeper.session.timeout",
            "property_type" : [ ],
            "property_value" : "120000",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/AMBARI_METRICS/configurations/zookeeper.znode.parent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "zookeeper.znode.parent",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "AMBARI_METRICS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ams-hbase-security-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON",
      "StackServices" : {
        "service_name" : "FALCON",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "falcon-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "falcon-runtime.properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "falcon-startup.properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.ConfigSyncService.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.ConfigSyncService.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.resource.ConfigSyncService",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.ProcessInstanceManager.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.ProcessInstanceManager.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.resource.InstanceManager",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.SchedulableEntityManager.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.SchedulableEntityManager.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.resource.SchedulableEntityManager",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.application.services",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Falcon Services",
            "property_name" : "*.application.services",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.security.AuthenticationInitializationService,\\\n      org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\\n      org.apache.falcon.service.ProcessSubscriberService,\\\n      org.apache.falcon.entity.store.ConfigurationStore,\\\n      org.apache.falcon.rerun.service.RetryService,\\\n      org.apache.falcon.rerun.service.LateRunService,\\\n      org.apache.falcon.service.LogCleanupService,\\\n      org.apache.falcon.metadata.MetadataMappingService\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.broker.impl.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.broker.impl.class",
            "property_type" : [ ],
            "property_value" : "org.apache.activemq.ActiveMQConnectionFactory",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.broker.ttlInMins",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.broker.ttlInMins",
            "property_type" : [ ],
            "property_value" : "4320",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.broker.url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default Active MQ url",
            "property_name" : "*.broker.url",
            "property_type" : [ ],
            "property_value" : "tcp://localhost:61616",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.catalog.service.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.catalog.service.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.catalog.HiveCatalogService",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.config.store.uri",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location to store user entity configurations",
            "property_name" : "*.config.store.uri",
            "property_type" : [ ],
            "property_value" : "file:///hadoop/falcon/store",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.configstore.listeners",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.configstore.listeners",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap,\\\n      org.apache.falcon.service.SharedLibraryHostingService\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.dfs.namenode.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "name node principal to talk to config store",
            "property_name" : "*.dfs.namenode.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "nn/_HOST@EXAMPLE.COM",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.domain",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.domain",
            "property_type" : [ ],
            "property_value" : "${falcon.app.type}",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-runtime.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.domain",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.domain",
            "property_type" : [ ],
            "property_value" : "${falcon.app.type}",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.entity.topic",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.entity.topic",
            "property_type" : [ ],
            "property_value" : "FALCON.ENTITY.TOPIC",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.authentication.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.authentication.type",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.cleanup.service.frequency",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.cleanup.service.frequency",
            "property_type" : [ ],
            "property_value" : "days(1)",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.enableTLS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Falcon TLS Enabled flag",
            "property_name" : "*.falcon.enableTLS",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.graph.blueprints.graph",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.graph.blueprints.graph",
            "property_type" : [ ],
            "property_value" : "com.thinkaurelius.titan.core.TitanFactory",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.graph.preserve.history",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.graph.preserve.history",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.graph.serialize.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.graph.serialize.path",
            "property_type" : [ ],
            "property_value" : "/hadoop/falcon/data/lineage",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.graph.storage.backend",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.graph.storage.backend",
            "property_type" : [ ],
            "property_value" : "berkeleyje",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.graph.storage.directory",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.graph.storage.directory",
            "property_type" : [ ],
            "property_value" : "/hadoop/falcon/data/lineage/graphdb",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.blacklisted.users",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Comma separated list of black listed users",
            "property_name" : "*.falcon.http.authentication.blacklisted.users",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.cookie.domain",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.http.authentication.cookie.domain",
            "property_type" : [ ],
            "property_value" : "EXAMPLE.COM",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.kerberos.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location of the keytab file with the credentials for the HTTP principal",
            "property_name" : "*.falcon.http.authentication.kerberos.keytab",
            "property_type" : [ ],
            "property_value" : "/etc/security/keytabs/spnego.service.keytab",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.kerberos.name.rules",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The kerberos names rules is to resolve kerberos principal names, refer to Hadoop's KerberosName for more details.",
            "property_name" : "*.falcon.http.authentication.kerberos.name.rules",
            "property_type" : [ ],
            "property_value" : "DEFAULT",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Indicates the Kerberos principal to be used for HTTP endpoint",
            "property_name" : "*.falcon.http.authentication.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "HTTP/_HOST@EXAMPLE.COM",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.signature.secret",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.http.authentication.signature.secret",
            "property_type" : [ ],
            "property_value" : "falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.simple.anonymous.allowed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Indicates if anonymous requests are allowed when using 'simple' authentication",
            "property_name" : "*.falcon.http.authentication.simple.anonymous.allowed",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.token.validity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.http.authentication.token.validity",
            "property_type" : [ ],
            "property_value" : "36000",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.http.authentication.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.http.authentication.type",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.security.authorization.admin.groups",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Admin Group Membership, comma separated users",
            "property_name" : "*.falcon.security.authorization.admin.groups",
            "property_type" : [ ],
            "property_value" : "falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.security.authorization.admin.users",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Admin Users, comma separated users",
            "property_name" : "*.falcon.security.authorization.admin.users",
            "property_type" : [ ],
            "property_value" : "falcon,ambari-qa",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.security.authorization.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Authorization Enabled flag",
            "property_name" : "*.falcon.security.authorization.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.security.authorization.provider",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Authorization Provider Implementation Fully Qualified Class Name",
            "property_name" : "*.falcon.security.authorization.provider",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.security.DefaultAuthorizationProvider",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.security.authorization.superusergroup",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The name of the group of super-users",
            "property_name" : "*.falcon.security.authorization.superusergroup",
            "property_type" : [ ],
            "property_value" : "falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.service.authentication.kerberos.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.service.authentication.kerberos.keytab",
            "property_type" : [ ],
            "property_value" : "/etc/security/keytabs/falcon.service.keytab",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.falcon.service.authentication.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.falcon.service.authentication.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "falcon/_HOST@EXAMPLE.COM",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.internal.queue.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.internal.queue.size",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.journal.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Journal implementation class",
            "property_name" : "*.journal.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.transaction.SharedFileSystemJournal",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.log.cleanup.frequency.days.retention",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.log.cleanup.frequency.days.retention",
            "property_type" : [ ],
            "property_value" : "days(7)",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-runtime.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.log.cleanup.frequency.hours.retention",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.log.cleanup.frequency.hours.retention",
            "property_type" : [ ],
            "property_value" : "minutes(1)",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-runtime.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.log.cleanup.frequency.minutes.retention",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.log.cleanup.frequency.minutes.retention",
            "property_type" : [ ],
            "property_value" : "hours(6)",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-runtime.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.log.cleanup.frequency.months.retention",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.log.cleanup.frequency.months.retention",
            "property_type" : [ ],
            "property_value" : "months(3)",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-runtime.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.max.retry.failure.count",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.max.retry.failure.count",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.oozie.feed.workflow.builder",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.oozie.feed.workflow.builder",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.workflow.OozieFeedWorkflowBuilder",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.oozie.process.workflow.builder",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.oozie.process.workflow.builder",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.workflow.OozieProcessWorkflowBuilder",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.retry.recorder.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.retry.recorder.path",
            "property_type" : [ ],
            "property_value" : "${falcon.log.dir}/retry",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.shared.libs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.shared.libs",
            "property_type" : [ ],
            "property_value" : "activemq-core,ant,geronimo-j2ee-management,hadoop-distcp,jms,json-simple,oozie-client,spring-jms",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.system.lib.location",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location of libraries that is shipped to Hadoop",
            "property_name" : "*.system.lib.location",
            "property_type" : [ ],
            "property_value" : "${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/*.workflow.engine.impl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "*.workflow.engine.impl",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.workflow.engine.OozieWorkflowEngine",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for falcon-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\nexport JAVA_HOME={{java_home}}\n\n# any additional java opts you want to set. This will apply to both client and server operations\n#export FALCON_OPTS=\n\n# any additional java opts that you want to set for client only\n#export FALCON_CLIENT_OPTS=\n\n# java heap size we want to set for the client. Default is 1024MB\n#export FALCON_CLIENT_HEAP=\n\n# any additional opts you want to set for prisim service.\n#export FALCON_PRISM_OPTS=\n\n# java heap size we want to set for the prisim service. Default is 1024MB\n#export FALCON_PRISM_HEAP=\n\n# any additional opts you want to set for falcon service.\nexport FALCON_SERVER_OPTS=\"-Dfalcon.embeddedmq={{falcon_embeddedmq_enabled}} -Dfalcon.emeddedmq.port={{falcon_emeddedmq_port}}\"\n\n# java heap size we want to set for the falcon server. Default is 1024MB\n#export FALCON_SERVER_HEAP=\n\n# What is is considered as falcon home dir. Default is the base location of the installed software\n#export FALCON_HOME_DIR=\n\n# Where log files are stored. Defatult is logs directory under the base install location\nexport FALCON_LOG_DIR={{falcon_log_dir}}\n\n# Where pid files are stored. Defatult is logs directory under the base install location\nexport FALCON_PID_DIR={{falcon_pid_dir}}\n\n# where the falcon active mq data is stored. Defatult is logs/data directory under the base install location\nexport FALCON_DATA_DIR={{falcon_embeddedmq_data}}\n\n# Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n#export FALCON_EXPANDED_WEBAPP_DIR=\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon.embeddedmq",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether embeddedmq is enabled or not.",
            "property_name" : "falcon.embeddedmq",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon.embeddedmq.data",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory in which embeddedmq data is stored.",
            "property_name" : "falcon.embeddedmq.data",
            "property_type" : [ ],
            "property_value" : "/hadoop/falcon/embeddedmq/data",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon.emeddedmq.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Port that embeddedmq will listen on.",
            "property_name" : "falcon.emeddedmq.port",
            "property_type" : [ ],
            "property_value" : "61616",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon_local_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory where Falcon data, such as activemq data, is stored.",
            "property_name" : "falcon_local_dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Falcon log directory.",
            "property_name" : "falcon_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Falcon pid-file directory.",
            "property_name" : "falcon_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon_port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Port the Falcon Server listens on.",
            "property_name" : "falcon_port",
            "property_type" : [ ],
            "property_value" : "15000",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/falcon_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Falcon user.",
            "property_name" : "falcon_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "falcon",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-action-create",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n      This property is a convenience property to add extensions to the built in executors without having to\n      include all the built in ones.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-action-create",
            "property_type" : [ ],
            "property_value" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-action-create-inst",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n      This property is a convenience property to add extensions to the built in executors without having to\n      include all the built in ones.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-action-create-inst",
            "property_type" : [ ],
            "property_value" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-action-start",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n      This property is a convenience property to add extensions to the built in executors without having to\n      include all the built in ones.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-action-start",
            "property_type" : [ ],
            "property_value" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest,\n      future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-job-submit-data",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL constant declarations, separated by commas, format is [PREFIX:]NAME=CLASS#CONSTANT.\n      This property is a convenience property to add extensions to the built in executors without having to\n      include all the built in ones.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-job-submit-data",
            "property_type" : [ ],
            "property_value" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-job-submit-instances",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n      This property is a convenience property to add extensions to the built in executors without having to\n      include all the built in ones.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-job-submit-instances",
            "property_type" : [ ],
            "property_value" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-sla-create",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-sla-create",
            "property_type" : [ ],
            "property_value" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.ELService.ext.functions.coord-sla-submit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      EL functions declarations, separated by commas, format is [PREFIX:]NAME=CLASS#METHOD.\n    ",
            "property_name" : "oozie.service.ELService.ext.functions.coord-sla-submit",
            "property_type" : [ ],
            "property_value" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/oozie.service.HadoopAccessorService.supported.filesystems",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enlist the different filesystems supported for federation. If wildcard \"*\" is specified, then ALL file schemes will be allowed.\n    ",
            "property_name" : "oozie.service.HadoopAccessorService.supported.filesystems",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/prism.application.services",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Prism Services",
            "property_name" : "prism.application.services",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.entity.store.ConfigurationStore",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FALCON/configurations/prism.configstore.listeners",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Prism Configuration Store Change listeners",
            "property_name" : "prism.configstore.listeners",
            "property_type" : [ ],
            "property_value" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap\n    ",
            "service_name" : "FALCON",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "falcon-startup.properties.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME",
      "StackServices" : {
        "service_name" : "FLUME",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "flume-conf" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "flume-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Flume agent configurations. \n    Specifying the configuration here applies to all hosts in this configuration-group. Please use host specific configuration-groups to provide different configurations on different hosts. \n    For configuring multiple agents on the same host, provide the combined agent configurations here. Each agent should have a different name.",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Flume agent config\n    ",
            "service_name" : "FLUME",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "flume-conf.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for flume-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# If this file is placed at FLUME_CONF_DIR/flume-env.sh, it will be sourced\n# during Flume startup.\n\n# Enviroment variables can be set here.\n\nexport JAVA_HOME={{java_home}}\n\n# Give Flume more memory and pre-allocate, enable remote monitoring via JMX\n# export JAVA_OPTS=\"-Xms100m -Xmx2000m -Dcom.sun.management.jmxremote\"\n\n# Note that the Flume conf directory is always included in the classpath.\n# Add flume sink to classpath\nif [ -e \"/usr/lib/flume/lib/ambari-metrics-flume-sink.jar\" ]; then\n  export FLUME_CLASSPATH=$FLUME_CLASSPATH:/usr/lib/flume/lib/ambari-metrics-flume-sink.jar\nfi\n\nexport HIVE_HOME={{flume_hive_home}}\nexport HCAT_HOME={{flume_hcat_home}}\n    ",
            "service_name" : "FLUME",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "flume-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME/configurations/flume_conf_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location to save configuration files",
            "property_name" : "flume_conf_dir",
            "property_type" : [ ],
            "property_value" : "/etc/flume/conf",
            "service_name" : "FLUME",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "flume-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME/configurations/flume_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location to save log files",
            "property_name" : "flume_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/flume",
            "service_name" : "FLUME",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "flume-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/FLUME/configurations/flume_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Flume User",
            "property_name" : "flume_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "flume",
            "service_name" : "FLUME",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "flume-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA",
      "StackServices" : {
        "service_name" : "GANGLIA",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "ganglia-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/additional_clusters",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Add additional desired Ganglia metrics cluster in the form \"name1:port1,name2:port2\". Ensure that the names and ports are unique across all cluster and ports are available on ganglia server host. Ambari has reserved ports 8667-8669 within its own pool.",
            "property_name" : "additional_clusters",
            "property_type" : [ ],
            "property_value" : " ",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/ganglia_conf_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Config directory for Ganglia",
            "property_name" : "ganglia_conf_dir",
            "property_type" : [ ],
            "property_value" : "/etc/ganglia/hdp",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/ganglia_runtime_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Run directories for Ganglia",
            "property_name" : "ganglia_runtime_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/ganglia/hdp",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/gmetad_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "User ",
            "property_name" : "gmetad_user",
            "property_type" : [
              "USER",
              "GROUP"
            ],
            "property_value" : "nobody",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/gmond_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "User ",
            "property_name" : "gmond_user",
            "property_type" : [
              "USER",
              "GROUP"
            ],
            "property_value" : "nobody",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/rrdcached_base_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default directory for saving the rrd files on ganglia server",
            "property_name" : "rrdcached_base_dir",
            "property_type" : [ ],
            "property_value" : "/var/lib/ganglia/rrds",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/rrdcached_delay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "(-z) If specified, rrdcached will delay writing of each RRD for a random number of seconds in the range [0,delay). This will avoid too many writes being queued simultaneously. This value should be no greater than the value specified in -w. By default, there is no delay.",
            "property_name" : "rrdcached_delay",
            "property_type" : [ ],
            "property_value" : "1800",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/rrdcached_flush_timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "(-f) Every timeout seconds the entire cache is searched for old values which are written to disk. This only concerns files to which updates have stopped, so setting this to a high value, such as 3600 seconds, is acceptable in most cases. This timeout defaults to 3600 seconds.",
            "property_name" : "rrdcached_flush_timeout",
            "property_type" : [ ],
            "property_value" : "7200",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/rrdcached_timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "(-w) Data is written to disk every timeout seconds. If this option is not specified the default interval of 300 seconds will be used.",
            "property_name" : "rrdcached_timeout",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/GANGLIA/configurations/rrdcached_write_threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "(-t) Specifies the number of threads used for writing RRD files. The default is 4. Increasing this number will allow rrdcached to have more simultaneous I/O requests into the kernel. This may allow the kernel to re-order disk writes, resulting in better disk throughput.",
            "property_name" : "rrdcached_write_threads",
            "property_type" : [ ],
            "property_value" : "4",
            "service_name" : "GANGLIA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ganglia-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE",
      "StackServices" : {
        "service_name" : "HBASE",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "hbase-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hbase-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hbase-policy" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "hbase-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "ranger-hbase-plugin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/REPOSITORY_CONFIG_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_PASSWORD",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/REPOSITORY_CONFIG_USERNAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_USERNAME",
            "property_type" : [ ],
            "property_value" : "hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/SSL_KEYSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-keystore.jks",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/SSL_KEYSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "myKeyFilePassword",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/SSL_TRUSTSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-truststore.jks",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/SSL_TRUSTSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "changeit",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/UPDATE_XAPOLICIES_ON_GRANT_REVOKE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "UPDATE_XAPOLICIES_ON_GRANT_REVOKE",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.DB.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.DB.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.DESTINATION_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINATION_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.DESTINTATION_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FILE",
            "property_type" : [ ],
            "property_value" : "%hostname%-audit.log",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit/archive",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
            "property_type" : [ ],
            "property_value" : "%time:yyyyMMdd-HHmm.ss%.log",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=DEBUG\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO\n\n    ",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for hbase-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %} -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\n{% endif %}\n    ",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/dfs.domain.socket.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Path to domain socket.",
            "property_name" : "dfs.domain.socket.path",
            "property_type" : [ ],
            "property_value" : "/var/lib/hadoop-hdfs/dn_socket",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.bucketcache.ioengine",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Where to store the contents of the bucketcache. One of: onheap,\n      offheap, or file. If a file, set it to file:PATH_TO_FILE.",
            "property_name" : "hbase.bucketcache.ioengine",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.bucketcache.percentage.in.combinedcache",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Value to be set between 0.0 and 1.0",
            "property_name" : "hbase.bucketcache.percentage.in.combinedcache",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.bucketcache.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the buckets for the bucketcache if you only use a single size.",
            "property_name" : "hbase.bucketcache.size",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.client.keyvalue.maxsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Specifies the combined maximum allowed size of a KeyValue\n    instance. This is to set an upper boundary for a single entry saved in a\n    storage file. Since they cannot be split it helps avoiding that a region\n    cannot be split any further because the data is too large. It seems wise\n    to set this to a fraction of the maximum region size. Setting it to zero\n    or less disables the check.\n    ",
            "property_name" : "hbase.client.keyvalue.maxsize",
            "property_type" : [ ],
            "property_value" : "10485760",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.client.scanner.caching",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of rows that will be fetched when calling next\n    on a scanner if it is not served from (local, client) memory. Higher\n    caching values will enable faster scanners but will eat up more memory\n    and some calls of next may take longer and longer times when the cache is empty.\n    Do not set this value such that the time between invocations is greater\n    than the scanner timeout; i.e. hbase.regionserver.lease.period\n    ",
            "property_name" : "hbase.client.scanner.caching",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.cluster.distributed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The mode the cluster will be in. Possible values are\n      false for standalone mode and true for distributed mode.  If\n      false, startup will run all HBase and ZooKeeper daemons together\n      in the one JVM.\n    ",
            "property_name" : "hbase.cluster.distributed",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.coprocessor.master.classes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A comma-separated list of\n      org.apache.hadoop.hbase.coprocessor.MasterObserver coprocessors that are\n      loaded by default on the active HMaster process. For any implemented\n      coprocessor methods, the listed classes will be called in order. After\n      implementing your own MasterObserver, just put it in HBase's classpath\n      and add the fully qualified class name here.\n    ",
            "property_name" : "hbase.coprocessor.master.classes",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.coprocessor.region.classes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A comma-separated list of Coprocessors that are loaded by\n    default on all tables. For any override coprocessor method, these classes\n    will be called in order. After implementing your own Coprocessor, just put\n    it in HBase's classpath and add the fully qualified class name here.\n    A coprocessor can also be loaded on demand by setting HTableDescriptor.\n    ",
            "property_name" : "hbase.coprocessor.region.classes",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.defaults.for.version.skip",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Disables version verification.",
            "property_name" : "hbase.defaults.for.version.skip",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.majorcompaction",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time between major compactions, expressed in milliseconds. Set to 0 to disable\n      time-based automatic major compactions. User-requested and size-based major compactions will\n      still run. This value is multiplied by hbase.hregion.majorcompaction.jitter to cause\n      compaction to start at a somewhat-random time during a given window of time. The default value\n      is 7 days, expressed in milliseconds. If major compactions are causing disruption in your\n      environment, you can configure them to run at off-peak times for your deployment, or disable\n      time-based major compactions by setting this parameter to 0, and run major compactions in a\n      cron job or by another external mechanism.",
            "property_name" : "hbase.hregion.majorcompaction",
            "property_type" : [ ],
            "property_value" : "604800000",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.majorcompaction.jitter",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A multiplier applied to hbase.hregion.majorcompaction to cause compaction to occur\n      a given amount of time either side of hbase.hregion.majorcompaction. The smaller the number,\n      the closer the compactions will happen to the hbase.hregion.majorcompaction\n      interval.",
            "property_name" : "hbase.hregion.majorcompaction.jitter",
            "property_type" : [ ],
            "property_value" : "0.50",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.max.filesize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n    Maximum HStoreFile size. If any one of a column families' HStoreFiles has\n    grown to exceed this value, the hosting HRegion is split in two.\n    Default: 1G.\n    ",
            "property_name" : "hbase.hregion.max.filesize",
            "property_type" : [ ],
            "property_value" : "10737418240",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.memstore.block.multiplier",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n    Block updates if memstore has hbase.hregion.memstore.block.multiplier\n    times hbase.hregion.memstore.flush.size bytes.  Useful preventing\n    runaway memstore during spikes in update traffic.  Without an\n    upper-bound, memstore fills such that when it flushes the\n    resultant flush files take a long time to compact or split, or\n    worse, we OOME.\n    ",
            "property_name" : "hbase.hregion.memstore.block.multiplier",
            "property_type" : [ ],
            "property_value" : "4",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.memstore.flush.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n    Memstore will be flushed to disk if size of the memstore\n    exceeds this number of bytes.  Value is checked by a thread that runs\n    every hbase.server.thread.wakefrequency.\n    ",
            "property_name" : "hbase.hregion.memstore.flush.size",
            "property_type" : [ ],
            "property_value" : "134217728",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hregion.memstore.mslab.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enables the MemStore-Local Allocation Buffer,\n      a feature which works to prevent heap fragmentation under\n      heavy write loads. This can reduce the frequency of stop-the-world\n      GC pauses on large heaps.\n    ",
            "property_name" : "hbase.hregion.memstore.mslab.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hstore.blockingStoreFiles",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n    If more than this number of StoreFiles in any one Store\n    (one StoreFile is written per flush of MemStore) then updates are\n    blocked for this HRegion until a compaction is completed, or\n    until hbase.hstore.blockingWaitTime has been exceeded.\n    ",
            "property_name" : "hbase.hstore.blockingStoreFiles",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.hstore.compactionThreshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n    If more than this number of HStoreFiles in any one HStore\n    (one HStoreFile is written per flush of memstore) then a compaction\n    is run to rewrite all HStoreFiles files as one.  Larger numbers\n    put off compaction but when it runs, it takes longer to complete.\n    ",
            "property_name" : "hbase.hstore.compactionThreshold",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.local.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory on the local filesystem to be used as a local storage\n    ",
            "property_name" : "hbase.local.dir",
            "property_type" : [ ],
            "property_value" : "${hbase.tmp.dir}/local",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.master.info.bindAddress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The bind address for the HBase Master web UI\n    ",
            "property_name" : "hbase.master.info.bindAddress",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.master.info.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase Master web UI.",
            "property_name" : "hbase.master.info.port",
            "property_type" : [ ],
            "property_value" : "60010",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.master.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port the HBase Master should bind to.",
            "property_name" : "hbase.master.port",
            "property_type" : [ ],
            "property_value" : "60000",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.regionserver.global.memstore.lowerLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When memstores are being forced to flush to make room in\n      memory, keep flushing until we hit this mark. Defaults to 35% of heap.\n      This value equal to hbase.regionserver.global.memstore.upperLimit causes\n      the minimum possible flushing to occur when updates are blocked due to\n      memstore limiting.\n    ",
            "property_name" : "hbase.regionserver.global.memstore.lowerLimit",
            "property_type" : [ ],
            "property_value" : "0.38",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.regionserver.global.memstore.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum size of all memstores in a region server before new\n      updates are blocked and flushes are forced. Defaults to 40% of heap.\n      Updates are blocked and flushes are forced until size of all memstores\n      in a region server hits hbase.regionserver.global.memstore.size.lower.limit.\n    ",
            "property_name" : "hbase.regionserver.global.memstore.size",
            "property_type" : [ ],
            "property_value" : "${hbase.regionserver.global.memstore.upperLimit}",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.regionserver.global.memstore.upperLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum size of all memstores in a region server before new\n      updates are blocked and flushes are forced. Defaults to 40% of heap\n    ",
            "property_name" : "hbase.regionserver.global.memstore.upperLimit",
            "property_type" : [ ],
            "property_value" : "0.4",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.regionserver.handler.count",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Count of RPC Listener instances spun up on RegionServers.\n    Same property is used by the Master for count of master handlers.\n    Default is 10.\n    ",
            "property_name" : "hbase.regionserver.handler.count",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.regionserver.info.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port for the HBase RegionServer web UI.",
            "property_name" : "hbase.regionserver.info.port",
            "property_type" : [ ],
            "property_value" : "60030",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.rootdir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The directory shared by region servers and into\n    which HBase persists.  The URL should be 'fully-qualified'\n    to include the filesystem scheme.  For example, to specify the\n    HDFS directory '/hbase' where the HDFS instance's namenode is\n    running at namenode.example.org on port 9000, set this value to:\n    hdfs://namenode.example.org:9000/hbase.  By default HBase writes\n    into /tmp.  Change this configuration else all data will be lost\n    on machine restart.\n    ",
            "property_name" : "hbase.rootdir",
            "property_type" : [ ],
            "property_value" : "hdfs://localhost:8020/apps/hbase/data",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.rpc.protection",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "hbase.rpc.protection",
            "property_type" : [ ],
            "property_value" : "authentication",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.security.authentication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "  Controls whether or not secure authentication is enabled for HBase. Possible values are 'simple'\n      (no authentication), and 'kerberos'.\n    ",
            "property_name" : "hbase.security.authentication",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.security.authorization",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enables HBase authorization. Set the value of this property to false to disable HBase authorization.\n    ",
            "property_name" : "hbase.security.authorization",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.superuser",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "List of users or groups (comma-separated), who are allowed\n    full privileges, regardless of stored ACLs, across the cluster.\n    Only used when HBase security is enabled.\n    ",
            "property_name" : "hbase.superuser",
            "property_type" : [ ],
            "property_value" : "hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.tmp.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Temporary directory on the local filesystem.\n    Change this setting to point to a location more permanent\n    than '/tmp' (The '/tmp' directory is often cleared on\n    machine restart).\n    ",
            "property_name" : "hbase.tmp.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.zookeeper.property.clientPort",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Property from ZooKeeper's config zoo.cfg.\n    The port at which the clients will connect.\n    ",
            "property_name" : "hbase.zookeeper.property.clientPort",
            "property_type" : [ ],
            "property_value" : "2181",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.zookeeper.quorum",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Comma separated list of servers in the ZooKeeper Quorum.\n    For example, \"host1.mydomain.com,host2.mydomain.com,host3.mydomain.com\".\n    By default this is set to localhost for local and pseudo-distributed modes\n    of operation. For a fully-distributed setup, this should be set to a full\n    list of ZooKeeper quorum servers. If HBASE_MANAGES_ZK is set in hbase-env.sh\n    this is the list of servers which we will start/stop ZooKeeper on.\n    ",
            "property_name" : "hbase.zookeeper.quorum",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase.zookeeper.useMulti",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Instructs HBase to make use of ZooKeeper's multi-update functionality.\n    This allows certain ZooKeeper operations to complete more quickly and prevents some issues\n    with rare Replication failure scenarios (see the release note of HBASE-2611 for an example).В·\n    IMPORTANT: only set this to true if all ZooKeeper servers in the cluster are on version 3.4+\n    and will not be downgraded.  ZooKeeper versions before 3.4 do not support multi-update and will\n    not fail gracefully if multi-update is invoked (see ZOOKEEPER-1495).\n    ",
            "property_name" : "hbase.zookeeper.useMulti",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Log Directories for HBase.",
            "property_name" : "hbase_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_master_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase Master Heap Size",
            "property_name" : "hbase_master_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_max_direct_memory_size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If not empty, adds '-XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m' to HBASE_REGIONSERVER_OPTS.",
            "property_name" : "hbase_max_direct_memory_size",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Pid Directory for HBase.",
            "property_name" : "hbase_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_regionserver_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer Heap Size.",
            "property_name" : "hbase_regionserver_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_regionserver_xmn_max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer maximum value for minimum heap size.",
            "property_name" : "hbase_regionserver_xmn_max",
            "property_type" : [ ],
            "property_value" : "512",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_regionserver_xmn_ratio",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase RegionServer minimum heap size is calculated as a percentage of max heap size.",
            "property_name" : "hbase_regionserver_xmn_ratio",
            "property_type" : [ ],
            "property_value" : "0.2",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hbase_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HBase User Name.",
            "property_name" : "hbase_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "hbase",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/hfile.block.cache.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n        Percentage of maximum heap (-Xmx setting) to allocate to block cache\n        used by HFile/StoreFile. Default of 0.25 means allocate 25%.\n        Set to 0 to disable but it's not recommended.\n    ",
            "property_name" : "hfile.block.cache.size",
            "property_type" : [ ],
            "property_value" : "0.40",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/policy_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This user must be system user and also present at Ranger admin portal",
            "property_name" : "policy_user",
            "property_type" : [ ],
            "property_value" : "ambari-qa",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/ranger-hbase-plugin-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable ranger hbase plugin ?",
            "property_name" : "ranger-hbase-plugin-enabled",
            "property_type" : [ ],
            "property_value" : "No",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hbase-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/security.admin.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HMasterInterface protocol implementation (ie. \n    clients talking to HMaster for admin operations).\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.admin.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/security.client.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HRegionInterface protocol implementations (ie. \n    clients talking to HRegionServers)\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.client.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/security.masterregion.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for HMasterRegionInterface protocol implementations\n    (for HRegionServers communicating with HMaster)\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.masterregion.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/zookeeper.session.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper session timeout.\n      HBase passes this to the zk quorum as suggested maximum time for a\n      session (This setting becomes zookeeper's 'maxSessionTimeout').  See\n      http://hadoop.apache.org/zookeeper/docs/current/zookeeperProgrammers.html#ch_zkSessions\n      \"The client sends a requested timeout, the server responds with the\n      timeout that it can give the client. \" In milliseconds.\n    ",
            "property_name" : "zookeeper.session.timeout",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HBASE/configurations/zookeeper.znode.parent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Root ZNode for HBase in ZooKeeper. All of HBase's ZooKeeper\n      files that are configured with a relative path will go under this node.\n      By default, all of HBase's ZooKeeper file path are configured with a\n      relative path, so they will all go under this directory unless changed.\n    ",
            "property_name" : "zookeeper.znode.parent",
            "property_type" : [ ],
            "property_value" : "/hbase-unsecure",
            "service_name" : "HBASE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hbase-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS",
      "StackServices" : {
        "service_name" : "HDFS",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "core-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "hadoop-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hadoop-policy" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "hdfs-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hdfs-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "ranger-hdfs-plugin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/REPOSITORY_CONFIG_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_PASSWORD",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/REPOSITORY_CONFIG_USERNAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_USERNAME",
            "property_type" : [ ],
            "property_value" : "hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/SSL_KEYSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-keystore.jks",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/SSL_KEYSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "myKeyFilePassword",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/SSL_TRUSTSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-truststore.jks",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/SSL_TRUSTSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "changeit",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.DB.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.DB.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.DESTINATION_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINATION_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.DESTINTATION_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FILE",
            "property_type" : [ ],
            "property_value" : "%hostname%-audit.log",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit/archive",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
            "property_type" : [ ],
            "property_value" : "%time:yyyyMMdd-HHmm.ss%.log",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/common.name.for.certificate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "common.name.for.certificate",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN\n    ",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for hadoop-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\"\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Use libraries from standard classpath\nJAVA_JDBC_LIBS=\"\"\n#Add libraries required by mysql connector\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by oracle connector\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by nodemanager\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}\n\n# added to the HADOOP_CLASSPATH\nif [ -d \"/usr/hdp/current/tez-client\" ]; then\n  if [ -d \"/etc/tez/conf/\" ]; then\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/usr/hdp/current/tez-client/*:/usr/hdp/current/tez-client/lib/*:/etc/tez/conf/\n  fi\nfi\n\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\n\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n    ",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.block.access.token.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If \"true\", access tokens are used as capabilities for accessing datanodes.\n      If \"false\", no access tokens are checked on accessing datanodes.\n    ",
            "property_name" : "dfs.block.access.token.enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.blockreport.initialDelay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Delay for first block report in seconds.",
            "property_name" : "dfs.blockreport.initialDelay",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.blocksize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The default block size for new files.",
            "property_name" : "dfs.blocksize",
            "property_type" : [ ],
            "property_value" : "134217728",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.client.read.shortcircuit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This configuration parameter turns on short-circuit local reads.\n    ",
            "property_name" : "dfs.client.read.shortcircuit",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.client.read.shortcircuit.streams.cache.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The DFSClient maintains a cache of recently opened file descriptors. This\n      parameter controls the size of that cache. Setting this higher will use\n      more file descriptors, but potentially provide better performance on\n      workloads involving lots of seeks.\n    ",
            "property_name" : "dfs.client.read.shortcircuit.streams.cache.size",
            "property_type" : [ ],
            "property_value" : "4096",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.cluster.administrators",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for who all can view the default servlets in the HDFS",
            "property_name" : "dfs.cluster.administrators",
            "property_type" : [ ],
            "property_value" : " hdfs",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The datanode server address and port for data transfer.\n    ",
            "property_name" : "dfs.datanode.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:50010",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.balance.bandwidthPerSec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Specifies the maximum amount of bandwidth that each datanode\n      can utilize for the balancing purpose in term of\n      the number of bytes per second.\n    ",
            "property_name" : "dfs.datanode.balance.bandwidthPerSec",
            "property_type" : [ ],
            "property_value" : "6250000",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.data.dir",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "Determines where on the local filesystem an DFS data node\n      should store its blocks.  If this is a comma-delimited\n      list of directories, then data will be stored in all named\n      directories, typically on different devices.\n      Directories that do not exist are ignored.\n    ",
            "property_name" : "dfs.datanode.data.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/hdfs/data",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.data.dir.perm",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The permissions that should be there on dfs.datanode.data.dir\n      directories. The datanode will not come up if the permissions are\n      different on existing dfs.datanode.data.dir directories. If the directories\n      don't exist, they will be created with this permission.",
            "property_name" : "dfs.datanode.data.dir.perm",
            "property_type" : [ ],
            "property_value" : "750",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.du.reserved",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Reserved space in bytes per volume. Always leave this much space free for non dfs use.\n    ",
            "property_name" : "dfs.datanode.du.reserved",
            "property_type" : [ ],
            "property_value" : "1073741824",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.failed.volumes.tolerated",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : " Number of failed disks a DataNode would tolerate before it stops offering service",
            "property_name" : "dfs.datanode.failed.volumes.tolerated",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.http.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The datanode http server address and port.\n    ",
            "property_name" : "dfs.datanode.http.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:50075",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.https.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The datanode https server address and port.\n    ",
            "property_name" : "dfs.datanode.https.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:50475",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.ipc.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The datanode ipc server address and port.\n      If the port is 0 then the server will start on a free port.\n    ",
            "property_name" : "dfs.datanode.ipc.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:8010",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.datanode.max.transfer.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Specifies the maximum number of threads to use for transferring data in and out of the datanode.",
            "property_name" : "dfs.datanode.max.transfer.threads",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.domain.socket.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This is a path to a UNIX domain socket that will be used for communication between the DataNode and local HDFS clients.\n      If the string \"_PORT\" is present in this path, it will be replaced by the TCP port of the DataNode.\n    ",
            "property_name" : "dfs.domain.socket.path",
            "property_type" : [ ],
            "property_value" : "/var/lib/hadoop-hdfs/dn_socket",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.heartbeat.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Determines datanode heartbeat interval in seconds.",
            "property_name" : "dfs.heartbeat.interval",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.hosts.exclude",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Names a file that contains a list of hosts that are\n      not permitted to connect to the namenode.  The full pathname of the\n      file must be specified.  If the value is empty, no hosts are\n      excluded.",
            "property_name" : "dfs.hosts.exclude",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/dfs.exclude",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.http.policy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Decide if HTTPS(SSL) is supported on HDFS This configures the HTTP endpoint for HDFS daemons:\n      The following values are supported: - HTTP_ONLY : Service is provided only on http - HTTPS_ONLY :\n      Service is provided only on https - HTTP_AND_HTTPS : Service is provided both on http and https\n    ",
            "property_name" : "dfs.http.policy",
            "property_type" : [ ],
            "property_value" : "HTTP_ONLY",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.https.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This property is used by HftpFileSystem.\n    ",
            "property_name" : "dfs.https.port",
            "property_type" : [ ],
            "property_value" : "50470",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.journalnode.edits.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path where the JournalNode daemon will store its local state. ",
            "property_name" : "dfs.journalnode.edits.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/hdfs/journalnode",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.journalnode.http-address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The address and port the JournalNode web UI listens on.\n      If the port is 0 then the server will start on a free port. ",
            "property_name" : "dfs.journalnode.http-address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:8480",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.journalnode.https-address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The address and port the JournalNode HTTPS server listens on.\n      If the port is 0 then the server will start on a free port. ",
            "property_name" : "dfs.journalnode.https-address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:8481",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.accesstime.precision",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The access time for HDFS file is precise up to this value.\n      The default value is 1 hour. Setting a value of 0 disables\n      access times for HDFS.\n    ",
            "property_name" : "dfs.namenode.accesstime.precision",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.avoid.read.stale.datanode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Indicate whether or not to avoid reading from stale datanodes whose\n      heartbeat messages have not been received by the namenode for more than a\n      specified time interval.\n    ",
            "property_name" : "dfs.namenode.avoid.read.stale.datanode",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.avoid.write.stale.datanode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Indicate whether or not to avoid writing to stale datanodes whose\n      heartbeat messages have not been received by the namenode for more than a\n      specified time interval.\n    ",
            "property_name" : "dfs.namenode.avoid.write.stale.datanode",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.checkpoint.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Determines where on the local filesystem the DFS secondary\n      name node should store the temporary images to merge.\n      If this is a comma-delimited list of directories then the image is\n      replicated in all of the directories for redundancy.\n    ",
            "property_name" : "dfs.namenode.checkpoint.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/hdfs/namesecondary",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.checkpoint.edits.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Determines where on the local filesystem the DFS secondary\n      name node should store the temporary edits to merge.\n      If this is a comma-delimited list of directoires then teh edits is\n      replicated in all of the directoires for redundancy.\n      Default value is same as dfs.namenode.checkpoint.dir\n    ",
            "property_name" : "dfs.namenode.checkpoint.edits.dir",
            "property_type" : [ ],
            "property_value" : "${dfs.namenode.checkpoint.dir}",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.checkpoint.period",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of seconds between two periodic checkpoints.\n    ",
            "property_name" : "dfs.namenode.checkpoint.period",
            "property_type" : [ ],
            "property_value" : "21600",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.checkpoint.txns",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The Secondary NameNode or CheckpointNode will create a checkpoint\n      of the namespace every 'dfs.namenode.checkpoint.txns' transactions,\n      regardless of whether 'dfs.namenode.checkpoint.period' has expired.\n    ",
            "property_name" : "dfs.namenode.checkpoint.txns",
            "property_type" : [ ],
            "property_value" : "1000000",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.handler.count",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Added to grow Queue size so that more client connections are allowed",
            "property_name" : "dfs.namenode.handler.count",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.http-address",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "The name of the default file system.  Either the\n      literal string \"local\" or a host:port for HDFS.",
            "property_name" : "dfs.namenode.http-address",
            "property_type" : [ ],
            "property_value" : "localhost:50070",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.https-address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The https address where namenode binds",
            "property_name" : "dfs.namenode.https-address",
            "property_type" : [ ],
            "property_value" : "localhost:50470",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.name.dir",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "Determines where on the local filesystem the DFS name node\n      should store the name table.  If this is a comma-delimited list\n      of directories then the name table is replicated in all of the\n      directories, for redundancy. ",
            "property_name" : "dfs.namenode.name.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/hdfs/namenode",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.name.dir.restore",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Set to true to enable NameNode to attempt recovering a previously failed dfs.namenode.name.dir.\n      When enabled, a recovery of any failed directory is attempted during checkpoint.",
            "property_name" : "dfs.namenode.name.dir.restore",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.safemode.threshold-pct",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Specifies the percentage of blocks that should satisfy\n      the minimal replication requirement defined by dfs.namenode.replication.min.\n      Values less than or equal to 0 mean not to start in safe mode.\n      Values greater than 1 will make safe mode permanent.\n    ",
            "property_name" : "dfs.namenode.safemode.threshold-pct",
            "property_type" : [ ],
            "property_value" : "1.0f",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.secondary.http-address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Address of secondary namenode web server",
            "property_name" : "dfs.namenode.secondary.http-address",
            "property_type" : [ ],
            "property_value" : "localhost:50090",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.stale.datanode.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Datanode is stale after not getting a heartbeat in this interval in ms",
            "property_name" : "dfs.namenode.stale.datanode.interval",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.startup.delay.block.deletion.sec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "dfs.namenode.startup.delay.block.deletion.sec",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.namenode.write.stale.datanode.ratio",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When the ratio of number stale datanodes to total datanodes marked is greater\n      than this ratio, stop avoiding writing to stale nodes so as to prevent causing hotspots.\n    ",
            "property_name" : "dfs.namenode.write.stale.datanode.ratio",
            "property_type" : [ ],
            "property_value" : "1.0f",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.permissions.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If \"true\", enable permission checking in HDFS.\n      If \"false\", permission checking is turned off,\n      but all other behavior is unchanged.\n      Switching from one parameter value to the other does not change the mode,\n      owner or group of files or directories.\n    ",
            "property_name" : "dfs.permissions.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.permissions.superusergroup",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The name of the group of super-users.",
            "property_name" : "dfs.permissions.superusergroup",
            "property_type" : [ ],
            "property_value" : "hdfs",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.replication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default block replication.\n    ",
            "property_name" : "dfs.replication",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.replication.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximal block replication.\n    ",
            "property_name" : "dfs.replication.max",
            "property_type" : [ ],
            "property_value" : "50",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.support.append",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "to enable dfs append",
            "property_name" : "dfs.support.append",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dfs.webhdfs.enabled",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "Whether to enable WebHDFS feature",
            "property_name" : "dfs.webhdfs.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/dtnode_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "DataNode maximum Java heap size",
            "property_name" : "dtnode_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/fs.defaultFS",
          "StackConfigurations" : {
            "final" : "true",
            "property_description" : "The name of the default file system.  Either the\n  literal string \"local\" or a host:port for HDFS.",
            "property_name" : "fs.defaultFS",
            "property_type" : [ ],
            "property_value" : "hdfs://localhost:8020",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/fs.permissions.umask-mode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The octal umask used when creating files and directories.\n    ",
            "property_name" : "fs.permissions.umask-mode",
            "property_type" : [ ],
            "property_value" : "022",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hdfs-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/fs.trash.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of minutes between trash checkpoints.\n  If zero, the trash feature is disabled.\n  ",
            "property_name" : "fs.trash.interval",
            "property_type" : [ ],
            "property_value" : "360",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ha.failover-controller.active-standby-elector.zk.op.retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper Failover Controller retries setting for your environment",
            "property_name" : "ha.failover-controller.active-standby-elector.zk.op.retries",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop.http.authentication.simple.anonymous.allowed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hadoop.http.authentication.simple.anonymous.allowed",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop.rpc.protection",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "hadoop.rpc.protection",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop.security.auth_to_local",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The mapping from kerberos principal names to local OS mapreduce.job.user.names.\n  So the default rule is just \"DEFAULT\" which takes all principals in your default domain to their first component.\n  \"omalley@APACHE.ORG\" and \"omalley/admin@APACHE.ORG\" to \"omalley\", if your default domain is APACHE.ORG.\nThe translations rules have 3 sections:\n      base     filter    substitution\nThe base consists of a number that represents the number of components in the principal name excluding the realm and the pattern for building the name from the sections of the principal name. The base uses $0 to mean the realm, $1 to mean the first component and $2 to mean the second component.\n\n[1:$1@$0] translates \"omalley@APACHE.ORG\" to \"omalley@APACHE.ORG\"\n[2:$1] translates \"omalley/admin@APACHE.ORG\" to \"omalley\"\n[2:$1%$2] translates \"omalley/admin@APACHE.ORG\" to \"omalley%admin\"\n\nThe filter is a regex in parens that must the generated string for the rule to apply.\n\n\"(.*%admin)\" will take any string that ends in \"%admin\"\n\"(.*@ACME.COM)\" will take any string that ends in \"@ACME.COM\"\n\nFinally, the substitution is a sed rule to translate a regex into a fixed string.\n\n\"s/@ACME\\.COM//\" removes the first instance of \"@ACME.COM\".\n\"s/@[A-Z]*\\.COM//\" removes the first instance of \"@\" followed by a name followed by \".COM\".\n\"s/X/Y/g\" replaces all of the \"X\" in the name with \"Y\"\n\nSo, if your default realm was APACHE.ORG, but you also wanted to take all principals from ACME.COM that had a single component \"joe@ACME.COM\", you'd do:\n\nRULE:[1:$1@$0](.@ACME.ORG)s/@.//\nDEFAULT\n\nTo also translate the names with a second component, you'd make the rules:\n\nRULE:[1:$1@$0](.@ACME.ORG)s/@.//\nRULE:[2:$1@$0](.@ACME.ORG)s/@.//\nDEFAULT\n\nIf you want to treat all principals from APACHE.ORG with /admin as \"admin\", your rules would look like:\n\nRULE[2:$1%$2@$0](.%admin@APACHE.ORG)s/./admin/\nDEFAULT\n    ",
            "property_name" : "hadoop.security.auth_to_local",
            "property_type" : [ ],
            "property_value" : "\n        DEFAULT\n    ",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop.security.authentication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n   Set the authentication for the cluster. Valid values are: simple or\n   kerberos.\n   ",
            "property_name" : "hadoop.security.authentication",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop.security.authorization",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n     Enable authorization for different protocols.\n  ",
            "property_name" : "hadoop.security.authorization",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hadoop maximum Java heap size",
            "property_name" : "hadoop_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop_pid_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hadoop PID Dir Prefix",
            "property_name" : "hadoop_pid_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/run/hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hadoop_root_logger",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hadoop Root Logger",
            "property_name" : "hadoop_root_logger",
            "property_type" : [ ],
            "property_value" : "INFO,RFA",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hdfs_log_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hadoop Log Dir Prefix",
            "property_name" : "hdfs_log_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/log/hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/hdfs_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "User to run HDFS as",
            "property_name" : "hdfs_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "hdfs",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/io.compression.codecs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A list of the compression codec classes that can be used\n                 for compression/decompression.",
            "property_name" : "io.compression.codecs",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/io.file.buffer.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of buffer for use in sequence files.\n  The size of this buffer should probably be a multiple of hardware\n  page size (4096 on Intel x86), and it determines how much data is\n  buffered during read and write operations.",
            "property_name" : "io.file.buffer.size",
            "property_type" : [ ],
            "property_value" : "131072",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/io.serializations",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " A list of comma-delimited serialization classes that can be used for obtaining serializers and deserializers.\n    ",
            "property_name" : "io.serializations",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.io.serializer.WritableSerialization",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ipc.client.connect.max.retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Defines the maximum number of retries for IPC connections.",
            "property_name" : "ipc.client.connect.max.retries",
            "property_type" : [ ],
            "property_value" : "50",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ipc.client.connection.maxidletime",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum time after which a client will bring down the\n               connection to the server.\n  ",
            "property_name" : "ipc.client.connection.maxidletime",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ipc.client.idlethreshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Defines the threshold number of connections after which\n               connections will be inspected for idleness.\n  ",
            "property_name" : "ipc.client.idlethreshold",
            "property_type" : [ ],
            "property_value" : "8000",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ipc.server.tcpnodelay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Turn on/off Nagle's algorithm for the TCP socket\n      connection on\n      the server. Setting to true disables the algorithm and may\n      decrease latency\n      with a cost of more/smaller packets.\n    ",
            "property_name" : "ipc.server.tcpnodelay",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/mapreduce.jobtracker.webinterface.trusted",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " If set to true, the web interfaces of JT and NN may contain\n                actions, such as kill job, delete file, etc., that should\n                not be exposed to public. Enable this option if the interfaces\n                are only reachable by those who have the right authorization.\n  ",
            "property_name" : "mapreduce.jobtracker.webinterface.trusted",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "core-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/namenode_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "NameNode Java heap size",
            "property_name" : "namenode_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/namenode_opt_maxnewsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "NameNode maximum new generation size",
            "property_name" : "namenode_opt_maxnewsize",
            "property_type" : [ ],
            "property_value" : "200",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/namenode_opt_maxpermsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "NameNode maximum permanent generation size",
            "property_name" : "namenode_opt_maxpermsize",
            "property_type" : [ ],
            "property_value" : "256",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/namenode_opt_newsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "NameNode new generation size",
            "property_name" : "namenode_opt_newsize",
            "property_type" : [ ],
            "property_value" : "200",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/namenode_opt_permsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "NameNode permanent generation size",
            "property_name" : "namenode_opt_permsize",
            "property_type" : [ ],
            "property_value" : "128",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/policy_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This user must be system user and also present at Ranger admin portal",
            "property_name" : "policy_user",
            "property_type" : [ ],
            "property_value" : "ambari-qa",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/proxyuser_group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Proxy user group.",
            "property_name" : "proxyuser_group",
            "property_type" : [
              "GROUP"
            ],
            "property_value" : "users",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/ranger-hdfs-plugin-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable ranger hdfs plugin ?",
            "property_name" : "ranger-hdfs-plugin-enabled",
            "property_type" : [ ],
            "property_value" : "No",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hdfs-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.admin.operations.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for AdminOperationsProtocol. Used for admin commands.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.admin.operations.protocol.acl",
            "property_type" : [ ],
            "property_value" : "hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.client.datanode.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for ClientDatanodeProtocol, the client-to-datanode protocol\n    for block recovery.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.client.datanode.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.client.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for ClientProtocol, which is used by user code\n    via the DistributedFileSystem.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.client.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.datanode.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for DatanodeProtocol, which is used by datanodes to\n    communicate with the namenode.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.datanode.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.inter.datanode.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for InterDatanodeProtocol, the inter-datanode protocol\n    for updating generation timestamp.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.inter.datanode.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.inter.tracker.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for InterTrackerProtocol, used by the tasktrackers to\n    communicate with the jobtracker.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.inter.tracker.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.job.client.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for JobSubmissionProtocol, used by job clients to\n    communciate with the jobtracker for job submission, querying job status etc.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.job.client.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.job.task.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for TaskUmbilicalProtocol, used by the map and reduce\n    tasks to communicate with the parent tasktracker.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.job.task.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.namenode.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for NamenodeProtocol, the protocol used by the secondary\n    namenode to communicate with the namenode.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.namenode.protocol.acl",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.refresh.policy.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for RefreshAuthorizationPolicyProtocol, used by the\n    dfsadmin and mradmin commands to refresh the security policy in-effect.\n    The ACL is a comma-separated list of user and group names. The user and\n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\".\n    A special value of \"*\" means all users are allowed.",
            "property_name" : "security.refresh.policy.protocol.acl",
            "property_type" : [ ],
            "property_value" : "hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HDFS/configurations/security.refresh.usertogroups.mappings.protocol.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL for RefreshUserMappingsProtocol. Used to refresh\n    users mappings. The ACL is a comma-separated list of user and\n    group names. The user and group list is separated by a blank. For\n    e.g. \"alice,bob users,wheel\".  A special value of \"*\" means all\n    users are allowed.",
            "property_name" : "security.refresh.usertogroups.mappings.protocol.acl",
            "property_type" : [ ],
            "property_value" : "hadoop",
            "service_name" : "HDFS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hadoop-policy.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE",
      "StackServices" : {
        "service_name" : "HIVE",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "hcat-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hive-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hive-exec-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hive-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "hive-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "hiveserver2-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "ranger-hive-plugin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "webhcat-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "webhcat-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "webhcat-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/REPOSITORY_CONFIG_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_PASSWORD",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/REPOSITORY_CONFIG_USERNAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_USERNAME",
            "property_type" : [ ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/SSL_KEYSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-keystore.jks",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/SSL_KEYSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "myKeyFilePassword",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/SSL_TRUSTSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-truststore.jks",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/SSL_TRUSTSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "changeit",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/UPDATE_XAPOLICIES_ON_GRANT_REVOKE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "UPDATE_XAPOLICIES_ON_GRANT_REVOKE",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.DB.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.DB.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.DESTINATION_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINATION_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.DESTINTATION_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FILE",
            "property_type" : [ ],
            "property_value" : "%hostname%-audit.log",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit/archive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
            "property_type" : [ ],
            "property_value" : "%time:yyyyMMdd-HHmm.ss%.log",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/ambari.hive.db.schema.name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database name used as the Hive Metastore",
            "property_name" : "ambari.hive.db.schema.name",
            "property_type" : [ ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/common.name.for.certificate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "common.name.for.certificate",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom hive-exec-log4j",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA\n\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-exec-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom webhcat-log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Define some default values that can be overridden by system properties\nwebhcat.root.logger = INFO, standard\nwebhcat.log.dir = .\nwebhcat.log.file = webhcat.log\n\nlog4j.rootLogger = ${webhcat.root.logger}\n\n# Logging Threshold\nlog4j.threshhold = DEBUG\n\nlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern = .yyyy-MM-dd\n\nlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayout\n\nlog4j.appender.standard.layout = org.apache.log4j.PatternLayout\nlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n\n\n# Class logging settings\nlog4j.logger.com.sun.jersey = DEBUG\nlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERROR\nlog4j.logger.org.apache.hadoop = INFO\nlog4j.logger.org.apache.hadoop.conf = WARN\nlog4j.logger.org.apache.zookeeper = WARN\nlog4j.logger.org.eclipse.jetty = INFO\n\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for hcat-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hcat-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for hive-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n if [ \"$SERVICE\" = \"cli\" ]; then\n   if [ -z \"$DEBUG\" ]; then\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n   else\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n   fi\n fi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR={{hive_config_dir}}\n\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  if [ -f \"${HIVE_AUX_JARS_PATH}\" ]; then    \n    export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n  elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n    export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n  fi\nelif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\nfi      \n\nexport METASTORE_PORT={{hive_metastore_port}}\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "webhcat-env.sh content",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME={{hadoop_home}}\n    ",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/datanucleus.cache.level2.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Determines caching mechanism DataNucleus L2 cache will use. It is strongly recommended to use default value of 'none' as other values may cause consistency errors in Hive.",
            "property_name" : "datanucleus.cache.level2.type",
            "property_type" : [ ],
            "property_value" : "none",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hcat_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "WebHCat Log Dir.",
            "property_name" : "hcat_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/webhcat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hcat_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "WebHCat Pid Dir.",
            "property_name" : "hcat_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/webhcat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hcat_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HCat User.",
            "property_name" : "hcat_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "hcat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.auto.convert.join",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether Hive enables the optimization about converting common join into mapjoin based on the input file size",
            "property_name" : "hive.auto.convert.join",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.auto.convert.join.noconditionaltask",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Whether Hive enables the optimization about converting common join into mapjoin based on the input file size.\n      If this parameter is on, and the sum of size for n-1 of the tables/partitions for a n-way join is smaller than the\n      specified size, the join is directly converted to a mapjoin (there is no conditional task).\n    ",
            "property_name" : "hive.auto.convert.join.noconditionaltask",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.auto.convert.join.noconditionaltask.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If hive.auto.convert.join.noconditionaltask is off, this parameter does not take affect. However, if it\n      is on, and the sum of size for n-1 of the tables/partitions for a n-way join is smaller than this size, the join is directly\n      converted to a mapjoin(there is no conditional task). The default is 10MB.\n    ",
            "property_name" : "hive.auto.convert.join.noconditionaltask.size",
            "property_type" : [ ],
            "property_value" : "1000000000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.auto.convert.sortmerge.join",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Will the join be automatically converted to a sort-merge join, if the joined tables pass the criteria for sort-merge join.",
            "property_name" : "hive.auto.convert.sortmerge.join",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.auto.convert.sortmerge.join.to.mapjoin",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If hive.auto.convert.sortmerge.join is set to true, and a join was converted to a sort-merge join,\n      this parameter decides whether each table should be tried as a big table, and effectively a map-join should be\n      tried. That would create a conditional task with n+1 children for a n-way join (1 child for each table as the\n      big table), and the backup task will be the sort-merge join. In some cases, a map-join would be faster than a\n      sort-merge join, if there is no advantage of having the output bucketed and sorted. For example, if a very big sorted\n      and bucketed table with few files (say 10 files) are being joined with a very small sorter and bucketed table\n      with few files (10 files), the sort-merge join will only use 10 mappers, and a simple map-only join might be faster\n      if the complete small table can fit in memory, and a map-join can be performed.\n    ",
            "property_name" : "hive.auto.convert.sortmerge.join.to.mapjoin",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.cbo.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Flag to control enabling Cost Based Optimizations using Calcite framework.",
            "property_name" : "hive.cbo.enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.cli.print.header",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Whether to print the names of the columns in query output.\n    ",
            "property_name" : "hive.cli.print.header",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.cluster.delegation.token.store.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The delegation token store implementation.\n      Set to org.apache.hadoop.hive.thrift.ZooKeeperTokenStore for load-balanced cluster.",
            "property_name" : "hive.cluster.delegation.token.store.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.cluster.delegation.token.store.zookeeper.connectString",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The ZooKeeper token store connect string.",
            "property_name" : "hive.cluster.delegation.token.store.zookeeper.connectString",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.cluster.delegation.token.store.zookeeper.znode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The root path for token store data.",
            "property_name" : "hive.cluster.delegation.token.store.zookeeper.znode",
            "property_type" : [ ],
            "property_value" : "/hive/cluster/delegation",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.abortedtxn.threshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of aborted transactions involving a particular table or partition before major compaction is initiated.",
            "property_name" : "hive.compactor.abortedtxn.threshold",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.check.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.\n      Time between checks to see if any partitions need compacted.\n      This should be kept high because each check for compaction requires many calls against the NameNode.\n    ",
            "property_name" : "hive.compactor.check.interval",
            "property_type" : [ ],
            "property_value" : "300L",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.delta.num.threshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of delta files that must exist in a directory before the compactor will attempt a minor compaction.",
            "property_name" : "hive.compactor.delta.num.threshold",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.delta.pct.threshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Percentage (by size) of base that deltas can be before major compaction is initiated.",
            "property_name" : "hive.compactor.delta.pct.threshold",
            "property_type" : [ ],
            "property_value" : "0.1f",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.initiator.on",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to run the compactor's initiator thread in this metastore instance or not. If there is more than one instance of the thrift metastore this should only be set to true for one of them.",
            "property_name" : "hive.compactor.initiator.on",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.worker.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of compactor worker threads to run on this metastore instance. Can be different values on different metastore instances.",
            "property_name" : "hive.compactor.worker.threads",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compactor.worker.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.\n      Time before a given compaction in working state is declared a failure\n      and returned to the initiated state.\n    ",
            "property_name" : "hive.compactor.worker.timeout",
            "property_type" : [ ],
            "property_value" : "86400L",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.compute.query.using.stats",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When set to true Hive will answer a few queries like count(1) purely using stats\n      stored in metastore. For basic stats collection turn on the config hive.stats.autogather to true.\n      For more advanced stats collection need to run analyze table queries.\n    ",
            "property_name" : "hive.compute.query.using.stats",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.conf.restricted.list",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Comma separated list of configuration options which are immutable at runtime",
            "property_name" : "hive.conf.restricted.list",
            "property_type" : [ ],
            "property_value" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.convert.join.bucket.mapjoin.tez",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Whether joins can be automatically converted to bucket map joins in hive\n      when tez is used as the execution engine.\n    ",
            "property_name" : "hive.convert.join.bucket.mapjoin.tez",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.enforce.bucketing",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether bucketing is enforced. If true, while inserting into the table, bucketing is enforced.",
            "property_name" : "hive.enforce.bucketing",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.enforce.sorting",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether sorting is enforced. If true, while inserting into the table, sorting is enforced.",
            "property_name" : "hive.enforce.sorting",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.enforce.sortmergebucketmapjoin",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If the user asked for sort-merge bucketed map-side join, and it cannot be performed, should the query fail or not ?",
            "property_name" : "hive.enforce.sortmergebucketmapjoin",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.compress.intermediate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This controls whether intermediate files produced by Hive between multiple map-reduce jobs are compressed.\n      The compression codec and other options are determined from Hadoop config variables mapred.output.compress*\n    ",
            "property_name" : "hive.exec.compress.intermediate",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.compress.output",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This controls whether the final outputs of a query (to a local/HDFS file or a Hive table) is compressed.\n      The compression codec and other options are determined from Hadoop config variables mapred.output.compress*\n    ",
            "property_name" : "hive.exec.compress.output",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.dynamic.partition",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether or not to allow dynamic partitions in DML/DDL.",
            "property_name" : "hive.exec.dynamic.partition",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.dynamic.partition.mode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      In strict mode, the user must specify at least one static partition\n      in case the user accidentally overwrites all partitions.\n      NonStrict allows all partitions of a table to be dynamic.\n    ",
            "property_name" : "hive.exec.dynamic.partition.mode",
            "property_type" : [ ],
            "property_value" : "nonstrict",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.failure.hooks",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Comma-separated list of on-failure hooks to be invoked for each statement.\n      An on-failure hook is specified as the name of Java class which implements the\n      org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext interface.\n    ",
            "property_name" : "hive.exec.failure.hooks",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.max.created.files",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of HDFS files created by all mappers/reducers in a MapReduce job.",
            "property_name" : "hive.exec.max.created.files",
            "property_type" : [ ],
            "property_value" : "100000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.max.dynamic.partitions",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of dynamic partitions allowed to be created in total.",
            "property_name" : "hive.exec.max.dynamic.partitions",
            "property_type" : [ ],
            "property_value" : "5000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.max.dynamic.partitions.pernode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of dynamic partitions allowed to be created in each mapper/reducer node.",
            "property_name" : "hive.exec.max.dynamic.partitions.pernode",
            "property_type" : [ ],
            "property_value" : "2000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.orc.compression.strategy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [speed, compression].\n      Define the compression strategy to use while writing data.\n      This changes the compression level of higher level compression codec (like ZLIB).\n    ",
            "property_name" : "hive.exec.orc.compression.strategy",
            "property_type" : [ ],
            "property_value" : "SPEED",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.orc.default.compress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Define the default compression codec for ORC file",
            "property_name" : "hive.exec.orc.default.compress",
            "property_type" : [ ],
            "property_value" : "ZLIB",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.orc.default.stripe.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Define the default ORC stripe size",
            "property_name" : "hive.exec.orc.default.stripe.size",
            "property_type" : [ ],
            "property_value" : "67108864",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.parallel",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to execute jobs in parallel",
            "property_name" : "hive.exec.parallel",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.parallel.thread.number",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How many jobs at most can be executed in parallel",
            "property_name" : "hive.exec.parallel.thread.number",
            "property_type" : [ ],
            "property_value" : "8",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.post.hooks",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Comma-separated list of post-execution hooks to be invoked for each statement.\n      A post-execution hook is specified as the name of a Java class which implements the\n      org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext interface.\n    ",
            "property_name" : "hive.exec.post.hooks",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.pre.hooks",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Comma-separated list of pre-execution hooks to be invoked for each statement.\n      A pre-execution hook is specified as the name of a Java class which implements the\n      org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext interface.\n    ",
            "property_name" : "hive.exec.pre.hooks",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.reducers.bytes.per.reducer",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "size per reducer.The default is 256Mb, i.e if the input size is 1G, it will use 4 reducers.",
            "property_name" : "hive.exec.reducers.bytes.per.reducer",
            "property_type" : [ ],
            "property_value" : "67108864",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.reducers.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      max number of reducers will be used. If the one specified in the configuration parameter mapred.reduce.tasks is\n      negative, Hive will use this one as the max number of reducers when automatically determine number of reducers.\n    ",
            "property_name" : "hive.exec.reducers.max",
            "property_type" : [ ],
            "property_value" : "1009",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.scratchdir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HDFS root scratch dir for Hive jobs which gets created with write all (733) permission. For each connecting user, an HDFS scratch dir: ${hive.exec.scratchdir}/<username> is created, with ${hive.scratch.dir.permission}.",
            "property_name" : "hive.exec.scratchdir",
            "property_type" : [ ],
            "property_value" : "/tmp/hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.submit.local.task.via.child",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Determines whether local tasks (typically mapjoin hashtable generation phase) runs in\n      separate JVM (true recommended) or not.\n      Avoids the overhead of spawning new JVM, but can lead to out-of-memory issues.\n    ",
            "property_name" : "hive.exec.submit.local.task.via.child",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.exec.submitviachild",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.exec.submitviachild",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.execution.engine",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [mr, tez].\n      Chooses execution engine. Options are: mr (Map reduce, default) or tez (hadoop 2 only)\n    ",
            "property_name" : "hive.execution.engine",
            "property_type" : [ ],
            "property_value" : "tez",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.fetch.task.aggr",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Aggregation queries with no group-by clause (for example, select count(*) from src) execute\n      final aggregations in single reduce task. If this is set true, Hive delegates final aggregation\n      stage to fetch task, possibly decreasing the query time.\n    ",
            "property_name" : "hive.fetch.task.aggr",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.fetch.task.conversion",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [none, minimal, more].\n      Some select queries can be converted to single FETCH task minimizing latency.\n      Currently the query should be single sourced not having any subquery and should not have\n      any aggregations or distincts (which incurs RS), lateral views and joins.\n      0. none : disable hive.fetch.task.conversion\n      1. minimal : SELECT STAR, FILTER on partition columns, LIMIT only\n      2. more    : SELECT, FILTER, LIMIT only (support TABLESAMPLE and virtual columns)\n    ",
            "property_name" : "hive.fetch.task.conversion",
            "property_type" : [ ],
            "property_value" : "more",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.fetch.task.conversion.threshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Input threshold for applying hive.fetch.task.conversion. If target table is native, input length\n      is calculated by summation of file lengths. If it's not native, storage handler for the table\n      can optionally implement org.apache.hadoop.hive.ql.metadata.InputEstimator interface.\n    ",
            "property_name" : "hive.fetch.task.conversion.threshold",
            "property_type" : [ ],
            "property_value" : "1073741824",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.limit.optimize.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to enable to optimization to trying a smaller subset of data for simple LIMIT first.",
            "property_name" : "hive.limit.optimize.enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.limit.pushdown.memory.usage",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The max memory to be used for hash in RS operator for top K selection.",
            "property_name" : "hive.limit.pushdown.memory.usage",
            "property_type" : [ ],
            "property_value" : "0.04",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.map.aggr",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to use map-side aggregation in Hive Group By queries",
            "property_name" : "hive.map.aggr",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.map.aggr.hash.force.flush.memory.threshold",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The max memory to be used by map-side group aggregation hash table.\n      If the memory usage is higher than this number, force to flush data\n    ",
            "property_name" : "hive.map.aggr.hash.force.flush.memory.threshold",
            "property_type" : [ ],
            "property_value" : "0.9",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.map.aggr.hash.min.reduction",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Hash aggregation will be turned off if the ratio between hash  table size and input rows is bigger than this number.\n      Set to 1 to make sure hash aggregation is never turned off.\n    ",
            "property_name" : "hive.map.aggr.hash.min.reduction",
            "property_type" : [ ],
            "property_value" : "0.5",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.map.aggr.hash.percentmemory",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Portion of total memory to be used by map-side group aggregation hash table",
            "property_name" : "hive.map.aggr.hash.percentmemory",
            "property_type" : [ ],
            "property_value" : "0.5",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.mapjoin.bucket.cache.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.mapjoin.bucket.cache.size",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.mapjoin.optimized.hashtable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Whether Hive should use memory-optimized hash table for MapJoin. Only works on Tez,\n      because memory-optimized hashtable cannot be serialized.\n    ",
            "property_name" : "hive.mapjoin.optimized.hashtable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.mapred.reduce.tasks.speculative.execution",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether speculative execution for reducers should be turned on. ",
            "property_name" : "hive.mapred.reduce.tasks.speculative.execution",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.mapfiles",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Merge small files at the end of a map-only job",
            "property_name" : "hive.merge.mapfiles",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.mapredfiles",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Merge small files at the end of a map-reduce job",
            "property_name" : "hive.merge.mapredfiles",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.orcfile.stripe.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When hive.merge.mapfiles or hive.merge.mapredfiles is enabled while writing a\n      table with ORC file format, enabling this config will do stripe level fast merge\n      for small ORC files. Note that enabling this config will not honor padding tolerance\n      config (hive.exec.orc.block.padding.tolerance).\n    ",
            "property_name" : "hive.merge.orcfile.stripe.level",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.rcfile.block.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.merge.rcfile.block.level",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.size.per.task",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Size of merged files at the end of the job",
            "property_name" : "hive.merge.size.per.task",
            "property_type" : [ ],
            "property_value" : "256000000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.smallfiles.avgsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When the average output file size of a job is less than this number, Hive will start an additional\n      map-reduce job to merge the output files into bigger files. This is only done for map-only jobs\n      if hive.merge.mapfiles is true, and for map-reduce jobs if hive.merge.mapredfiles is true.\n    ",
            "property_name" : "hive.merge.smallfiles.avgsize",
            "property_type" : [ ],
            "property_value" : "16000000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.merge.tezfiles",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Merge small files at the end of a Tez DAG",
            "property_name" : "hive.merge.tezfiles",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.authorization.storage.checks",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Should the metastore do authorization checks against the underlying storage (usually hdfs)\n      for operations like drop-partition (disallow the drop-partition if the user in\n      question doesn't have permissions to delete the corresponding directory\n      on the storage).\n    ",
            "property_name" : "hive.metastore.authorization.storage.checks",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.cache.pinobjtypes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "List of comma separated metastore object types that should be pinned in the cache",
            "property_name" : "hive.metastore.cache.pinobjtypes",
            "property_type" : [ ],
            "property_value" : "Table,Database,Type,FieldSchema,Order",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.client.connect.retry.delay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.\n      Number of seconds for the client to wait between consecutive connection attempts\n    ",
            "property_name" : "hive.metastore.client.connect.retry.delay",
            "property_type" : [ ],
            "property_value" : "5s",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.client.socket.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.\n      MetaStore Client socket timeout in seconds\n    ",
            "property_name" : "hive.metastore.client.socket.timeout",
            "property_type" : [ ],
            "property_value" : "1800s",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.connect.retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of retries while opening a connection to metastore",
            "property_name" : "hive.metastore.connect.retries",
            "property_type" : [ ],
            "property_value" : "24",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.execute.setugi",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "In unsecure mode, setting this property to true will cause the metastore to execute DFS operations using the client's reported user and group permissions. Note that this property must be set on both the client and     server sides. Further note that its best effort. If client sets its to true and server sets it to false, client setting will be ignored.",
            "property_name" : "hive.metastore.execute.setugi",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.failure.retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of retries upon failure of Thrift metastore calls",
            "property_name" : "hive.metastore.failure.retries",
            "property_type" : [ ],
            "property_value" : "24",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.kerberos.keytab.file",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Kerberos Keytab file containing the metastore Thrift server's service principal.",
            "property_name" : "hive.metastore.kerberos.keytab.file",
            "property_type" : [ ],
            "property_value" : "/etc/security/keytabs/hive.service.keytab",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The service principal for the metastore Thrift server.\n      The special string _HOST will be replaced automatically with the correct host name.\n    ",
            "property_name" : "hive.metastore.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "hive/_HOST@EXAMPLE.COM",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.pre.event.listeners",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "List of comma separated listeners for metastore events.",
            "property_name" : "hive.metastore.pre.event.listeners",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.sasl.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If true, the metastore thrift interface will be secured with SASL.\n     Clients must authenticate with Kerberos.",
            "property_name" : "hive.metastore.sasl.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.server.max.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of worker threads in the Thrift server's pool.",
            "property_name" : "hive.metastore.server.max.threads",
            "property_type" : [ ],
            "property_value" : "100000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.uris",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Thrift URI for the remote metastore. Used by metastore client to connect to remote metastore.",
            "property_name" : "hive.metastore.uris",
            "property_type" : [ ],
            "property_value" : "thrift://localhost:9083",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.metastore.warehouse.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "location of default database for the warehouse",
            "property_name" : "hive.metastore.warehouse.dir",
            "property_type" : [ ],
            "property_value" : "/apps/hive/warehouse",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.bucketmapjoin",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to try bucket mapjoin",
            "property_name" : "hive.optimize.bucketmapjoin",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.bucketmapjoin.sortedmerge",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " If the tables being joined are sorted and bucketized on the join columns, and they have the same number\n    of buckets, a sort-merge join can be performed by setting this parameter as true.\n    ",
            "property_name" : "hive.optimize.bucketmapjoin.sortedmerge",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.constant.propagation",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to enable constant propagation optimizer",
            "property_name" : "hive.optimize.constant.propagation",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.index.filter",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to enable automatic use of indexes",
            "property_name" : "hive.optimize.index.filter",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.metadataonly",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.optimize.metadataonly",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.null.scan",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Dont scan relations which are guaranteed to not generate any rows",
            "property_name" : "hive.optimize.null.scan",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.reducededuplication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Remove extra map-reduce jobs if the data is already clustered by the same key which needs to be used again.\n      This should always be set to true. Since it is a new feature, it has been made configurable.\n    ",
            "property_name" : "hive.optimize.reducededuplication",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.reducededuplication.min.reducer",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Reduce deduplication merges two RSs by moving key/parts/reducer-num of the child RS to parent RS.\n      That means if reducer-num of the child RS is fixed (order by or forced bucketing) and small, it can make very slow, single MR.\n      The optimization will be automatically disabled if number of reducers would be less than specified value.\n    ",
            "property_name" : "hive.optimize.reducededuplication.min.reducer",
            "property_type" : [ ],
            "property_value" : "4",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.optimize.sort.dynamic.partition",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When enabled dynamic partitioning column will be globally sorted.\n      This way we can keep only one record writer open for each partition value\n      in the reducer thereby reducing the memory pressure on reducers.\n    ",
            "property_name" : "hive.optimize.sort.dynamic.partition",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.orc.compute.splits.num.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How many threads orc should use to create splits in parallel.",
            "property_name" : "hive.orc.compute.splits.num.threads",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.orc.splits.include.file.footer",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If turned on splits generated by orc will include metadata about the stripes in the file. This\n      data is read remotely (from the client or HS2 machine) and sent to all the tasks.\n    ",
            "property_name" : "hive.orc.splits.include.file.footer",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.prewarm.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enables container prewarm for Tez (Hadoop 2 only)",
            "property_name" : "hive.prewarm.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.prewarm.numcontainers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Controls the number of containers to prewarm for Tez (Hadoop 2 only)",
            "property_name" : "hive.prewarm.numcontainers",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.authenticator.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      hive client authenticator manager class name. The user defined authenticator should implement\n      interface org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.\n    ",
            "property_name" : "hive.security.authenticator.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.authenticator.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hive client authenticator manager class name. The user-defined authenticator class should implement interface org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.  ",
            "property_name" : "hive.security.authenticator.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hiveserver2-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.authorization.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "enable or disable the Hive client authorization",
            "property_name" : "hive.security.authorization.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.authorization.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The Hive client authorization manager class name. The user defined authorization class should implement\n      interface org.apache.hadoop.hive.ql.security.authorization.HiveAuthorizationProvider.\n    ",
            "property_name" : "hive.security.authorization.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.authorization.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "the hive client authorization manager class name.\n    The user defined authorization class should implement interface org.apache.hadoop.hive.ql.security.authorization.HiveAuthorizationProvider.  ",
            "property_name" : "hive.security.authorization.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hiveserver2-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.metastore.authenticator.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      authenticator manager class name to be used in the metastore for authentication.\n      The user defined authenticator should implement interface org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.\n    ",
            "property_name" : "hive.security.metastore.authenticator.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.metastore.authorization.auth.reads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If this is true, metastore authorizer authorizes read actions on database, table",
            "property_name" : "hive.security.metastore.authorization.auth.reads",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.security.metastore.authorization.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      authorization manager class name to be used in the metastore for authorization.\n      The user defined authorization class should implement interface\n      org.apache.hadoop.hive.ql.security.authorization.HiveMetastoreAuthorizationProvider.\n    ",
            "property_name" : "hive.security.metastore.authorization.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider,org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.allow.user.substitution",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Allow alternate user to be specified as part of HiveServer2 open connection request.",
            "property_name" : "hive.server2.allow.user.substitution",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.authentication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Authentication mode, default NONE. Options are NONE, NOSASL, KERBEROS, LDAP, PAM and CUSTOM",
            "property_name" : "hive.server2.authentication",
            "property_type" : [ ],
            "property_value" : "NONE",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.authentication.spnego.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      keytab file for SPNego principal, optional,\n      typical value would look like /etc/security/keytabs/spnego.service.keytab,\n      This keytab would be used by HiveServer2 when Kerberos security is enabled and\n      HTTP transport mode is used.\n      This needs to be set only if SPNEGO is to be used in authentication.\n      SPNego authentication would be honored only if valid\n      hive.server2.authentication.spnego.principal\n      and\n      hive.server2.authentication.spnego.keytab\n      are specified.\n    ",
            "property_name" : "hive.server2.authentication.spnego.keytab",
            "property_type" : [ ],
            "property_value" : "HTTP/_HOST@EXAMPLE.COM",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.authentication.spnego.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      SPNego service principal, optional,\n      typical value would look like HTTP/_HOST@EXAMPLE.COM\n      SPNego service principal would be used by HiveServer2 when Kerberos security is enabled\n      and HTTP transport mode is used.\n      This needs to be set only if SPNEGO is to be used in authentication.\n    ",
            "property_name" : "hive.server2.authentication.spnego.principal",
            "property_type" : [ ],
            "property_value" : "/etc/security/keytabs/spnego.service.keytab",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.enable.doAs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Setting this property to true will have HiveServer2 execute\n      Hive operations as the user making the calls to it.\n    ",
            "property_name" : "hive.server2.enable.doAs",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.logging.operation.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When true, HS2 will save operation logs",
            "property_name" : "hive.server2.logging.operation.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.logging.operation.log.location",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Top level directory where operation logs are stored if logging functionality is enabled",
            "property_name" : "hive.server2.logging.operation.log.location",
            "property_type" : [ ],
            "property_value" : "${system:java.io.tmpdir}/${system:user.name}/operation_logs",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.support.dynamic.service.discovery",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether HiveServer2 supports dynamic service discovery for its clients.\n      To support this, each instance of HiveServer2 currently uses ZooKeeper to register itself,\n      when it is brought up. JDBC/ODBC clients should use the ZooKeeper ensemble: hive.zookeeper.quorum\n      in their connection string.\n    ",
            "property_name" : "hive.server2.support.dynamic.service.discovery",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.table.type.mapping",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [classic, hive].\n      This setting reflects how HiveServer2 will report the table types for JDBC and other\n      client implementations that retrieve the available tables and supported table types\n      HIVE : Exposes Hive's native table types like MANAGED_TABLE, EXTERNAL_TABLE, VIRTUAL_VIEW\n      CLASSIC : More generic types like TABLE and VIEW\n    ",
            "property_name" : "hive.server2.table.type.mapping",
            "property_type" : [ ],
            "property_value" : "CLASSIC",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.tez.default.queues",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      A list of comma separated values corresponding to YARN queues of the same name.\n      When HiveServer2 is launched in Tez mode, this configuration needs to be set\n      for multiple Tez sessions to run in parallel on the cluster.\n    ",
            "property_name" : "hive.server2.tez.default.queues",
            "property_type" : [ ],
            "property_value" : "default",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.tez.initialize.default.sessions",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This flag is used in HiveServer2 to enable a user to use HiveServer2 without\n      turning on Tez for HiveServer2. The user could potentially want to run queries\n      over Tez without the pool of sessions.\n    ",
            "property_name" : "hive.server2.tez.initialize.default.sessions",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.tez.sessions.per.default.queue",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      A positive integer that determines the number of Tez sessions that should be\n      launched on each of the queues specified by \"hive.server2.tez.default.queues\".\n      Determines the parallelism on each queue.\n    ",
            "property_name" : "hive.server2.tez.sessions.per.default.queue",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.thrift.http.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Path component of URL endpoint when in HTTP mode.",
            "property_name" : "hive.server2.thrift.http.path",
            "property_type" : [ ],
            "property_value" : "cliservice",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.thrift.http.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'http'.",
            "property_name" : "hive.server2.thrift.http.port",
            "property_type" : [ ],
            "property_value" : "10001",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.thrift.max.worker.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of Thrift worker threads",
            "property_name" : "hive.server2.thrift.max.worker.threads",
            "property_type" : [ ],
            "property_value" : "500",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.thrift.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'binary'.",
            "property_name" : "hive.server2.thrift.port",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.thrift.sasl.qop",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [auth, auth-int, auth-conf].\n      Sasl QOP value; Set it to one of following values to enable higher levels of\n      protection for HiveServer2 communication with clients.\n      \"auth\" - authentication only (default)\n      \"auth-int\" - authentication plus integrity protection\n      \"auth-conf\" - authentication plus integrity and confidentiality protection\n      This is applicable only if HiveServer2 is configured to use Kerberos authentication.\n    ",
            "property_name" : "hive.server2.thrift.sasl.qop",
            "property_type" : [ ],
            "property_value" : "auth",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.transport.mode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of [binary, http].\n      Transport mode of HiveServer2.\n    ",
            "property_name" : "hive.server2.transport.mode",
            "property_type" : [ ],
            "property_value" : "binary",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.use.SSL",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.server2.use.SSL",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.server2.zookeeper.namespace",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The parent node in ZooKeeper used by HiveServer2 when supporting dynamic service discovery.",
            "property_name" : "hive.server2.zookeeper.namespace",
            "property_type" : [ ],
            "property_value" : "hiveserver2",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.smbjoin.cache.rows",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How many rows with the same key value should be cached in memory per smb joined table.",
            "property_name" : "hive.smbjoin.cache.rows",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.stats.autogather",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A flag to gather statistics automatically during the INSERT OVERWRITE command.",
            "property_name" : "hive.stats.autogather",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.stats.dbclass",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Expects one of the pattern in [jdbc(:.*), hbase, counter, custom, fs].\n      The storage that stores temporary Hive statistics. Currently, jdbc, hbase, counter and custom type are supported.\n    ",
            "property_name" : "hive.stats.dbclass",
            "property_type" : [ ],
            "property_value" : "fs",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.stats.fetch.column.stats",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Annotation of operator tree with statistics information requires column statistics.\n      Column statistics are fetched from metastore. Fetching column statistics for each needed column\n      can be expensive when the number of columns is high. This flag can be used to disable fetching\n      of column statistics from metastore.\n    ",
            "property_name" : "hive.stats.fetch.column.stats",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.stats.fetch.partition.stats",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Annotation of operator tree with statistics information requires partition level basic\n      statistics like number of rows, data size and file size. Partition statistics are fetched from\n      metastore. Fetching partition statistics for each needed partition can be expensive when the\n      number of partitions is high. This flag can be used to disable fetching of partition statistics\n      from metastore. When this flag is disabled, Hive will make calls to filesystem to get file sizes\n      and will estimate the number of rows from row schema.\n    ",
            "property_name" : "hive.stats.fetch.partition.stats",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.support.concurrency",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Support concurrency and use locks, needed for Transactions. Requires Zookeeper.\n    ",
            "property_name" : "hive.support.concurrency",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.auto.reducer.parallelism",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Turn on Tez' auto reducer parallelism feature. When enabled, Hive will still estimate data sizes\n      and set parallelism estimates. Tez will sample source vertices' output sizes and adjust the estimates at runtime as\n      necessary.\n    ",
            "property_name" : "hive.tez.auto.reducer.parallelism",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.container.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "By default, Tez uses the java options from map tasks. Use this property to override that value.",
            "property_name" : "hive.tez.container.size",
            "property_type" : [ ],
            "property_depended_by": [
              {
                "property_type": "hdfs-site",
                "property_name": "dfs.replication.max"
              }
            ],
            "property_value" : "682",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.cpu.vcores",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "By default Tez will ask for however many cpus map-reduce is configured to use per container. This can be used to overwrite.",
            "property_name" : "hive.tez.cpu.vcores",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.dynamic.partition.pruning",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When dynamic pruning is enabled, joins on partition keys will be processed by sending events from the processing vertices to the tez application master. These events will be used to prune unnecessary partitions.",
            "property_name" : "hive.tez.dynamic.partition.pruning",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.dynamic.partition.pruning.max.data.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum total data size of events in dynamic pruning.",
            "property_name" : "hive.tez.dynamic.partition.pruning.max.data.size",
            "property_type" : [ ],
            "property_value" : "104857600",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.dynamic.partition.pruning.max.event.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum size of events sent by processors in dynamic pruning. If this size is crossed no pruning will take place.",
            "property_name" : "hive.tez.dynamic.partition.pruning.max.event.size",
            "property_type" : [ ],
            "property_value" : "1048576",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.input.format",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The default input format for Tez. Tez groups splits in the Application Master.",
            "property_name" : "hive.tez.input.format",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.io.HiveInputFormat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.java.opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Java command line options for Tez. The -Xmx parameter value is generally 80% of hive.tez.container.size.",
            "property_name" : "hive.tez.java.opts",
            "property_type" : [ ],
            "property_value" : "-server -Xmx545m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.log.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The log level to use for tasks executing as part of the DAG.\n      Used only if hive.tez.java.opts is used to configure Java options.\n    ",
            "property_name" : "hive.tez.log.level",
            "property_type" : [ ],
            "property_value" : "INFO",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.max.partition.factor",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When auto reducer parallelism is enabled this factor will be used to over-partition data in shuffle edges.",
            "property_name" : "hive.tez.max.partition.factor",
            "property_type" : [ ],
            "property_value" : "2.0",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.min.partition.factor",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When auto reducer parallelism is enabled this factor will be used to put a lower limit to the number\n      of reducers that tez specifies.\n    ",
            "property_name" : "hive.tez.min.partition.factor",
            "property_type" : [ ],
            "property_value" : "0.25",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.tez.smb.number.waves",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of waves in which to run the SMB join. Account for cluster being occupied. Ideally should be 1 wave.",
            "property_name" : "hive.tez.smb.number.waves",
            "property_type" : [ ],
            "property_value" : "0.5",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.txn.manager",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "hive.txn.manager",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.txn.max.open.batch",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Maximum number of transactions that can be fetched in one call to open_txns().\n      Increasing this will decrease the number of delta files created when\n      streaming data into Hive.  But it will also increase the number of\n      open transactions at any given time, possibly impacting read performance.\n    ",
            "property_name" : "hive.txn.max.open.batch",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.txn.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time after which transactions are declared aborted if the client has not sent a heartbeat, in seconds.",
            "property_name" : "hive.txn.timeout",
            "property_type" : [ ],
            "property_value" : "300",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.user.install.directory",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If hive (in tez mode only) cannot find a usable hive jar in \"hive.jar.directory\",\n      it will upload the hive jar to \"hive.user.install.directory/user.name\"\n      and use it to run queries.\n    ",
            "property_name" : "hive.user.install.directory",
            "property_type" : [ ],
            "property_value" : "/user/",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.vectorized.execution.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This flag should be set to true to enable vectorized mode of query execution.\n      The default value is false.\n    ",
            "property_name" : "hive.vectorized.execution.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.vectorized.execution.reduce.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This flag should be set to true to enable vectorized mode of the reduce-side of query execution.\n      The default value is true.\n    ",
            "property_name" : "hive.vectorized.execution.reduce.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.vectorized.groupby.checkinterval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of entries added to the group by aggregation hash before a recomputation of average entry size is performed.",
            "property_name" : "hive.vectorized.groupby.checkinterval",
            "property_type" : [ ],
            "property_value" : "4096",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.vectorized.groupby.flush.percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Percent of entries in the group by aggregation hash flushed when the memory threshold is exceeded.",
            "property_name" : "hive.vectorized.groupby.flush.percent",
            "property_type" : [ ],
            "property_value" : "0.1",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.vectorized.groupby.maxentries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Max number of entries in the vector group by aggregation hashtables.\n      Exceeding this will trigger a flush irrelevant of memory pressure condition.\n    ",
            "property_name" : "hive.vectorized.groupby.maxentries",
            "property_type" : [ ],
            "property_value" : "100000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.zookeeper.client.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port of ZooKeeper servers to talk to. If the list of Zookeeper servers specified in hive.zookeeper.quorum,does not contain port numbers, this value is used.",
            "property_name" : "hive.zookeeper.client.port",
            "property_type" : [ ],
            "property_value" : "2181",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.zookeeper.namespace",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The parent node under which all ZooKeeper nodes are created.",
            "property_name" : "hive.zookeeper.namespace",
            "property_type" : [ ],
            "property_value" : "hive_zookeeper_namespace",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive.zookeeper.quorum",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "List of ZooKeeper servers to talk to. This is needed for: 1.\n      Read/write locks - when hive.lock.manager is set to\n      org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager,\n      2. When HiveServer2 supports service discovery via Zookeeper.",
            "property_name" : "hive.zookeeper.quorum",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_ambari_database",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database type.",
            "property_name" : "hive_ambari_database",
            "property_type" : [ ],
            "property_value" : "MySQL",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_database",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Property that determines whether the HIVE DB is managed by Ambari.\n    ",
            "property_name" : "hive_database",
            "property_type" : [ ],
            "property_value" : "New MySQL Database",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_database_name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database name.",
            "property_name" : "hive_database_name",
            "property_type" : [ ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_database_type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default HIVE DB type.",
            "property_name" : "hive_database_type",
            "property_type" : [ ],
            "property_value" : "mysql",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_dbroot",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hive DB Directory.",
            "property_name" : "hive_dbroot",
            "property_type" : [ ],
            "property_value" : "/usr/lib/hive/lib/",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory for Hive Log files.",
            "property_name" : "hive_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hive PID Dir.",
            "property_name" : "hive_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/hive_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Hive User.",
            "property_name" : "hive_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/javax.jdo.option.ConnectionDriverName",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Driver class name for a JDBC metastore",
            "property_name" : "javax.jdo.option.ConnectionDriverName",
            "property_type" : [ ],
            "property_value" : "com.mysql.jdbc.Driver",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/javax.jdo.option.ConnectionPassword",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "password to use against metastore database",
            "property_name" : "javax.jdo.option.ConnectionPassword",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/javax.jdo.option.ConnectionURL",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "JDBC connect string for a JDBC metastore",
            "property_name" : "javax.jdo.option.ConnectionURL",
            "property_type" : [ ],
            "property_value" : "jdbc:mysql://localhost/hive?createDatabaseIfNotExist=true",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/javax.jdo.option.ConnectionUserName",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Username to use against metastore database",
            "property_name" : "javax.jdo.option.ConnectionUserName",
            "property_type" : [ ],
            "property_value" : "hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/jdbc.driverClassName",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "jdbc.driverClassName",
            "property_type" : [ ],
            "property_value" : "org.apache.hive.jdbc.HiveDriver",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/policy_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This user must be system user and also present at Ranger admin portal",
            "property_name" : "policy_user",
            "property_type" : [ ],
            "property_value" : "ambari-qa",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/ranger-hive-plugin-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable ranger hive plugin ?",
            "property_name" : "ranger-hive-plugin-enabled",
            "property_type" : [ ],
            "property_value" : "No",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-hive-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.exec.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time out for templeton api",
            "property_name" : "templeton.exec.timeout",
            "property_type" : [ ],
            "property_value" : "60000",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hadoop",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Hadoop executable.",
            "property_name" : "templeton.hadoop",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/current/hadoop-client/bin/hadoop",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hadoop.conf.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Hadoop configuration.",
            "property_name" : "templeton.hadoop.conf.dir",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hcat",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the hcatalog executable.",
            "property_name" : "templeton.hcat",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/current/hive-client/bin/hcat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hcat.home",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the HCat home within the tar. Has no effect if templeton.hive.archive is not set.",
            "property_name" : "templeton.hcat.home",
            "property_type" : [ ],
            "property_value" : "hive.tar.gz/hive/hcatalog",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hive.archive",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Hive archive.",
            "property_name" : "templeton.hive.archive",
            "property_type" : [ ],
            "property_value" : "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hive.home",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Hive home within the tar. Has no effect if templeton.hive.archive is not set.",
            "property_name" : "templeton.hive.home",
            "property_type" : [ ],
            "property_value" : "hive.tar.gz/hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hive.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Hive executable.",
            "property_name" : "templeton.hive.path",
            "property_type" : [ ],
            "property_value" : "hive.tar.gz/hive/bin/hive",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.hive.properties",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Properties to set when running hive.",
            "property_name" : "templeton.hive.properties",
            "property_type" : [ ],
            "property_value" : "hive.metastore.local=false,hive.metastore.uris=thrift://localhost:9083,hive.metastore.sasl.enabled=false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.jar",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Templeton jar file.",
            "property_name" : "templeton.jar",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/current/hive-webhcat/share/webhcat/svr/lib/hive-webhcat-*.jar",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.libjars",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Jars to add the the classpath.",
            "property_name" : "templeton.libjars",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/current/zookeeper-client/zookeeper.jar",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.override.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable the override path in templeton.override.jars",
            "property_name" : "templeton.override.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.pig.archive",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Pig archive in HDFS.",
            "property_name" : "templeton.pig.archive",
            "property_type" : [ ],
            "property_value" : "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.pig.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Pig executable.",
            "property_name" : "templeton.pig.path",
            "property_type" : [ ],
            "property_value" : "pig.tar.gz/pig/bin/pig",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The HTTP port for the main server.",
            "property_name" : "templeton.port",
            "property_type" : [ ],
            "property_value" : "50111",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.sqoop.archive",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Sqoop archive in HDFS.",
            "property_name" : "templeton.sqoop.archive",
            "property_type" : [ ],
            "property_value" : "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.sqoop.home",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Sqoop home within the tar. Has no effect if\n      templeton.sqoop.archive is not set.\n    ",
            "property_name" : "templeton.sqoop.home",
            "property_type" : [ ],
            "property_value" : "sqoop.tar.gz/sqoop",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.sqoop.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to the Sqoop executable.",
            "property_name" : "templeton.sqoop.path",
            "property_type" : [ ],
            "property_value" : "sqoop.tar.gz/sqoop/bin/sqoop",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.storage.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The class to use as storage",
            "property_name" : "templeton.storage.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.streaming.jar",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The hdfs path to the Hadoop streaming jar file.",
            "property_name" : "templeton.streaming.jar",
            "property_type" : [ ],
            "property_value" : "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/templeton.zookeeper.hosts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper servers, as comma separated host:port pairs",
            "property_name" : "templeton.zookeeper.hosts",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "webhcat-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/HIVE/configurations/webhcat_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "WebHCat User.",
            "property_name" : "webhcat_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "hcat",
            "service_name" : "HIVE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "hive-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA",
      "StackServices" : {
        "service_name" : "KAFKA",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "kafka-broker" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "kafka-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "kafka-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/auto.create.topics.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enable auto creation of topic on the server. If this is set to true then attempts to produce, consume, or fetch metadata for a non-existent topic will automatically create it with the default replication factor and number of partitions.\n    ",
            "property_name" : "auto.create.topics.enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\nkafka.logs.dir=logs\n\nlog4j.rootLogger=INFO, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\n# Turn on all our debugging info\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\nlog4j.additivity.kafka.network.RequestChannel$=false\n\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\n#log4j.additivity.kafka.server.KafkaApis=false\nlog4j.logger.kafka.request.logger=WARN, requestAppender\nlog4j.additivity.kafka.request.logger=false\n\nlog4j.logger.kafka.controller=TRACE, controllerAppender\nlog4j.additivity.kafka.controller=false\n\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\nlog4j.additivity.kafka.log.LogCleaner=false\n\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\nlog4j.additivity.state.change.logger=false\n\n   ",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for kafka-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{kafka_pid_dir}}\nexport LOG_DIR={{kafka_log_dir}}\n\n# Add kafka sink to classpath and related depenencies\nif [ -e \"/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\" ]; then\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/lib/*\nfi\n    ",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/controlled.shutdown.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable controlled shutdown of the broker. If enabled, the broker will move all leaders on it to some other brokers before shutting itself down. This reduces the unavailability window during shutdown.",
            "property_name" : "controlled.shutdown.enable",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/controlled.shutdown.max.retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of retries to complete the controlled shutdown successfully before executing an unclean shutdown.",
            "property_name" : "controlled.shutdown.max.retries",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/controlled.shutdown.retry.backoff.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Backoff time between shutdown retries.\n    ",
            "property_name" : "controlled.shutdown.retry.backoff.ms",
            "property_type" : [ ],
            "property_value" : "5000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/controller.message.queue.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The buffer size for controller-to-broker-channels",
            "property_name" : "controller.message.queue.size",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/controller.socket.timeout.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "controller.socket.timeout.ms",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/default.replication.factor",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The default replication factor for automatically created topics.",
            "property_name" : "default.replication.factor",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/fetch.purgatory.purge.interval.requests",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The purge interval (in number of requests) of the fetch request purgatory.",
            "property_name" : "fetch.purgatory.purge.interval.requests",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.ganglia.metrics.group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ganglia group name ",
            "property_name" : "kafka.ganglia.metrics.group",
            "property_type" : [ ],
            "property_value" : "kafka",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.ganglia.metrics.host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " Ganglia host ",
            "property_name" : "kafka.ganglia.metrics.host",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.ganglia.metrics.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " Ganglia port ",
            "property_name" : "kafka.ganglia.metrics.port",
            "property_type" : [ ],
            "property_value" : "8671",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.ganglia.metrics.reporter.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      kafka ganglia metrics reporter enable\n    ",
            "property_name" : "kafka.ganglia.metrics.reporter.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.metrics.reporters",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      kafka ganglia metrics reporter and kafka timeline metrics reporter\n    ",
            "property_name" : "kafka.metrics.reporters",
            "property_type" : [ ],
            "property_value" : "{{kafka_metrics_reporters}}",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.timeline.metrics.hosts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Timeline host",
            "property_name" : "kafka.timeline.metrics.hosts",
            "property_type" : [ ],
            "property_value" : "{{metric_collector_hosts}}",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.timeline.metrics.maxRowCacheSize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Timeline metrics reporter send interval",
            "property_name" : "kafka.timeline.metrics.maxRowCacheSize",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.timeline.metrics.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Timeline port",
            "property_name" : "kafka.timeline.metrics.port",
            "property_type" : [ ],
            "property_value" : "{{metric_collector_port}}",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.timeline.metrics.reporter.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Kafka timeline metrics reporter enable",
            "property_name" : "kafka.timeline.metrics.reporter.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka.timeline.metrics.reporter.sendInterval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Timeline metrics reporter send interval",
            "property_name" : "kafka.timeline.metrics.reporter.sendInterval",
            "property_type" : [ ],
            "property_value" : "5900",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "kafka_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/kafka",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "kafka_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/kafka",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/kafka_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "kafka_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "kafka",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.cleanup.interval.mins",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The frequency in minutes that the log cleaner checks whether any log segment is eligible for deletion to meet the retention policies.\n    ",
            "property_name" : "log.cleanup.interval.mins",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.dirs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      A comma-separated list of one or more directories in which Kafka data is stored.\n      Each new partition that is created will be placed in the directory which currently has the fewest partitions.\n    ",
            "property_name" : "log.dirs",
            "property_type" : [ ],
            "property_value" : "/kafka-logs",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.flush.interval.messages",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of messages written to a log partition before we force an fsync on the log. Setting this higher will improve performance a lot but will increase the window of data at risk in the event of a crash (though that is usually best addressed through replication). If both this setting and log.flush.interval.ms are both used the log will be flushed when either criteria is met.\n    ",
            "property_name" : "log.flush.interval.messages",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.flush.interval.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum time between fsync calls on the log. If used in conjuction with log.flush.interval.messages the log will be flushed when either criteria is met.\n    ",
            "property_name" : "log.flush.interval.ms",
            "property_type" : [ ],
            "property_value" : "3000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.flush.scheduler.interval.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The frequency in ms that the log flusher checks whether any log is eligible to be flushed to disk.\n    ",
            "property_name" : "log.flush.scheduler.interval.ms",
            "property_type" : [ ],
            "property_value" : "3000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.index.interval.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The byte interval at which we add an entry to the offset index. When executing a fetch request the server must do a linear scan for up to this many bytes to find the correct position in the log to begin and end the fetch. So setting this value to be larger will mean larger index files (and a bit more memory usage) but less scanning. However the server will never add more than one index entry per log append (even if more than log.index.interval worth of messages are appended). In general you probably don't need to mess with this value.\n    ",
            "property_name" : "log.index.interval.bytes",
            "property_type" : [ ],
            "property_value" : "4096",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.index.size.max.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum size in bytes we allow for the offset index for each log segment. Note that we will always pre-allocate a\n      sparse file with this much space and shrink it down when the log rolls. If the index fills up we will roll a new log segment\n      even if we haven't reached the log.segment.bytes limit.\n    ",
            "property_name" : "log.index.size.max.bytes",
            "property_type" : [ ],
            "property_value" : "10485760",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.retention.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The amount of data to retain in the log for each topic-partitions. Note that this is the limit per-partition so multiply by the number of partitions to get the total data retained for the topic. Also note that if both log.retention.hours and log.retention.bytes are both set we delete a segment when either limit is exceeded.\n    ",
            "property_name" : "log.retention.bytes",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.retention.hours",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of hours to keep a log segment before it is deleted, i.e. the default data retention window for all topics. Note that if both log.retention.hours and log.retention.bytes are both set we delete a segment when either limit is exceeded.\n    ",
            "property_name" : "log.retention.hours",
            "property_type" : [ ],
            "property_value" : "168",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.roll.hours",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This setting will force Kafka to roll a new log segment even if the log.segment.bytes size has not been reached.\n    ",
            "property_name" : "log.roll.hours",
            "property_type" : [ ],
            "property_value" : "168",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/log.segment.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum request size the server will allow.\n      This prevents the server from running out of memory and should be smaller than the Java heap size.\n    ",
            "property_name" : "log.segment.bytes",
            "property_type" : [ ],
            "property_value" : "1073741824",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/message.max.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum size of a message that the server can receive.\n      It is important that this property be in sync with the maximum fetch size your consumers use or\n      else an unruly producer will be able to publish messages too large for consumers to consume.\n    ",
            "property_name" : "message.max.bytes",
            "property_type" : [ ],
            "property_value" : "1000000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/num.io.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of I/O threads that the server uses for executing requests. You should have at least as many threads as you have disks.\n    ",
            "property_name" : "num.io.threads",
            "property_type" : [ ],
            "property_value" : "8",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/num.network.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of network threads that the server uses for handling network requests.\n      You probably don't need to change this.\n    ",
            "property_name" : "num.network.threads",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/num.partitions",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n        The default number of partitions per topic.\n    ",
            "property_name" : "num.partitions",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/num.replica.fetchers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Number of threads used to replicate messages from leaders. Increasing this value can increase the degree of I/O parallelism in the follower broker.\n    ",
            "property_name" : "num.replica.fetchers",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The port on which the server accepts client connections.\n    ",
            "property_name" : "port",
            "property_type" : [ ],
            "property_value" : "6667",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/producer.purgatory.purge.interval.requests",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The purge interval (in number of requests) of the producer request purgatory.",
            "property_name" : "producer.purgatory.purge.interval.requests",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/queued.max.requests",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of requests that can be queued up for processing by the I/O threads before the network threads stop reading in new requests.",
            "property_name" : "queued.max.requests",
            "property_type" : [ ],
            "property_value" : "500",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.fetch.max.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of byes of messages to attempt to fetch for each partition in the fetch requests the replicas send to the leader.",
            "property_name" : "replica.fetch.max.bytes",
            "property_type" : [ ],
            "property_value" : "1048576",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.fetch.min.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Minimum bytes expected for each fetch response for the fetch requests from the replica to the leader. If not enough bytes, wait up to replica.fetch.wait.max.ms for this many bytes to arrive.\n    ",
            "property_name" : "replica.fetch.min.bytes",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.fetch.wait.max.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time to wait time for data to arrive on the leader in the fetch requests sent by the replicas to the leader.",
            "property_name" : "replica.fetch.wait.max.ms",
            "property_type" : [ ],
            "property_value" : "500",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.high.watermark.checkpoint.interval.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The frequency with which each replica saves its high watermark to disk to handle recovery.",
            "property_name" : "replica.high.watermark.checkpoint.interval.ms",
            "property_type" : [ ],
            "property_value" : "5000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.lag.max.messages",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If a replica falls more than this many messages behind the leader, the leader will remove the follower from ISR and treat it as dead.\n    ",
            "property_name" : "replica.lag.max.messages",
            "property_type" : [ ],
            "property_value" : "4000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.lag.time.max.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If a follower hasn't sent any fetch requests for this window of time, the leader will remove the follower from ISR (in-sync replicas) and treat it as dead.",
            "property_name" : "replica.lag.time.max.ms",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.socket.receive.buffer.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The socket receive buffer for network requests to the leader for replicating data.",
            "property_name" : "replica.socket.receive.buffer.bytes",
            "property_type" : [ ],
            "property_value" : "65536",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/replica.socket.timeout.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The socket timeout for network requests to the leader for replicating data.",
            "property_name" : "replica.socket.timeout.ms",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/socket.receive.buffer.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The SO_RCVBUFF buffer the server prefers for socket connections.\n    ",
            "property_name" : "socket.receive.buffer.bytes",
            "property_type" : [ ],
            "property_value" : "102400",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/socket.request.max.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum request size the server will allow. This prevents the server from running out of memory and should be smaller than the Java heap size.\n    ",
            "property_name" : "socket.request.max.bytes",
            "property_type" : [ ],
            "property_value" : "104857600",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/socket.send.buffer.bytes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The SO_SNDBUFF buffer the server prefers for socket connections.\n    ",
            "property_name" : "socket.send.buffer.bytes",
            "property_type" : [ ],
            "property_value" : "102400",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/zookeeper.connect",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Zookeeper also allows you to add a \"chroot\" path which will make all kafka data for this cluster appear under a particular path.\n      This is a way to setup multiple Kafka clusters or other applications on the same zookeeper cluster. To do this give a connection\n      string in the form hostname1:port1,hostname2:port2,hostname3:port3/chroot/path which would put all this cluster's data under the\n      path /chroot/path. Note that you must create this path yourself prior to starting the broker and consumers must use the\n      same connection string.\n    ",
            "property_name" : "zookeeper.connect",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/zookeeper.connection.timeout.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time that the client waits to establish a connection to zookeeper.",
            "property_name" : "zookeeper.connection.timeout.ms",
            "property_type" : [ ],
            "property_value" : "6000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/zookeeper.session.timeout.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Zookeeper session timeout. If the server fails to heartbeat to zookeeper within this period of time it is considered dead. If you set this too low the server may be falsely considered dead; if you set it too high it may take too long to recognize a truly dead server.",
            "property_name" : "zookeeper.session.timeout.ms",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KAFKA/configurations/zookeeper.sync.time.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How far a ZK follower can be behind a ZK leader.",
            "property_name" : "zookeeper.sync.time.ms",
            "property_type" : [ ],
            "property_value" : "2000",
            "service_name" : "KAFKA",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kafka-broker.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS",
      "StackServices" : {
        "service_name" : "KERBEROS",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "kerberos-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "krb5-conf" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/admin_server_host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The IP address or FQDN for the KDC Kerberos administrative host. Optionally a port number may be included.\n    ",
            "property_name" : "admin_server_host",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/conf_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The krb5.conf configuration directory",
            "property_name" : "conf_dir",
            "property_type" : [ ],
            "property_value" : "/etc",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "krb5-conf.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/container_dn",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The distinguished name (DN) of the container used store service principals\n    ",
            "property_name" : "container_dn",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Customizable krb5.conf template (Jinja template engine)",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n[libdefaults]\n  renew_lifetime = 7d\n  forwardable = true\n  default_realm = {{realm}}\n  ticket_lifetime = 24h\n  dns_lookup_realm = false\n  dns_lookup_kdc = false\n  #default_tgs_enctypes = {{encryption_types}}\n  #default_tkt_enctypes = {{encryption_types}}\n{% if domains %}\n[domain_realm]\n{%- for domain in domains.split(',') %}\n  {{domain|trim()}} = {{realm}}\n{%- endfor %}\n{% endif %}\n[logging]\n  default = FILE:/var/log/krb5kdc.log\n  admin_server = FILE:/var/log/kadmind.log\n  kdc = FILE:/var/log/krb5kdc.log\n\n[realms]\n  {{realm}} = {\n{%- if kdc_hosts > 0 -%}\n{%- set kdc_host_list = kdc_hosts.split(',')  -%}\n{%- if kdc_host_list and kdc_host_list|length > 0 %}\n    admin_server = {{admin_server_host|default(kdc_host_list[0]|trim(), True)}}\n{%- if kdc_host_list -%}\n{% for kdc_host in kdc_host_list %}\n    kdc = {{kdc_host|trim()}}\n{%- endfor -%}\n{% endif %}\n{%- endif %}\n{%- endif %}\n  }\n\n{# Append additional realm declarations below #}\n    ",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "krb5-conf.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/ad_create_attributes_template",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      A Velocity template to use to generate a JSON-formatted document containing the set of\n      attribute names and values needed to create a new Kerberos identity in the relevant\n      Active Directory.\n      Variables include:\n      principal_name, principal_primary, principal_instance, realm, realm_lowercase,\n      normalized_principal, principal digest, password, is_service, container_dn\n    ",
            "property_name" : "ad_create_attributes_template",
            "property_type" : [ ],
            "property_value" : "\n{\n  \"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\n  \"cn\": \"$principal_name\",\n  #if( $is_service )\n  \"servicePrincipalName\": \"$principal_name\",\n  #end\n  \"userPrincipalName\": \"$normalized_principal\",\n  \"unicodePwd\": \"$password\",\n  \"accountExpires\": \"0\",\n  \"userAccountControl\": \"66048\"\n}\n    ",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/domains",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      A comma-separated list of domain names used to map server host names to the Realm name (e.g. .example.com,example.com). This is optional\n    ",
            "property_name" : "domains",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "krb5-conf.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/encryption_types",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The supported list of session key encryption types that should be returned by the KDC.\n    ",
            "property_name" : "encryption_types",
            "property_type" : [ ],
            "property_value" : "aes des3-cbc-sha1 rc4 des-cbc-md5",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/kdc_hosts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n            A comma-delimited list of IP addresses or FQDNs declaring the KDC hosts. Optionally a port number may be included in each entry by separating each host and port by a colon (:). Example:  kdc1.example.com:88, kdc2.example.com:88.\n",
            "property_name" : "kdc_hosts",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/kdc_type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The type of KDC being used. Either mit-kdc or active-directory\n    ",
            "property_name" : "kdc_type",
            "property_type" : [ ],
            "property_value" : "mit-kdc",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/ldap_url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The URL to the Active Directory LDAP Interface\n    ",
            "property_name" : "ldap_url",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/manage_krb5_conf",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Indicates whether your krb5.conf file should be managed by the wizard or should you manage it yourself\n    ",
            "property_name" : "manage_krb5_conf",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "krb5-conf.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KERBEROS/configurations/realm",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The default realm to use when creating service principals\n    ",
            "property_name" : "realm",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "KERBEROS",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "kerberos-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX",
      "StackServices" : {
        "service_name" : "KNOX",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "gateway-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "gateway-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "knox-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ldap-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ranger-knox-plugin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "topology" : {
            "supports" : {
              "adding_forbidden" : "true",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "users-ldif" : {
            "supports" : {
              "adding_forbidden" : "true",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/KNOX_HOME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "KNOX_HOME",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/current/knox-server",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/REPOSITORY_CONFIG_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_PASSWORD",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "admin-password",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/REPOSITORY_CONFIG_USERNAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_USERNAME",
            "property_type" : [ ],
            "property_value" : "admin",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/SSL_KEYSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-keystore.jks",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/SSL_KEYSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "myKeyFilePassword",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/SSL_TRUSTSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-truststore.jks",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/SSL_TRUSTSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "changeit",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.DB.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.DB.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.DESTINATION_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINATION_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.DESTINTATION_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FILE",
            "property_type" : [ ],
            "property_value" : "%hostname%-audit.log",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit/archive",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
            "property_type" : [ ],
            "property_value" : "%time:yyyyMMdd-HHmm.ss%.log",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/common.name.for.certificate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "common.name.for.certificate",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n            content for users-ldif file for the demo LDAP that comes with Knox.\n        ",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: 1\n\n# Please replace with site specific values\ndn: dc=hadoop,dc=apache,dc=org\nobjectclass: organization\nobjectclass: dcObject\no: Hadoop\ndc: hadoop\n\n# Entry for a sample people container\n# Please replace with site specific values\ndn: ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: people\n\n# Entry for a sample end user\n# Please replace with site specific values\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Guest\nsn: User\nuid: guest\nuserPassword:guest-password\n\n# entry for sample user admin\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Admin\nsn: Admin\nuid: admin\nuserPassword:admin-password\n\n# entry for sample user sam\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: sam\nsn: sam\nuid: sam\nuserPassword:sam-password\n\n# entry for sample user tom\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: tom\nsn: tom\nuid: tom\nuserPassword:tom-password\n\n# create FIRST Level groups branch\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: groups\ndescription: generic groups branch\n\n# create the analyst group under groups\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: analyst\ndescription:analyst  group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\n\n\n# create the scientist group under groups\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: scientist\ndescription: scientist group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\n\n        ",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "users-ldif.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n        The configuration specifies the Hadoop cluster services Knox will provide access to.\n    ",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n        <topology>\n\n            <gateway>\n\n                <provider>\n                    <role>authentication</role>\n                    <name>ShiroProvider</name>\n                    <enabled>true</enabled>\n                    <param>\n                        <name>sessionTimeout</name>\n                        <value>30</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm</name>\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.userDnTemplate</name>\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.url</name>\n                        <value>ldap://{{knox_host_name}}:33389</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                        <value>simple</value>\n                    </param>\n                    <param>\n                        <name>urls./**</name>\n                        <value>authcBasic</value>\n                    </param>\n                </provider>\n\n                <provider>\n                    <role>identity-assertion</role>\n                    <name>Default</name>\n                    <enabled>true</enabled>\n                </provider>\n\n                <provider>\n                    <role>authorization</role>\n                    <name>AclsAuthz</name>\n                    <enabled>true</enabled>\n                </provider>\n\n            </gateway>\n\n            <service>\n                <role>NAMENODE</role>\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>JOBTRACKER</role>\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>WEBHDFS</role>\n                <url>http://{{namenode_host}}:{{namenode_http_port}}/webhdfs</url>\n            </service>\n\n            <service>\n                <role>WEBHCAT</role>\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\n            </service>\n\n            <service>\n                <role>OOZIE</role>\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\n            </service>\n\n            <service>\n                <role>WEBHBASE</role>\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\n            </service>\n\n            <service>\n                <role>HIVE</role>\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\n            </service>\n\n            <service>\n                <role>RESOURCEMANAGER</role>\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\n            </service>\n        </topology>\n    ",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "topology.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      content for log4j.properties file for Knox.\n    ",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      app.log.dir=${launcher.dir}/../logs\n      app.log.file=${launcher.name}.log\n      app.audit.file=${launcher.name}-audit.log\n\n      log4j.rootLogger=ERROR, drfa\n\n      log4j.logger.org.apache.hadoop.gateway=INFO\n      #log4j.logger.org.apache.hadoop.gateway=DEBUG\n\n      #log4j.logger.org.eclipse.jetty=DEBUG\n      #log4j.logger.org.apache.shiro=DEBUG\n      #log4j.logger.org.apache.http=DEBUG\n      #log4j.logger.org.apache.http.client=DEBUG\n      #log4j.logger.org.apache.http.headers=DEBUG\n      #log4j.logger.org.apache.http.wire=DEBUG\n\n      log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n      log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n      log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n      log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n      log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n      log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n      log4j.logger.audit=INFO, auditfile\n      log4j.appender.auditfile=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.auditfile.File=${app.log.dir}/${app.audit.file}\n      log4j.appender.auditfile.Append = true\n      log4j.appender.auditfile.DatePattern = '.'yyyy-MM-dd\n      log4j.appender.auditfile.layout = org.apache.hadoop.gateway.audit.log4j.layout.AuditLayout\n\n    ",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      content for log4j.properties file for the demo LDAP that comes with Knox.\n    ",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n        # Licensed to the Apache Software Foundation (ASF) under one\n        # or more contributor license agreements.  See the NOTICE file\n        # distributed with this work for additional information\n        # regarding copyright ownership.  The ASF licenses this file\n        # to you under the Apache License, Version 2.0 (the\n        # \"License\"); you may not use this file except in compliance\n        # with the License.  You may obtain a copy of the License at\n        #\n        #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        # Unless required by applicable law or agreed to in writing, software\n        # distributed under the License is distributed on an \"AS IS\" BASIS,\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        # See the License for the specific language governing permissions and\n        # limitations under the License.\n\n        app.log.dir=${launcher.dir}/../logs\n        app.log.file=${launcher.name}.log\n\n        log4j.rootLogger=ERROR, drfa\n        log4j.logger.org.apache.directory.server.ldap.LdapServer=INFO\n        log4j.logger.org.apache.directory=WARN\n\n        log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n        log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n        log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n        log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n        log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n        log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n        log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n        log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n    ",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ldap-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/gateway.gateway.conf.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The directory within GATEWAY_HOME that contains gateway topology files and deployments.",
            "property_name" : "gateway.gateway.conf.dir",
            "property_type" : [ ],
            "property_value" : "deployments",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/gateway.hadoop.kerberos.secured",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Boolean flag indicating whether the Hadoop cluster protected by Gateway is secured with Kerberos",
            "property_name" : "gateway.hadoop.kerberos.secured",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/gateway.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The default context path for the gateway.",
            "property_name" : "gateway.path",
            "property_type" : [ ],
            "property_value" : "gateway",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/gateway.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The HTTP port for the Gateway.",
            "property_name" : "gateway.port",
            "property_type" : [ ],
            "property_value" : "8443",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/java.security.auth.login.config",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Absolute path to JASS login config file",
            "property_name" : "java.security.auth.login.config",
            "property_type" : [ ],
            "property_value" : "/etc/knox/conf/krb5JAASLogin.conf",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/java.security.krb5.conf",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Absolute path to krb5.conf file",
            "property_name" : "java.security.krb5.conf",
            "property_type" : [ ],
            "property_value" : "/etc/knox/conf/krb5.conf",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/knox_group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Knox Group.",
            "property_name" : "knox_group",
            "property_type" : [
              "GROUP"
            ],
            "property_value" : "knox",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "knox-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/knox_master_secret",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "password to use as the master secret",
            "property_name" : "knox_master_secret",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "knox-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/knox_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Knox PID dir.",
            "property_name" : "knox_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/knox",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "knox-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/knox_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Knox Username.",
            "property_name" : "knox_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "knox",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "knox-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/policy_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This user must be system user and also present at Ranger admin portal",
            "property_name" : "policy_user",
            "property_type" : [ ],
            "property_value" : "ambari-qa",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/ranger-knox-plugin-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable ranger knox plugin ?",
            "property_name" : "ranger-knox-plugin-enabled",
            "property_type" : [ ],
            "property_value" : "No",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-knox-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/KNOX/configurations/sun.security.krb5.debug",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Boolean flag indicating whether to enable debug messages for krb5 authentication",
            "property_name" : "sun.security.krb5.debug",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "KNOX",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "gateway-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2",
      "StackServices" : {
        "service_name" : "MAPREDUCE2",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "mapred-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "mapred-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for mapred-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n    ",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/jobhistory_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Value for JobHistoryServer heap_size variable in hadoop-env.sh",
            "property_name" : "jobhistory_heapsize",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapred_log_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Mapreduce Log Dir Prefix",
            "property_name" : "mapred_log_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/log/hadoop-mapreduce",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapred_pid_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Mapreduce PID Dir Prefix",
            "property_name" : "mapred_pid_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/run/hadoop-mapreduce",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapred_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Mapreduce User",
            "property_name" : "mapred_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "mapred",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.admin.map.child.java.opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.admin.map.child.java.opts",
            "property_type" : [ ],
            "property_value" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.admin.reduce.child.java.opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.admin.reduce.child.java.opts",
            "property_type" : [ ],
            "property_value" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.admin.user.env",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Additional execution environment entries for map and reduce task processes.\n      This is not an additive property. You must preserve the original value if\n      you want your map and reduce tasks to have access to native libraries (compression, etc)\n    ",
            "property_name" : "mapreduce.admin.user.env",
            "property_type" : [ ],
            "property_value" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.am.max-attempts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum number of application attempts. It is a\n      application-specific setting. It should not be larger than the global number\n      set by resourcemanager. Otherwise, it will be override. The default number is\n      set to 2, to allow at least one retry for AM.\n    ",
            "property_name" : "mapreduce.am.max-attempts",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.application.classpath",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      CLASSPATH for MR applications. A comma-separated list of CLASSPATH\n      entries.\n    ",
            "property_name" : "mapreduce.application.classpath",
            "property_type" : [ ],
            "property_value" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.application.framework.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.application.framework.path",
            "property_type" : [ ],
            "property_value" : "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.cluster.administrators",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Administrators for MapReduce applications.\n    ",
            "property_name" : "mapreduce.cluster.administrators",
            "property_type" : [ ],
            "property_value" : " hadoop",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.framework.name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The runtime framework for executing MapReduce jobs. Can be one of local,\n      classic or yarn.\n    ",
            "property_name" : "mapreduce.framework.name",
            "property_type" : [ ],
            "property_value" : "yarn",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.job.emit-timeline-data",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.job.emit-timeline-data",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.job.reduce.slowstart.completedmaps",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Fraction of the number of maps in the job which should be complete before\n      reduces are scheduled for the job.\n    ",
            "property_name" : "mapreduce.job.reduce.slowstart.completedmaps",
            "property_type" : [ ],
            "property_value" : "0.05",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.jobhistory.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enter your JobHistoryServer hostname.",
            "property_name" : "mapreduce.jobhistory.address",
            "property_type" : [ ],
            "property_value" : "localhost:10020",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.jobhistory.bind-host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.jobhistory.bind-host",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.jobhistory.done-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Directory where history files are managed by the MR JobHistory Server.\n    ",
            "property_name" : "mapreduce.jobhistory.done-dir",
            "property_type" : [ ],
            "property_value" : "/mr-history/done",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.jobhistory.intermediate-done-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Directory where history files are written by MapReduce jobs.\n    ",
            "property_name" : "mapreduce.jobhistory.intermediate-done-dir",
            "property_type" : [ ],
            "property_value" : "/mr-history/tmp",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.jobhistory.webapp.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enter your JobHistoryServer hostname.",
            "property_name" : "mapreduce.jobhistory.webapp.address",
            "property_type" : [ ],
            "property_value" : "localhost:19888",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.java.opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Larger heap-size for child jvms of maps.\n    ",
            "property_name" : "mapreduce.map.java.opts",
            "property_type" : [ ],
            "property_value" : "-Xmx756m",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.log.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The logging level for the map task. The allowed levels are:\n      OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE and ALL.\n    ",
            "property_name" : "mapreduce.map.log.level",
            "property_type" : [ ],
            "property_value" : "INFO",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.memory.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Virtual memory for single Map task",
            "property_name" : "mapreduce.map.memory.mb",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.output.compress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Should the outputs of the maps be compressed before being sent across the network. Uses SequenceFile compression.\n    ",
            "property_name" : "mapreduce.map.output.compress",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.sort.spill.percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The soft limit in the serialization buffer. Once reached, a thread will\n      begin to spill the contents to disk in the background. Note that\n      collection will not block if this threshold is exceeded while a spill\n      is already in progress, so spills may be larger than this threshold when\n      it is set to less than .5\n    ",
            "property_name" : "mapreduce.map.sort.spill.percent",
            "property_type" : [ ],
            "property_value" : "0.7",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.map.speculative",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If true, then multiple instances of some map tasks\n      may be executed in parallel.\n    ",
            "property_name" : "mapreduce.map.speculative",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.output.fileoutputformat.compress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Should the job outputs be compressed?\n    ",
            "property_name" : "mapreduce.output.fileoutputformat.compress",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.output.fileoutputformat.compress.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If the job outputs are to compressed as SequenceFiles, how should\n      they be compressed? Should be one of NONE, RECORD or BLOCK.\n    ",
            "property_name" : "mapreduce.output.fileoutputformat.compress.type",
            "property_type" : [ ],
            "property_value" : "BLOCK",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.input.buffer.percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The percentage of memory- relative to the maximum heap size- to\n      retain map outputs during the reduce. When the shuffle is concluded, any\n      remaining map outputs in memory must consume less than this threshold before\n      the reduce can begin.\n    ",
            "property_name" : "mapreduce.reduce.input.buffer.percent",
            "property_type" : [ ],
            "property_value" : "0.0",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.java.opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Larger heap-size for child jvms of reduces.\n    ",
            "property_name" : "mapreduce.reduce.java.opts",
            "property_type" : [ ],
            "property_value" : "-Xmx756m",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.log.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The logging level for the reduce task. The allowed levels are:\n      OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE and ALL.\n    ",
            "property_name" : "mapreduce.reduce.log.level",
            "property_type" : [ ],
            "property_value" : "INFO",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.memory.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Virtual memory for single Reduce task",
            "property_name" : "mapreduce.reduce.memory.mb",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.fetch.retry.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.reduce.shuffle.fetch.retry.enabled",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.fetch.retry.interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.reduce.shuffle.fetch.retry.interval-ms",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.fetch.retry.timeout-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "mapreduce.reduce.shuffle.fetch.retry.timeout-ms",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.input.buffer.percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The percentage of memory to be allocated from the maximum heap\n      size to storing map outputs during the shuffle.\n    ",
            "property_name" : "mapreduce.reduce.shuffle.input.buffer.percent",
            "property_type" : [ ],
            "property_value" : "0.7",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.merge.percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The usage threshold at which an in-memory merge will be\n      initiated, expressed as a percentage of the total memory allocated to\n      storing in-memory map outputs, as defined by\n      mapreduce.reduce.shuffle.input.buffer.percent.\n    ",
            "property_name" : "mapreduce.reduce.shuffle.merge.percent",
            "property_type" : [ ],
            "property_value" : "0.66",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.shuffle.parallelcopies",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The default number of parallel transfers run by reduce during\n      the copy(shuffle) phase.\n    ",
            "property_name" : "mapreduce.reduce.shuffle.parallelcopies",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.reduce.speculative",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If true, then multiple instances of some reduce tasks may be\n      executed in parallel.\n    ",
            "property_name" : "mapreduce.reduce.speculative",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.shuffle.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Default port that the ShuffleHandler will run on.\n      ShuffleHandler is a service run at the NodeManager to facilitate\n      transfers of intermediate Map outputs to requesting Reducers.\n    ",
            "property_name" : "mapreduce.shuffle.port",
            "property_type" : [ ],
            "property_value" : "13562",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.task.io.sort.factor",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of streams to merge at once while sorting files.\n      This determines the number of open file handles.\n    ",
            "property_name" : "mapreduce.task.io.sort.factor",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.task.io.sort.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The total amount of buffer memory to use while sorting files, in megabytes.\n      By default, gives each merge stream 1MB, which should minimize seeks.\n    ",
            "property_name" : "mapreduce.task.io.sort.mb",
            "property_type" : [ ],
            "property_value" : "200",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/mapreduce.task.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The number of milliseconds before a task will be\n      terminated if it neither reads an input, writes an output, nor\n      updates its status string.\n    ",
            "property_name" : "mapreduce.task.timeout",
            "property_type" : [ ],
            "property_value" : "300000",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/yarn.app.mapreduce.am.admin-command-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Java opts for the MR App Master processes.\n      The following symbol, if present, will be interpolated: @taskid@ is replaced\n      by current TaskID. Any other occurrences of '@' will go unchanged.\n      For example, to enable verbose gc logging to a file named for the taskid in\n      /tmp and to set the heap maximum to be a gigabyte, pass a 'value' of:\n      -Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc\n\n      Usage of -Djava.library.path can cause programs to no longer function if\n      hadoop native libraries are used. These values should instead be set as part\n      of LD_LIBRARY_PATH in the map / reduce JVM env using the mapreduce.map.env and\n      mapreduce.reduce.env config settings.\n    ",
            "property_name" : "yarn.app.mapreduce.am.admin-command-opts",
            "property_type" : [ ],
            "property_value" : "-Dhdp.version=${hdp.version}",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/yarn.app.mapreduce.am.command-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Java opts for the MR App Master processes.\n      The following symbol, if present, will be interpolated: @taskid@ is replaced\n      by current TaskID. Any other occurrences of '@' will go unchanged.\n      For example, to enable verbose gc logging to a file named for the taskid in\n      /tmp and to set the heap maximum to be a gigabyte, pass a 'value' of:\n      -Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc\n\n      Usage of -Djava.library.path can cause programs to no longer function if\n      hadoop native libraries are used. These values should instead be set as part\n      of LD_LIBRARY_PATH in the map / reduce JVM env using the mapreduce.map.env and\n      mapreduce.reduce.env config settings.\n    ",
            "property_name" : "yarn.app.mapreduce.am.command-opts",
            "property_type" : [ ],
            "property_value" : "-Xmx312m",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/yarn.app.mapreduce.am.log.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "MR App Master process log level.",
            "property_name" : "yarn.app.mapreduce.am.log.level",
            "property_type" : [ ],
            "property_value" : "INFO",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/yarn.app.mapreduce.am.resource.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of memory the MR AppMaster needs.",
            "property_name" : "yarn.app.mapreduce.am.resource.mb",
            "property_type" : [ ],
            "property_value" : "512",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/MAPREDUCE2/configurations/yarn.app.mapreduce.am.staging-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The staging dir used while submitting jobs.\n    ",
            "property_name" : "yarn.app.mapreduce.am.staging-dir",
            "property_type" : [ ],
            "property_value" : "/user",
            "service_name" : "MAPREDUCE2",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "mapred-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE",
      "StackServices" : {
        "service_name" : "OOZIE",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "oozie-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "oozie-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "oozie-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\n# XLogService sets its value to '${oozie.home}/logs'\n\nlog4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\nlog4j.appender.oozie.Append=true\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\nlog4j.appender.oozieops.Append=true\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\nlog4j.appender.oozieinstrumentation.Append=true\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\nlog4j.appender.oozieaudit.Append=true\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\nlog4j.appender.openjpa.Append=true\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.logger.openjpa=INFO, openjpa\nlog4j.logger.oozieops=INFO, oozieops\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\nlog4j.logger.oozieaudit=ALL, oozieaudit\nlog4j.logger.org.apache.oozie=INFO, oozie\nlog4j.logger.org.apache.hadoop=WARN, oozie\nlog4j.logger.org.mortbay=WARN, oozie\nlog4j.logger.org.hsqldb=WARN, oozie\nlog4j.logger.org.apache.hadoop.security.authentication.server=INFO, oozie\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for oozie-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n# export CATALINA_OPTS=\n\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\n# exceeded exceptions. If the oozie server is handling large number of\n# workflows/coordinator jobs, the memory settings may need to be revised\nexport CATALINA_OPTS=\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \"\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.authentication.kerberos.name.rules",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The mapping from kerberos principal names to local OS user names.",
            "property_name" : "oozie.authentication.kerberos.name.rules",
            "property_type" : [ ],
            "property_value" : "\n      RULE:[2:$1@$0]([jt]t@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-MAPREDUSER/\n      RULE:[2:$1@$0]([nd]n@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HDFSUSER/\n      RULE:[2:$1@$0](hm@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\n      RULE:[2:$1@$0](rs@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\n      DEFAULT\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.authentication.simple.anonymous.allowed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Indicates if anonymous requests are allowed.\n      This setting is meaningful only when using 'simple' authentication.\n    ",
            "property_name" : "oozie.authentication.simple.anonymous.allowed",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.authentication.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Authentication used for Oozie HTTP endpoint, the supported values are: simple | kerberos |\n      #AUTHENTICATION_HANDLER_CLASSNAME#.\n    ",
            "property_name" : "oozie.authentication.type",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.base.url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Base Oozie URL.",
            "property_name" : "oozie.base.url",
            "property_type" : [ ],
            "property_value" : "http://localhost:11000/oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.credentials.credentialclasses",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Credential Class to be used for HCat.\n    ",
            "property_name" : "oozie.credentials.credentialclasses",
            "property_type" : [ ],
            "property_value" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.db.schema.name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Oozie DataBase Name\n    ",
            "property_name" : "oozie.db.schema.name",
            "property_type" : [ ],
            "property_value" : "oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.ActionService.executor.ext.classes",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      List of ActionExecutors extension classes (separated by commas). Only action types with associated executors can\n      be used in workflows. This property is a convenience property to add extensions to the built in executors without\n      having to include all the built in ones.\n    ",
            "property_name" : "oozie.service.ActionService.executor.ext.classes",
            "property_type" : [ ],
            "property_value" : "\n      org.apache.oozie.action.email.EmailActionExecutor,\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\n      org.apache.oozie.action.hadoop.DistcpActionExecutor\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.AuthorizationService.security.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Specifies whether security (user name/admin role) is enabled or not.\n      If disabled any user can manage Oozie system and manage any job.\n    ",
            "property_name" : "oozie.service.AuthorizationService.security.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.CallableQueueService.callable.concurrency",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Maximum concurrency for a given callable type.\n      Each command is a callable type (submit, start, run, signal, job, jobs, suspend,resume, etc).\n      Each action type is a callable type (Map-Reduce, Pig, SSH, FS, sub-workflow, etc).\n      All commands that use action executors (action-start, action-end, action-kill and action-check) use\n      the action type as the callable type.\n    ",
            "property_name" : "oozie.service.CallableQueueService.callable.concurrency",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.CallableQueueService.queue.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max callable queue size",
            "property_name" : "oozie.service.CallableQueueService.queue.size",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.CallableQueueService.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of threads used for executing callables",
            "property_name" : "oozie.service.CallableQueueService.threads",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.HadoopAccessorService.hadoop.configurations",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Comma separated AUTHORITY=HADOOP_CONF_DIR, where AUTHORITY is the HOST:PORT of\n      the Hadoop service (JobTracker, HDFS). The wildcard '*' configuration is\n      used when there is no exact match for an authority. The HADOOP_CONF_DIR contains\n      the relevant Hadoop *-site.xml files. If the path is relative is looked within\n      the Oozie configuration directory; though the path can be absolute (i.e. to point\n      to Hadoop client conf/ directories in the local filesystem.\n    ",
            "property_name" : "oozie.service.HadoopAccessorService.hadoop.configurations",
            "property_type" : [ ],
            "property_value" : "*=/etc/hadoop/conf",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.HadoopAccessorService.kerberos.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Indicates if Oozie is configured to use Kerberos.\n    ",
            "property_name" : "oozie.service.HadoopAccessorService.kerberos.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.create.db.schema",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Creates Oozie DB.\n\n      If set to true, it creates the DB schema if it does not exist. If the DB schema exists is a NOP.\n      If set to false, it does not create the DB schema. If the DB schema does not exist it fails start up.\n    ",
            "property_name" : "oozie.service.JPAService.create.db.schema",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.jdbc.driver",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      JDBC driver class.\n    ",
            "property_name" : "oozie.service.JPAService.jdbc.driver",
            "property_type" : [ ],
            "property_value" : "org.apache.derby.jdbc.EmbeddedDriver",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.jdbc.password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      DB user password.\n\n      IMPORTANT: if password is emtpy leave a 1 space string, the service trims the value,\n      if empty Configuration assumes it is NULL.\n    ",
            "property_name" : "oozie.service.JPAService.jdbc.password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : " ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.jdbc.url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      JDBC URL.\n    ",
            "property_name" : "oozie.service.JPAService.jdbc.url",
            "property_type" : [ ],
            "property_value" : "jdbc:derby:${oozie.data.dir}/${oozie.db.schema.name}-db;create=true",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.jdbc.username",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Database user name to use to connect to the database\n    ",
            "property_name" : "oozie.service.JPAService.jdbc.username",
            "property_type" : [ ],
            "property_value" : "oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.JPAService.pool.max.active.conn",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Max number of connections.\n    ",
            "property_name" : "oozie.service.JPAService.pool.max.active.conn",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.PurgeService.older.than",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Jobs older than this value, in days, will be purged by the PurgeService.\n    ",
            "property_name" : "oozie.service.PurgeService.older.than",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.PurgeService.purge.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Interval at which the purge service will run, in seconds.\n    ",
            "property_name" : "oozie.service.PurgeService.purge.interval",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.SchemaService.wf.ext.schemas",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "oozie.service.SchemaService.wf.ext.schemas",
            "property_type" : [ ],
            "property_value" : "shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.URIHandlerService.uri.handlers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enlist the different uri handlers supported for data availability checks.\n    ",
            "property_name" : "oozie.service.URIHandlerService.uri.handlers",
            "property_type" : [ ],
            "property_value" : "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.WorkflowAppService.system.libpath",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      System library path to use for workflow applications.\n      This path is added to workflow application if their job properties sets\n      the property 'oozie.use.system.libpath' to true.\n    ",
            "property_name" : "oozie.service.WorkflowAppService.system.libpath",
            "property_type" : [ ],
            "property_value" : "/user/${user.name}/share/lib",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.coord.check.maximum.frequency",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      When true, Oozie will reject any coordinators with a frequency faster than 5 minutes.  It is not recommended to disable\n      this check or submit coordinators with frequencies faster than 5 minutes: doing so can cause unintended behavior and\n      additional system stress.\n    ",
            "property_name" : "oozie.service.coord.check.maximum.frequency",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.coord.normal.default.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default timeout for a coordinator action input check (in minutes) for normal job.\n      -1 means infinite timeout\n    ",
            "property_name" : "oozie.service.coord.normal.default.timeout",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.service.coord.push.check.requeue.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Command re-queue interval for push dependencies (in millisecond).\n    ",
            "property_name" : "oozie.service.coord.push.check.requeue.interval",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.services",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      All services to be created and managed by Oozie Services singleton.\n      Class names must be separated by commas.\n    ",
            "property_name" : "oozie.services",
            "property_type" : [ ],
            "property_value" : "\n      org.apache.oozie.service.SchedulerService,\n      org.apache.oozie.service.InstrumentationService,\n      org.apache.oozie.service.MemoryLocksService,\n      org.apache.oozie.service.UUIDService,\n      org.apache.oozie.service.ELService,\n      org.apache.oozie.service.AuthorizationService,\n      org.apache.oozie.service.UserGroupInformationService,\n      org.apache.oozie.service.HadoopAccessorService,\n      org.apache.oozie.service.JobsConcurrencyService,\n      org.apache.oozie.service.URIHandlerService,\n      org.apache.oozie.service.DagXLogInfoService,\n      org.apache.oozie.service.SchemaService,\n      org.apache.oozie.service.LiteWorkflowAppService,\n      org.apache.oozie.service.JPAService,\n      org.apache.oozie.service.StoreService,\n      org.apache.oozie.service.CoordinatorStoreService,\n      org.apache.oozie.service.SLAStoreService,\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\n      org.apache.oozie.service.CallbackService,\n      org.apache.oozie.service.ShareLibService,\n      org.apache.oozie.service.CallableQueueService,\n      org.apache.oozie.service.ActionService,\n      org.apache.oozie.service.ActionCheckerService,\n      org.apache.oozie.service.RecoveryService,\n      org.apache.oozie.service.PurgeService,\n      org.apache.oozie.service.CoordinatorEngineService,\n      org.apache.oozie.service.BundleEngineService,\n      org.apache.oozie.service.DagEngineService,\n      org.apache.oozie.service.CoordMaterializeTriggerService,\n      org.apache.oozie.service.StatusTransitService,\n      org.apache.oozie.service.PauseTransitService,\n      org.apache.oozie.service.GroupsService,\n      org.apache.oozie.service.ProxyUserService,\n      org.apache.oozie.service.XLogStreamingService,\n      org.apache.oozie.service.JvmPauseMonitorService\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.services.ext",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      To add/replace services defined in 'oozie.services' with custom implementations.\n      Class names must be separated by commas.\n    ",
            "property_name" : "oozie.services.ext",
            "property_type" : [ ],
            "property_value" : "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService\n    ",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.system.id",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The Oozie system ID.\n    ",
            "property_name" : "oozie.system.id",
            "property_type" : [ ],
            "property_value" : "oozie-${user.name}",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie.systemmode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      System mode for Oozie at startup.\n    ",
            "property_name" : "oozie.systemmode",
            "property_type" : [ ],
            "property_value" : "NORMAL",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_admin_port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The admin port Oozie server runs.",
            "property_name" : "oozie_admin_port",
            "property_type" : [ ],
            "property_value" : "11001",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_data_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Data directory in which the Oozie DB exists",
            "property_name" : "oozie_data_dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/oozie/data",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_database",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oozie Server Database.",
            "property_name" : "oozie_database",
            "property_type" : [ ],
            "property_value" : "New Derby Database",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_derby_database",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oozie Derby Database",
            "property_name" : "oozie_derby_database",
            "property_type" : [ ],
            "property_value" : "Derby",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oozie heap size.",
            "property_name" : "oozie_heapsize",
            "property_type" : [ ],
            "property_value" : "2048",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory for oozie logs",
            "property_name" : "oozie_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_permsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oozie permanent generation size.",
            "property_name" : "oozie_permsize",
            "property_type" : [ ],
            "property_value" : "256",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Directory in which the pid files for oozie reside.",
            "property_name" : "oozie_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/oozie_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oozie User.",
            "property_name" : "oozie_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "oozie",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/OOZIE/configurations/use.system.libpath.for.mapreduce.and.pig.jobs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      If set to true, submissions of MapReduce and Pig jobs will include\n      automatically the system library path, thus not requiring users to\n      specify where the Pig JAR files are. Instead, the ones from the system\n      library path are used.\n    ",
            "property_name" : "use.system.libpath.for.mapreduce.and.pig.jobs",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "OOZIE",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "oozie-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/PIG",
      "StackServices" : {
        "service_name" : "PIG",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "pig-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "pig-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "pig-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/PIG/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n# ***** Set root logger level to DEBUG and its only appender to A.\nlog4j.logger.org.apache.pig=info, A\n\n# ***** A is set to be a ConsoleAppender.\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\n# ***** A uses PatternLayout.\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n    ",
            "service_name" : "PIG",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "pig-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/PIG/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for pig-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\nJAVA_HOME={{java64_home}}\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  PIG_OPTS=\"$PIG_OPTS -Dmapreduce.framework.name=yarn\"\nfi\n    ",
            "service_name" : "PIG",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "pig-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/PIG/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\n# see bin/pig -help\n\n# brief logging (no timestamps)\nbrief=false\n\n# debug level, INFO is default\ndebug=INFO\n\n# verbose print all log messages to screen (default to print only INFO and above to screen)\nverbose=false\n\n# exectype local|mapreduce, mapreduce is default\nexectype=mapreduce\n\n# Enable insertion of information about script into hadoop job conf \npig.script.info.enabled=true\n\n# Do not spill temp files smaller than this size (bytes)\npig.spill.size.threshold=5000000\n\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\n# This should help reduce the number of files being spilled.\npig.spill.gc.activation.size=40000000\n\n# the following two parameters are to help estimate the reducer number\npig.exec.reducers.bytes.per.reducer=1000000000\npig.exec.reducers.max=999\n\n# Temporary location to store the intermediate data.\npig.temp.dir=/tmp/\n\n# Threshold for merging FRJoin fragment files\npig.files.concatenation.threshold=100\npig.optimistic.files.concatenation=false;\n\npig.disable.counter=false\n\n# Avoid pig failures when multiple jobs write to the same location\npig.location.check.strict=false\n\nhcat.bin=/usr/bin/hcat\n\n    ",
            "service_name" : "PIG",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "pig-properties.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER",
      "StackServices" : {
        "service_name" : "RANGER",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "admin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "ranger-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "ranger-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "usersync-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/CRED_KEYSTORE_FILENAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "CRED_KEYSTORE_FILENAME",
            "property_type" : [ ],
            "property_value" : "/usr/lib/xausersync/.jceks/xausersync.jceks",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/DB_FLAVOR",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The database type to be used (mysql/oracle)",
            "property_name" : "DB_FLAVOR",
            "property_type" : [ ],
            "property_value" : "MYSQL",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTPS_CLIENT_AUTH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The client auth to be used ",
            "property_name" : "HTTPS_CLIENT_AUTH",
            "property_type" : [ ],
            "property_value" : "want",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTPS_KEYSTORE_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The keystore file location",
            "property_name" : "HTTPS_KEYSTORE_FILE",
            "property_type" : [ ],
            "property_value" : "/etc/ranger/admin/keys/server.jks",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTPS_KEYSTORE_PASS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The keystore pass to be used ",
            "property_name" : "HTTPS_KEYSTORE_PASS",
            "property_type" : [ ],
            "property_value" : "ranger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTPS_KEY_ALIAS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The key alias to be used ",
            "property_name" : "HTTPS_KEY_ALIAS",
            "property_type" : [ ],
            "property_value" : "myKey",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTPS_SERVICE_PORT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The secured https port to be used",
            "property_name" : "HTTPS_SERVICE_PORT",
            "property_type" : [ ],
            "property_value" : "6182",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTP_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "http enabled or https enabled ",
            "property_name" : "HTTP_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/HTTP_SERVICE_PORT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The http port to be used",
            "property_name" : "HTTP_SERVICE_PORT",
            "property_type" : [ ],
            "property_value" : "6080",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/MIN_UNIX_USER_ID_TO_SYNC",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "MIN_UNIX_USER_ID_TO_SYNC",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SQL_COMMAND_INVOKER",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The executable path to be used to invoke command-line MYSQL",
            "property_name" : "SQL_COMMAND_INVOKER",
            "property_type" : [ ],
            "property_value" : "mysql",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SQL_CONNECTOR_JAR",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location of DB client library (please check the location of the jar file)",
            "property_name" : "SQL_CONNECTOR_JAR",
            "property_type" : [ ],
            "property_value" : "/usr/share/java/mysql-connector-java.jar",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_INTERVAL",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SYNC_INTERVAL",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_BIND_DN",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "a sample value would be cn=admin,ou=users,dc=hadoop,dc=apache,dc-org",
            "property_name" : "SYNC_LDAP_BIND_DN",
            "property_type" : [ ],
            "property_value" : "cn=admin,dc=xasecure,dc=net",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_BIND_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SYNC_LDAP_BIND_PASSWORD",
            "property_type" : [ ],
            "property_value" : "admin321",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_GROUPNAME_CASE_CONVERSION",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "possible values:  none, lower, upper",
            "property_name" : "SYNC_LDAP_GROUPNAME_CASE_CONVERSION",
            "property_type" : [ ],
            "property_value" : "none",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_URL",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "a sample value would be:  ldap://ldap.example.com:389",
            "property_name" : "SYNC_LDAP_URL",
            "property_type" : [ ],
            "property_value" : "ldap://localhost:389",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USERNAME_CASE_CONVERSION",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "possible values:  none, lower, upper",
            "property_name" : "SYNC_LDAP_USERNAME_CASE_CONVERSION",
            "property_type" : [ ],
            "property_value" : "none",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_GROUP_NAME_ATTRIBUTE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SYNC_LDAP_USER_GROUP_NAME_ATTRIBUTE",
            "property_type" : [ ],
            "property_value" : "memberof,ismemberof",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_NAME_ATTRIBUTE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "default value: cn",
            "property_name" : "SYNC_LDAP_USER_NAME_ATTRIBUTE",
            "property_type" : [ ],
            "property_value" : "cn",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_OBJECT_CLASS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "default value: person",
            "property_name" : "SYNC_LDAP_USER_OBJECT_CLASS",
            "property_type" : [ ],
            "property_value" : "person",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_SEARCH_BASE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "sample value would be ou=users,dc=hadoop,dc=apache,dc=org",
            "property_name" : "SYNC_LDAP_USER_SEARCH_BASE",
            "property_type" : [ ],
            "property_value" : "ou=users,dc=xasecure,dc=net",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_SEARCH_FILTER",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "default value is empty",
            "property_name" : "SYNC_LDAP_USER_SEARCH_FILTER",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_LDAP_USER_SEARCH_SCOPE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "default value: sub",
            "property_name" : "SYNC_LDAP_USER_SEARCH_SCOPE",
            "property_type" : [ ],
            "property_value" : "sub",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/SYNC_SOURCE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SYNC_SOURCE",
            "property_type" : [ ],
            "property_value" : "unix",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/admin_password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the password for default admin user that is used for creating ambari user in Ranger Admin",
            "property_name" : "admin_password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "admin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/admin_username",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the username for default admin user that is used for creating ambari user in Ranger Admin",
            "property_name" : "admin_username",
            "property_type" : [ ],
            "property_value" : "admin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/audit_db_name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Audit database name",
            "property_name" : "audit_db_name",
            "property_type" : [ ],
            "property_value" : "ranger_audit",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/audit_db_password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database password for storing auditlog information",
            "property_name" : "audit_db_password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "rangerlogger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/audit_db_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database user-id for storing auditlog information",
            "property_name" : "audit_db_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "rangerlogger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/authServiceHostName",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "authServiceHostName",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/authServicePort",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "authServicePort",
            "property_type" : [ ],
            "property_value" : "5151",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/authentication_method",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "authentication_method",
            "property_type" : [ ],
            "property_value" : "UNIX",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database host",
            "property_name" : "db_host",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database name",
            "property_name" : "db_name",
            "property_type" : [ ],
            "property_value" : "ranger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database password for the Ranger schema",
            "property_name" : "db_password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "rangeradmin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_root_password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database password for the database admin user-id",
            "property_name" : "db_root_password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "vagrant",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_root_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database admin user",
            "property_name" : "db_root_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "root",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/db_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Database user-id used for the Ranger schema",
            "property_name" : "db_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "rangeradmin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/logdir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "user sync log path",
            "property_name" : "logdir",
            "property_type" : [ ],
            "property_value" : "logs",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "usersync-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/oracle_home",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Oracle Home needs to be set to path where oracle is installed, this will help install Ranger Admin when used with Oracle as database.",
            "property_name" : "oracle_home",
            "property_type" : [
              null
            ],
            "property_value" : "-",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/policymgr_external_url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Policy Manager external url",
            "property_name" : "policymgr_external_url",
            "property_type" : [ ],
            "property_value" : "http://localhost:6080",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/policymgr_http_enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HTTP Enabled",
            "property_name" : "policymgr_http_enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_admin_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "ranger_admin_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/ranger/admin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_admin_password",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the ambari user password created for creating repositories and policies in Ranger Admin for each plugin",
            "property_name" : "ranger_admin_password",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "ambari123",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_admin_username",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the ambari user created for creating repositories and policies in Ranger Admin for each plugin",
            "property_name" : "ranger_admin_username",
            "property_type" : [
              null
            ],
            "property_value" : "amb_ranger_admin",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ranger group",
            "property_name" : "ranger_group",
            "property_type" : [
              "GROUP"
            ],
            "property_value" : "ranger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ranger username",
            "property_name" : "ranger_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "ranger",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/ranger_usersync_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "ranger_usersync_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/ranger/usersync",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/remoteLoginEnabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "remoteLoginEnabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_ad_domain",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_ad_domain",
            "property_type" : [ ],
            "property_value" : "\"xasecure.net\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_ad_url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_ad_url",
            "property_type" : [ ],
            "property_value" : "\"ldap://ad.xasecure.net:389\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_groupRoleAttribute",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_groupRoleAttribute",
            "property_type" : [ ],
            "property_value" : "\"cn\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_groupSearchBase",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_groupSearchBase",
            "property_type" : [ ],
            "property_value" : "\"ou=groups,dc=xasecure,dc=net\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_groupSearchFilter",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_groupSearchFilter",
            "property_type" : [ ],
            "property_value" : "\"(member=uid={0},ou=users,dc=xasecure,dc=net)\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_url",
            "property_type" : [ ],
            "property_value" : "\"ldap://71.127.43.33:389\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/RANGER/configurations/xa_ldap_userDNpattern",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "xa_ldap_userDNpattern",
            "property_type" : [ ],
            "property_value" : "\"uid={0},ou=users,dc=xasecure,dc=net\"",
            "service_name" : "RANGER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "admin-properties.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SLIDER",
      "StackServices" : {
        "service_name" : "SLIDER",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "slider-client" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "slider-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "slider-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SLIDER/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nlog4j.rootLogger=INFO,stdout\nlog4j.threshhold=ALL\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n\n# log layout skips stack-trace creation operations by avoiding line numbers and method\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n\n\n# debug edition is much more expensive\n#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppender\nlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayout\nlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n\n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess\n\n# for debugging Slider\n#log4j.logger.org.apache.slider=DEBUG\n#log4j.logger.org.apache.slider=DEBUG\n\n# uncomment to debug service lifecycle issues\n#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG\n#log4j.logger.org.apache.hadoop.yarn.service=DEBUG\n\n# uncomment for YARN operations\n#log4j.logger.org.apache.hadoop.yarn.client=DEBUG\n\n# uncomment this to debug security problems\n#log4j.logger.org.apache.hadoop.security=DEBUG\n\n#crank back on some noise\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\nlog4j.logger.org.apache.hadoop.hdfs=WARN\n\n\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARN\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARN\nlog4j.logger.org.apache.zookeeper=WARN\n    ",
            "service_name" : "SLIDER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "slider-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SLIDER/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for slider-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set Slider-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java64_home}}\n# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.\nexport HADOOP_CONF_DIR={{hadoop_conf_dir}}\n    ",
            "service_name" : "SLIDER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "slider-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK",
      "StackServices" : {
        "service_name" : "SPARK",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "spark-defaults" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "spark-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "spark-javaopts-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "spark-log4j-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "spark-metrics-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Spark-javaopts-properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : " ",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-javaopts-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Spark-log4j-Properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO\n\n    ",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-log4j-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Spark-metrics-properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n    ",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-metrics-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for spark-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512 Mb\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"~@~Xdefault~@~Y\" #The hadoop queue to use for allocation requests (Default: @~Xdefault~@~Y)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_HOME:-{{spark_home}}}/conf\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}\n\nif [ -d \"/etc/tez/conf/\" ]; then\n  export TEZ_CONF_DIR=/etc/tez/conf\nelse\n  export TEZ_CONF_DIR=\nfi\n\n",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.driver.extraJavaOptions",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Specifies parameters that are passed to the JVM of the Spark driver.\n    ",
            "property_name" : "spark.driver.extraJavaOptions",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.history.kerberos.keytab",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Location of the kerberos keytab file for the Spark History Server.\n    ",
            "property_name" : "spark.history.kerberos.keytab",
            "property_type" : [ ],
            "property_value" : "none",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.history.kerberos.principal",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Kerberos principal name for the Spark History Server.\n    ",
            "property_name" : "spark.history.kerberos.principal",
            "property_type" : [ ],
            "property_value" : "none",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.history.provider",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Name of the class implementing the application history backend which publishes to YARN Application Timeline Service.\n    ",
            "property_name" : "spark.history.provider",
            "property_type" : [ ],
            "property_value" : "org.apache.spark.deploy.yarn.history.YarnHistoryProvider",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.history.ui.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The port to which the web interface of the History Server binds.\n    ",
            "property_name" : "spark.history.ui.port",
            "property_type" : [ ],
            "property_value" : "18080",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.am.extraJavaOptions",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Specifies the parameters that are passed to the JVM of the Spark Application Master.\n    ",
            "property_name" : "spark.yarn.am.extraJavaOptions",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.applicationMaster.waitTries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Set the number of times the ApplicationMaster waits for the the Spark master and then\n      also the number of tries it waits for the SparkContext to be initialized.\n    ",
            "property_name" : "spark.yarn.applicationMaster.waitTries",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.containerLauncherMaxThreads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum number of threads to use in the application master for launching executor containers.\n    ",
            "property_name" : "spark.yarn.containerLauncherMaxThreads",
            "property_type" : [ ],
            "property_value" : "25",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.driver.memoryOverhead",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The amount of off heap memory (in megabytes) to be allocated per driver.\n      This is memory that accounts for things like VM overheads, interned strings,\n      other native overheads, etc.\n    ",
            "property_name" : "spark.yarn.driver.memoryOverhead",
            "property_type" : [ ],
            "property_value" : "384",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.executor.memoryOverhead",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The amount of off heap memory (in megabytes) to be allocated per executor.\n      This is memory that accounts for things like VM overheads, interned strings,\n      other native overheads, etc.\n    ",
            "property_name" : "spark.yarn.executor.memoryOverhead",
            "property_type" : [ ],
            "property_value" : "384",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.max.executor.failures",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum number of executor failures before failing the application.\n    ",
            "property_name" : "spark.yarn.max.executor.failures",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.preserve.staging.files",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Set to true to preserve the staged files (Spark jar, app jar, distributed cache files) at the \n      end of the job rather then delete them.\n    ",
            "property_name" : "spark.yarn.preserve.staging.files",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.queue",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The name of the YARN queue to which the application is submitted.\n    ",
            "property_name" : "spark.yarn.queue",
            "property_type" : [ ],
            "property_value" : "default",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.scheduler.heartbeat.interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The interval in ms in which the Spark application master heartbeats into the YARN ResourceManager.\n    ",
            "property_name" : "spark.yarn.scheduler.heartbeat.interval-ms",
            "property_type" : [ ],
            "property_value" : "5000",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark.yarn.submit.file.replication",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      HDFS replication level for the files uploaded into HDFS for the application.\n      These include things like the Spark jar, the app jar, and any distributed cache files/archives.\n    ",
            "property_name" : "spark.yarn.submit.file.replication",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-defaults.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark_group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "spark group",
            "property_name" : "spark_group",
            "property_type" : [
              "GROUP"
            ],
            "property_value" : "spark",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Spark Log Dir",
            "property_name" : "spark_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/spark",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "spark_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/spark",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SPARK/configurations/spark_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : null,
            "property_name" : "spark_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "spark",
            "service_name" : "SPARK",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "spark-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SQOOP",
      "StackServices" : {
        "service_name" : "SQOOP",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "sqoop-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SQOOP/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for sqoop-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Set Hadoop-specific environment variables here.\n\n#Set path to where bin/hadoop is available\n#Set path to where bin/hadoop is available\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n#set the path to where bin/hbase is available\nexport HBASE_HOME=${HBASE_HOME:-{{hbase_home}}}\n\n#Set the path to where bin/hive is available\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home}}}\n\n#Set the path for where zookeper config dir is\nexport ZOOCFGDIR=${ZOOCFGDIR:-/etc/zookeeper/conf}\n\n# add libthrift in hive to sqoop class path first so hive imports work\nexport SQOOP_USER_CLASSPATH=\"`ls ${HIVE_HOME}/lib/libthrift-*.jar 2> /dev/null`:${SQOOP_USER_CLASSPATH}\"\n    ",
            "service_name" : "SQOOP",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "sqoop-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/SQOOP/configurations/sqoop_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "User to run Sqoop as",
            "property_name" : "sqoop_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "sqoop",
            "service_name" : "SQOOP",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "sqoop-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM",
      "StackServices" : {
        "service_name" : "STORM",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "ranger-storm-plugin-properties" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          },
          "storm-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "storm-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/REPOSITORY_CONFIG_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_PASSWORD",
            "property_type" : [
              "PASSWORD"
            ],
            "property_value" : "stormtestuser",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/REPOSITORY_CONFIG_USERNAME",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "REPOSITORY_CONFIG_USERNAME",
            "property_type" : [ ],
            "property_value" : "stormtestuser@EXAMPLE.COM",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/SSL_KEYSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-keystore.jks",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/SSL_KEYSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_KEYSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "myKeyFilePassword",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/SSL_TRUSTSTORE_FILE_PATH",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_FILE_PATH",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/ranger-plugin-truststore.jks",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/SSL_TRUSTSTORE_PASSWORD",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "SSL_TRUSTSTORE_PASSWORD",
            "property_type" : [ ],
            "property_value" : "changeit",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.DB.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.DB.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.DESTINATION_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINATION_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.DESTINTATION_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FILE",
            "property_type" : [ ],
            "property_value" : "%hostname%-audit.log",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "900",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "86400",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.IS_ENABLED",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.IS_ENABLED",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit/archive",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY",
            "property_type" : [ ],
            "property_value" : "__REPLACE__LOG_DIR/hadoop/%app-type%/audit",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FILE",
            "property_type" : [ ],
            "property_value" : "%time:yyyyMMdd-HHmm.ss%.log",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/_storm.min.ruid",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "min.user.id is set to the first real user id on the system. If value is 'null' than default value will be taken from key UID_MIN of /etc/login.defs otherwise the specified value will be used for all hosts.",
            "property_name" : "_storm.min.ruid",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/_storm.thrift.nonsecure.transport",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The transport plug-in that used for non-secure mode for for Thrift client/server communication.",
            "property_name" : "_storm.thrift.nonsecure.transport",
            "property_type" : [ ],
            "property_value" : "backtype.storm.security.auth.SimpleTransportPlugin",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/_storm.thrift.secure.transport",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The transport plug-in that used for secure mode for Thrift client/server communication.",
            "property_name" : "_storm.thrift.secure.transport",
            "property_type" : [ ],
            "property_value" : "backtype.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/common.name.for.certificate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Used for repository creation on ranger admin",
            "property_name" : "common.name.for.certificate",
            "property_type" : [ ],
            "property_value" : "-",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for storm-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#!/bin/bash\n\n# Set Storm specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\n\n# export STORM_CONF_DIR=\"\"\nexport STORM_HOME=/usr/hdp/current/storm-client\n    ",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/dev.zookeeper.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The path to use as the zookeeper dir when running a zookeeper server via\n       \"storm dev-zookeeper\". This zookeeper instance is only intended for development;\n       it is not a production grade zookeeper setup.",
            "property_name" : "dev.zookeeper.path",
            "property_type" : [ ],
            "property_value" : "/tmp/dev-storm-zookeeper",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Childopts for Storm DRPC Java process.",
            "property_name" : "drpc.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx768m _JAAS_PLACEHOLDER",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.invocations.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This port on Storm DRPC is used by DRPC topologies to receive function invocations and send results back.",
            "property_name" : "drpc.invocations.port",
            "property_type" : [ ],
            "property_value" : "3773",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This port is used by Storm DRPC for receiving DPRC requests from clients.",
            "property_name" : "drpc.port",
            "property_type" : [ ],
            "property_value" : "3772",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.queue.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "DRPC thrift server queue size.",
            "property_name" : "drpc.queue.size",
            "property_type" : [ ],
            "property_value" : "128",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.request.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The timeout on DRPC requests within the DRPC server. Defaults to 10 minutes. Note that requests can also\n       timeout based on the socket timeout on the DRPC client, and separately based on the topology message\n       timeout for the topology implementing the DRPC function.",
            "property_name" : "drpc.request.timeout.secs",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/drpc.worker.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "DRPC thrift server worker threads.",
            "property_name" : "drpc.worker.threads",
            "property_type" : [ ],
            "property_value" : "64",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/java.library.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This value is passed to spawned JVMs (e.g., Nimbus, Supervisor, and Workers)\n      for the java.library.path value. java.library.path tells the JVM where\n      to look for native libraries. It is necessary to set this config correctly since\n      Storm uses the ZeroMQ and JZMQ native libs. ",
            "property_name" : "java.library.path",
            "property_type" : [ ],
            "property_value" : "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/logviewer.appender.name",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Appender name used by log viewer to determine log directory.",
            "property_name" : "logviewer.appender.name",
            "property_type" : [ ],
            "property_value" : "A1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/logviewer.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Childopts for log viewer java process.",
            "property_name" : "logviewer.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx128m _JAAS_PLACEHOLDER",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/logviewer.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "HTTP UI port for log viewer.",
            "property_name" : "logviewer.port",
            "property_type" : [ ],
            "property_value" : "8000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This parameter is used by the storm-deploy project to configure the jvm options for the nimbus daemon.",
            "property_name" : "nimbus.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx1024m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.cleanup.inbox.freq.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often nimbus should wake the cleanup thread to clean the inbox.",
            "property_name" : "nimbus.cleanup.inbox.freq.secs",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.file.copy.expiration.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "During upload/download with the master, how long an upload or download connection is idle\n       before nimbus considers it dead and drops the connection.",
            "property_name" : "nimbus.file.copy.expiration.secs",
            "property_type" : [ ],
            "property_value" : "600",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The host that the master server is running on.",
            "property_name" : "nimbus.host",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.inbox.jar.expiration.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The length of time a jar file lives in the inbox before being deleted by the cleanup thread.\n\n       Probably keep this value greater than or equal to NIMBUS_CLEANUP_INBOX_JAR_EXPIRATION_SECS.\n       Note that the time it takes to delete an inbox jar file is going to be somewhat more than\n       NIMBUS_CLEANUP_INBOX_JAR_EXPIRATION_SECS (depending on how often NIMBUS_CLEANUP_FREQ_SECS is set to).\n      ",
            "property_name" : "nimbus.inbox.jar.expiration.secs",
            "property_type" : [ ],
            "property_value" : "3600",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.monitor.freq.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      How often nimbus should wake up to check heartbeats and do reassignments. Note\n       that if a machine ever goes down Nimbus will immediately wake up and take action.\n       This parameter is for checking for failures when there's no explicit event like that occuring.\n    ",
            "property_name" : "nimbus.monitor.freq.secs",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.reassign",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether or not nimbus should reassign tasks if it detects that a task goes down.\n       Defaults to true, and it's not recommended to change this value.",
            "property_name" : "nimbus.reassign",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.supervisor.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How long before a supervisor can go without heartbeating before nimbus considers it dead and stops assigning new work to it.",
            "property_name" : "nimbus.supervisor.timeout.secs",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.task.launch.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A special timeout used when a task is initially launched. During launch, this is the timeout\n       used until the first heartbeat, overriding nimbus.task.timeout.secs.",
            "property_name" : "nimbus.task.launch.secs",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.task.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How long without heartbeating a task can go before nimbus will consider the task dead and reassign it to another location.",
            "property_name" : "nimbus.task.timeout.secs",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.thrift.max_buffer_size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum buffer size thrift should use when reading messages.",
            "property_name" : "nimbus.thrift.max_buffer_size",
            "property_type" : [ ],
            "property_value" : "1048576",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.thrift.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " Which port the Thrift interface of Nimbus should run on. Clients should\n       connect to this port to upload jars and submit topologies.",
            "property_name" : "nimbus.thrift.port",
            "property_type" : [ ],
            "property_value" : "6627",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/nimbus.topology.validator",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A custom class that implements ITopologyValidator that is run whenever a\n       topology is submitted. Can be used to provide business-specific logic for\n       whether topologies are allowed to run or not.",
            "property_name" : "nimbus.topology.validator",
            "property_type" : [ ],
            "property_value" : "backtype.storm.nimbus.DefaultTopologyValidator",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/policy_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This user must be system user and also present at Ranger admin portal",
            "property_name" : "policy_user",
            "property_type" : [ ],
            "property_value" : "storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/ranger-storm-plugin-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable ranger storm plugin ?",
            "property_name" : "ranger-storm-plugin-enabled",
            "property_type" : [ ],
            "property_value" : "No",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "ranger-storm-plugin-properties.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.cluster.mode",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The mode this Storm cluster is running in. Either \"distributed\" or \"local\".",
            "property_name" : "storm.cluster.mode",
            "property_type" : [ ],
            "property_value" : "distributed",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.local.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A directory on the local filesystem used by Storm for any local\n       filesystem usage it needs. The directory must exist and the Storm daemons must\n       have permission to read/write from this location.",
            "property_name" : "storm.local.dir",
            "property_type" : [ ],
            "property_value" : "/hadoop/storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.local.mode.zmq",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether or not to use ZeroMQ for messaging in local mode. If this is set\n       to false, then Storm will use a pure-Java messaging system. The purpose\n       of this flag is to make it easy to run Storm in local mode by eliminating\n       the need for native dependencies, which can be difficult to install.\n    ",
            "property_name" : "storm.local.mode.zmq",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.buffer_size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The buffer size for send/recv buffer.",
            "property_name" : "storm.messaging.netty.buffer_size",
            "property_type" : [ ],
            "property_value" : "5242880",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.client_worker_threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The # of worker threads for the client.",
            "property_name" : "storm.messaging.netty.client_worker_threads",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.max_retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The max # of retries that a peer will perform when a remote is not accessible.",
            "property_name" : "storm.messaging.netty.max_retries",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.max_wait_ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The max # of milliseconds that a peer will wait.",
            "property_name" : "storm.messaging.netty.max_wait_ms",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.min_wait_ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The min # of milliseconds that a peer will wait.",
            "property_name" : "storm.messaging.netty.min_wait_ms",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.netty.server_worker_threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Netty based messaging: The # of worker threads for the server.",
            "property_name" : "storm.messaging.netty.server_worker_threads",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.messaging.transport",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The transporter for communication among Storm tasks.",
            "property_name" : "storm.messaging.transport",
            "property_type" : [ ],
            "property_value" : "backtype.storm.messaging.netty.Context",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.connection.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The connection timeout for clients to ZooKeeper.",
            "property_name" : "storm.zookeeper.connection.timeout",
            "property_type" : [ ],
            "property_value" : "15000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port Storm will use to connect to each of the ZooKeeper servers.",
            "property_name" : "storm.zookeeper.port",
            "property_type" : [ ],
            "property_value" : "2181",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.retry.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The interval between retries of a Zookeeper operation.",
            "property_name" : "storm.zookeeper.retry.interval",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.retry.intervalceiling.millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The ceiling of the interval between retries of a Zookeeper operation.",
            "property_name" : "storm.zookeeper.retry.intervalceiling.millis",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.retry.times",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of times to retry a Zookeeper operation.",
            "property_name" : "storm.zookeeper.retry.times",
            "property_type" : [ ],
            "property_value" : "5",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.root",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The root location at which Storm stores data in ZooKeeper.",
            "property_name" : "storm.zookeeper.root",
            "property_type" : [ ],
            "property_value" : "/storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.servers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A list of hosts of ZooKeeper servers used to manage the cluster.",
            "property_name" : "storm.zookeeper.servers",
            "property_type" : [ ],
            "property_value" : "['localhost']",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm.zookeeper.session.timeout",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The session timeout for clients to ZooKeeper.",
            "property_name" : "storm.zookeeper.session.timeout",
            "property_type" : [ ],
            "property_value" : "20000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "storm_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "storm_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/storm_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "storm_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "storm",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This parameter is used by the storm-deploy project to configure the jvm options for the supervisor daemon.",
            "property_name" : "supervisor.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=56431 -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.heartbeat.frequency.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often the supervisor sends a heartbeat to the master.",
            "property_name" : "supervisor.heartbeat.frequency.secs",
            "property_type" : [ ],
            "property_value" : "5",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.monitor.frequency.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often the supervisor checks the worker heartbeats to see if any of them need to be restarted.",
            "property_name" : "supervisor.monitor.frequency.secs",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.slots.ports",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A list of ports that can run workers on this supervisor. Each worker uses one port, and\n       the supervisor will only run one worker per port. Use this configuration to tune\n       how many workers run on each machine.",
            "property_name" : "supervisor.slots.ports",
            "property_type" : [ ],
            "property_value" : "[6700, 6701]",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.worker.start.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How long a worker can go without heartbeating during the initial launch before\n       the supervisor tries to restart the worker process. This value override\n       supervisor.worker.timeout.secs during launch because there is additional\n       overhead to starting and configuring the JVM on launch.",
            "property_name" : "supervisor.worker.start.timeout.secs",
            "property_type" : [ ],
            "property_value" : "120",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/supervisor.worker.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How long a worker can go without heartbeating before the supervisor tries to restart the worker process.",
            "property_name" : "supervisor.worker.timeout.secs",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/task.heartbeat.frequency.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often a task should heartbeat its status to the master.",
            "property_name" : "task.heartbeat.frequency.secs",
            "property_type" : [ ],
            "property_value" : "3",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/task.refresh.poll.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often a task should sync its connections with other tasks (if a task is\n       reassigned, the other tasks sending messages to it need to refresh their connections).\n       In general though, when a reassignment happens other tasks will be notified\n       almost immediately. This configuration is here just in case that notification doesn't\n       come through.",
            "property_name" : "task.refresh.poll.secs",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.acker.executors",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How many executors to spawn for ackers.\n\n      If this is set to 0, then Storm will immediately ack tuples as soon\n       as they come off the spout, effectively disabling reliability.\n    ",
            "property_name" : "topology.acker.executors",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.builtin.metrics.bucket.size.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The time period that builtin metrics data in bucketed into.",
            "property_name" : "topology.builtin.metrics.bucket.size.secs",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.debug",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "When set to true, Storm will log every message that's emitted.",
            "property_name" : "topology.debug",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.disruptor.wait.strategy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Configure the wait strategy used for internal queuing. Can be used to tradeoff latency\n       vs. throughput.",
            "property_name" : "topology.disruptor.wait.strategy",
            "property_type" : [ ],
            "property_value" : "com.lmax.disruptor.BlockingWaitStrategy",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.enable.message.timeouts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "True if Storm should timeout messages or not. Defaults to true. This is meant to be used\n       in unit tests to prevent tuples from being accidentally timed out during the test.",
            "property_name" : "topology.enable.message.timeouts",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.error.throttle.interval.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The interval in seconds to use for determining whether to throttle error reported to Zookeeper. For example,\n       an interval of 10 seconds with topology.max.error.report.per.interval set to 5 will only allow 5 errors to be\n       reported to Zookeeper per task for every 10 second interval of time.",
            "property_name" : "topology.error.throttle.interval.secs",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.executor.receive.buffer.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the Disruptor receive queue for each executor. Must be a power of 2.",
            "property_name" : "topology.executor.receive.buffer.size",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.executor.send.buffer.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the Disruptor send queue for each executor. Must be a power of 2.",
            "property_name" : "topology.executor.send.buffer.size",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.fall.back.on.java.serialization",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether or not to use Java serialization in a topology.",
            "property_name" : "topology.fall.back.on.java.serialization",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.kryo.factory",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Class that specifies how to create a Kryo instance for serialization. Storm will then apply\n       topology.kryo.register and topology.kryo.decorators on top of this. The default implementation\n       implements topology.fall.back.on.java.serialization and turns references off.",
            "property_name" : "topology.kryo.factory",
            "property_type" : [ ],
            "property_value" : "backtype.storm.serialization.DefaultKryoFactory",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.max.error.report.per.interval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The interval in seconds to use for determining whether to throttle error reported to Zookeeper. For example,\n       an interval of 10 seconds with topology.max.error.report.per.interval set to 5 will only allow 5 errors to be\n       reported to Zookeeper per task for every 10 second interval of time.",
            "property_name" : "topology.max.error.report.per.interval",
            "property_type" : [ ],
            "property_value" : "5",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.max.spout.pending",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum number of tuples that can be pending on a spout task at any given time.\n       This config applies to individual tasks, not to spouts or topologies as a whole.\n\n       A pending tuple is one that has been emitted from a spout but has not been acked or failed yet.\n       Note that this config parameter has no effect for unreliable spouts that don't tag\n       their tuples with a message id.",
            "property_name" : "topology.max.spout.pending",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.max.task.parallelism",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum parallelism allowed for a component in this topology. This configuration is\n       typically used in testing to limit the number of threads spawned in local mode.",
            "property_name" : "topology.max.task.parallelism",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.message.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time given to the topology to fully process a message\n       emitted by a spout. If the message is not acked within this time frame, Storm\n       will fail the message on the spout. Some spouts implementations will then replay\n       the message at a later time.",
            "property_name" : "topology.message.timeout.secs",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.optimize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether or not the master should optimize topologies by running multiple tasks in a single thread where appropriate.",
            "property_name" : "topology.optimize",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.receiver.buffer.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum number of messages to batch from the thread receiving off the network to the\n       executor queues. Must be a power of 2.",
            "property_name" : "topology.receiver.buffer.size",
            "property_type" : [ ],
            "property_value" : "8",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.skip.missing.kryo.registrations",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " Whether or not Storm should skip the loading of kryo registrations for which it\n       does not know the class or have the serializer implementation. Otherwise, the task will\n       fail to load and will throw an error at runtime. The use case of this is if you want to\n       declare your serializations on the storm.yaml files on the cluster rather than every single\n       time you submit a topology. Different applications may use different serializations and so\n       a single application may not have the code for the other serializers used by other apps.\n       By setting this config to true, Storm will ignore that it doesn't have those other serializations\n       rather than throw an error.",
            "property_name" : "topology.skip.missing.kryo.registrations",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.sleep.spout.wait.strategy.time.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of milliseconds the SleepEmptyEmitStrategy should sleep for.",
            "property_name" : "topology.sleep.spout.wait.strategy.time.ms",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.spout.wait.strategy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "A class that implements a strategy for what to do when a spout needs to wait. Waiting is\n       triggered in one of two conditions:\n\n       1. nextTuple emits no tuples\n       2. The spout has hit maxSpoutPending and can't emit any more tuples",
            "property_name" : "topology.spout.wait.strategy",
            "property_type" : [ ],
            "property_value" : "backtype.storm.spout.SleepSpoutWaitStrategy",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.state.synchronization.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time a component gives a source of state to synchronize before it requests\n       synchronization again.",
            "property_name" : "topology.state.synchronization.timeout.secs",
            "property_type" : [ ],
            "property_value" : "60",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.stats.sample.rate",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The percentage of tuples to sample to produce stats for a task.",
            "property_name" : "topology.stats.sample.rate",
            "property_type" : [ ],
            "property_value" : "0.05",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.tick.tuple.freq.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often a tick tuple from the \"__system\" component and \"__tick\" stream should be sent\n       to tasks. Meant to be used as a component-specific configuration.",
            "property_name" : "topology.tick.tuple.freq.secs",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.transfer.buffer.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the Disruptor transfer queue for each worker.",
            "property_name" : "topology.transfer.buffer.size",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.trident.batch.emit.interval.millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often a batch can be emitted in a Trident topology.",
            "property_name" : "topology.trident.batch.emit.interval.millis",
            "property_type" : [ ],
            "property_value" : "500",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.tuple.serializer",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The serializer class for ListDelegate (tuple payload).\n       The default serializer will be ListDelegateSerializer",
            "property_name" : "topology.tuple.serializer",
            "property_type" : [ ],
            "property_value" : "backtype.storm.serialization.types.ListDelegateSerializer",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.worker.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Topology-specific options for the worker child process. This is used in addition to WORKER_CHILDOPTS.",
            "property_name" : "topology.worker.childopts",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.worker.shared.thread.pool.size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the shared thread pool for worker tasks to make use of. The thread pool can be accessed\n       via the TopologyContext.",
            "property_name" : "topology.worker.shared.thread.pool.size",
            "property_type" : [ ],
            "property_value" : "4",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/topology.workers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How many processes should be spawned around the cluster to execute this\n       topology. Each process will execute some number of tasks as threads within\n       them. This parameter should be used in conjunction with the parallelism hints\n       on each component in the topology to tune the performance of a topology.",
            "property_name" : "topology.workers",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/transactional.zookeeper.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The port to use to connect to the transactional zookeeper servers. If null (which is default),\n       will use storm.zookeeper.port",
            "property_name" : "transactional.zookeeper.port",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/transactional.zookeeper.root",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The root directory in ZooKeeper for metadata about TransactionalSpouts.",
            "property_name" : "transactional.zookeeper.root",
            "property_type" : [ ],
            "property_value" : "/transactional",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/transactional.zookeeper.servers",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The list of zookeeper servers in which to keep the transactional state. If null (which is default),\n       will use storm.zookeeper.servers",
            "property_name" : "transactional.zookeeper.servers",
            "property_type" : [ ],
            "property_value" : "null",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/ui.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Childopts for Storm UI Java process.",
            "property_name" : "ui.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx768m _JAAS_PLACEHOLDER",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/ui.port",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Storm UI binds to this port.",
            "property_name" : "ui.port",
            "property_type" : [ ],
            "property_value" : "8744",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/worker.childopts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The jvm opts provided to workers launched by this supervisor. All \\\"%ID%\\\" substrings are replaced with an identifier for this worker.",
            "property_name" : "worker.childopts",
            "property_type" : [ ],
            "property_value" : "-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/worker.heartbeat.frequency.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often this worker should heartbeat to the supervisor.",
            "property_name" : "worker.heartbeat.frequency.secs",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/zmq.hwm",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The high water for the ZeroMQ push sockets used for networking. Use this config to prevent buffer explosion\n       on the networking layer.",
            "property_name" : "zmq.hwm",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/zmq.linger.millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How long a connection should retry sending messages to a target host when\n       the connection is closed. This is an advanced configuration and can almost\n       certainly be ignored.",
            "property_name" : "zmq.linger.millis",
            "property_type" : [ ],
            "property_value" : "5000",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/STORM/configurations/zmq.threads",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of threads that should be used by the zeromq context in each worker process.",
            "property_name" : "zmq.threads",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "STORM",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "storm-site.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ",
      "StackServices" : {
        "service_name" : "TEZ",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "tez-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "tez-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "true",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for tez-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n# Tez specific configuration\nexport TEZ_CONF_DIR={{config_dir}}\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\n    ",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.am-rm.heartbeat.interval-ms.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum heartbeat interval between the AM and RM in milliseconds",
            "property_name" : "tez.am.am-rm.heartbeat.interval-ms.max",
            "property_type" : [ ],
            "property_value" : "250",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.idle.release-timeout-max.millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time to hold on to a container if no task can be assigned to it immediately. Only active when reuse is enabled.",
            "property_name" : "tez.am.container.idle.release-timeout-max.millis",
            "property_type" : [ ],
            "property_value" : "20000",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.idle.release-timeout-min.millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The minimum amount of time to hold on to a container that is idle. Only active when reuse is enabled.",
            "property_name" : "tez.am.container.idle.release-timeout-min.millis",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.reuse.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Configuration to specify whether container should be reused",
            "property_name" : "tez.am.container.reuse.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.reuse.locality.delay-allocation-millis",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of time to wait before assigning a container to the next level of\n      locality. NODE -> RACK -> NON_LOCAL\n    ",
            "property_name" : "tez.am.container.reuse.locality.delay-allocation-millis",
            "property_type" : [ ],
            "property_value" : "250",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.reuse.non-local-fallback.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to reuse containers for non-local tasks. Active only if reuse is enabled\n    ",
            "property_name" : "tez.am.container.reuse.non-local-fallback.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.container.reuse.rack-fallback.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to reuse containers for rack local tasks. Active only if reuse is enabled\n    ",
            "property_name" : "tez.am.container.reuse.rack-fallback.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.launch.cluster-default.cmd-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Cluster default Java options for the Tez AppMaster process. These will be prepended to the properties specified via tez.am.launch.cmd-opts",
            "property_name" : "tez.am.launch.cluster-default.cmd-opts",
            "property_type" : [ ],
            "property_value" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.launch.cmd-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Java options for the Tez AppMaster process. The Xmx value is derived based on tez.am.resource.memory.mb and is 80% of the value by default.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.am.launch.cmd-opts",
            "property_type" : [ ],
            "property_value" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.launch.env",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n        Additional execution environment entries for tez. This is not an additive property. You must preserve the original value if\n        you want to have access to native libraries.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.am.launch.env",
            "property_type" : [ ],
            "property_value" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.log.level",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Root Logging level passed to the Tez app master",
            "property_name" : "tez.am.log.level",
            "property_type" : [ ],
            "property_value" : "INFO",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.max.app.attempts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Specifies the total number of time the app master will run in case recovery is triggered",
            "property_name" : "tez.am.max.app.attempts",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.maxtaskfailures.per.node",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum number of allowed task attempt failures on a node before\n      it gets marked as blacklisted\n    ",
            "property_name" : "tez.am.maxtaskfailures.per.node",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.resource.memory.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of memory to be used by the AppMaster.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.am.resource.memory.mb",
            "property_type" : [ ],
            "property_value" : "1536",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.am.tez-ui.history-url.template",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Template to generate the History URL for a particular Tez Application.\n       Template replaces __APPLICATION_ID__ with the actual applicationId and\n       __HISTORY_URL_BASE__ with the value from the tez.tez-ui.history-url.base config property\n    ",
            "property_name" : "tez.am.tez-ui.history-url.template",
            "property_type" : [ ],
            "property_value" : "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.cluster.additional.classpath.prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "tez.cluster.additional.classpath.prefix",
            "property_type" : [ ],
            "property_value" : "/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.counters.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of allowed counters for the executing DAG",
            "property_name" : "tez.counters.max",
            "property_type" : [ ],
            "property_value" : "2000",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.counters.max.groups",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The number of allowed counter groups for the executing DAG",
            "property_name" : "tez.counters.max.groups",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.generate.debug.artifacts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Generate debug artifacts such as a text representation of the submitted DAG plan",
            "property_name" : "tez.generate.debug.artifacts",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.grouping.max-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Upper bound on the size (in bytes) of a grouped split, to avoid generating\n      excessively large split\n    ",
            "property_name" : "tez.grouping.max-size",
            "property_type" : [ ],
            "property_value" : "1073741824",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.grouping.min-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Lower bound on the size (in bytes) of a grouped split, to avoid generating\n      too many splits\n    ",
            "property_name" : "tez.grouping.min-size",
            "property_type" : [ ],
            "property_value" : "16777216",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.grouping.split-waves",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The multiplier for available queue capacity when determining number of tasks for\n      a Vertex. 1.7 with 100% queue available implies generating a number of tasks roughly equal\n      to 170% of the available containers on the queue\n    ",
            "property_name" : "tez.grouping.split-waves",
            "property_type" : [ ],
            "property_value" : "1.7",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.history.logging.service.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The class to be used for logging history data.\n      Set to org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService to log to ATS\n      Set to org.apache.tez.dag.history.logging.impl.SimpleHistoryLoggingService to log to the filesystem specified by ${fs.defaultFS}\n    ",
            "property_name" : "tez.history.logging.service.class",
            "property_type" : [ ],
            "property_value" : "org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.lib.uris",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Comma-delimited list of the location of the Tez libraries which will be localized for DAGs.\n      Specifying a single .tar.gz or .tgz assumes that a compressed version of the tez libs is being used. This is uncompressed into a tezlibs directory when running containers, and tezlibs/;tezlibs/lib/ are added to the classpath (after . and .*).\n      If multiple files are specified - files are localized as regular files, contents of directories are localized as regular files (non-recursive).\n    ",
            "property_name" : "tez.lib.uris",
            "property_type" : [ ],
            "property_value" : "/hdp/apps/${hdp.version}/tez/tez.tar.gz",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.runtime.compress",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether intermediate data should be compressed or not",
            "property_name" : "tez.runtime.compress",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.runtime.compress.codec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The coded to be used if compressing intermediate data. Only\n      applicable if tez.runtime.compress is enabled\n    ",
            "property_name" : "tez.runtime.compress.codec",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.io.compress.SnappyCodec",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.runtime.convert.user-payload.to.history-text",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to publish configuration information to History logger",
            "property_name" : "tez.runtime.convert.user-payload.to.history-text",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.runtime.io.sort.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the sort buffer when output needs to be sorted",
            "property_name" : "tez.runtime.io.sort.mb",
            "property_type" : [ ],
            "property_value" : "512",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.runtime.unordered.output.buffer.size-mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The size of the buffer when output does not require to be sorted",
            "property_name" : "tez.runtime.unordered.output.buffer.size-mb",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.session.am.dag.submit.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time (in seconds) for which the Tez AM should wait for a DAG to be submitted\n      before shutting down\n    ",
            "property_name" : "tez.session.am.dag.submit.timeout.secs",
            "property_type" : [ ],
            "property_value" : "300",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.session.client.timeout.secs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time (in seconds) to wait for AM to come up when trying to submit a DAG from\n      the client\n    ",
            "property_name" : "tez.session.client.timeout.secs",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.shuffle-vertex-manager.max-src-fraction",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "In case of a ScatterGather connection, once this fraction of source tasks have\n      completed, all tasks on the current vertex can be scheduled. Number of tasks ready for\n      scheduling on the current vertex scales linearly between min-fraction and max-fraction\n    ",
            "property_name" : "tez.shuffle-vertex-manager.max-src-fraction",
            "property_type" : [ ],
            "property_value" : "0.4",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.shuffle-vertex-manager.min-src-fraction",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "In case of a ScatterGather connection, the fraction of source tasks which should\n      complete before tasks for the current vertex are schedule\n    ",
            "property_name" : "tez.shuffle-vertex-manager.min-src-fraction",
            "property_type" : [ ],
            "property_value" : "0.2",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.staging-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The staging dir used while submitting DAGs",
            "property_name" : "tez.staging-dir",
            "property_type" : [ ],
            "property_value" : "/tmp/${user.name}/staging",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.am.heartbeat.counter.interval-ms.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time interval at which task counters are sent to the AM",
            "property_name" : "tez.task.am.heartbeat.counter.interval-ms.max",
            "property_type" : [ ],
            "property_value" : "4000",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.get-task.sleep.interval-ms.max",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum amount of time, in seconds, to wait before a task asks an AM for\n      another task\n    ",
            "property_name" : "tez.task.get-task.sleep.interval-ms.max",
            "property_type" : [ ],
            "property_value" : "200",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.launch.cluster-default.cmd-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Cluster default Java options for tasks. These will be prepended to the properties specified via tez.task.launch.cmd-opts",
            "property_name" : "tez.task.launch.cluster-default.cmd-opts",
            "property_type" : [ ],
            "property_value" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.launch.cmd-opts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Java options for tasks. The Xmx value is derived based on tez.task.resource.memory.mb and is 80% of this value by default.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.task.launch.cmd-opts",
            "property_type" : [ ],
            "property_value" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.launch.env",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Additional execution environment entries for tez. This is not an additive property. You must preserve the original value if\n      you want to have access to native libraries.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.task.launch.env",
            "property_type" : [ ],
            "property_value" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.max-events-per-heartbeat",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum number of of events to fetch from the AM by the tasks in a single heartbeat.",
            "property_name" : "tez.task.max-events-per-heartbeat",
            "property_type" : [ ],
            "property_value" : "500",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.task.resource.memory.mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of memory to be used by launched tasks.\n      Used only if the value is not specified explicitly by the DAG definition.\n    ",
            "property_name" : "tez.task.resource.memory.mb",
            "property_type" : [ ],
            "property_value" : "1536",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez.use.cluster.hadoop-libs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This being true implies that the deployment is relying on hadoop jars being available on the cluster on all nodes.",
            "property_name" : "tez.use.cluster.hadoop-libs",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/TEZ/configurations/tez_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "tez_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "tez",
            "service_name" : "TEZ",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "tez-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN",
      "StackServices" : {
        "service_name" : "YARN",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "capacity-scheduler" : {
            "supports" : {
              "adding_forbidden" : "true",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "yarn-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "yarn-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "yarn-site" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "true"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/apptimelineserver_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max heapsize for AppTimelineServer using a numerical value in the scale of MB",
            "property_name" : "apptimelineserver_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n    ",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for yarn-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# resolve links - $0 may be a softlink\nexport YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n  #echo \"run java in $JAVA_HOME\"\n  JAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\n  echo \"Error: JAVA_HOME is not set.\"\n  exit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n  JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_RESOURCEMANAGER_OPTS=\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the HistoryManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_HISTORYSERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_NODEMANAGER_OPTS=\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$YARN_LOG_DIR\" = \"\" ]; then\n  YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$YARN_LOGFILE\" = \"\" ]; then\n  YARN_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\n  YARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nif [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n  YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\nfi\nYARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n    ",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/hadoop.registry.rm.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Is the registry enabled: does the RM start it up, create the user and system paths, and purge service records when containers, application attempts and applications complete\n    ",
            "property_name" : "hadoop.registry.rm.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/hadoop.registry.zk.quorum",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      List of hostname:port pairs defining the zookeeper quorum binding for the registry\n    ",
            "property_name" : "hadoop.registry.zk.quorum",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/min_user_id",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Set to 0 to disallow root from submitting jobs. Set to 1000 to disallow all superusers from submitting jobs",
            "property_name" : "min_user_id",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/nodemanager_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max heapsize for NodeManager using a numerical value in the scale of MB",
            "property_name" : "nodemanager_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/resourcemanager_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max heapsize for ResourceManager using a numerical value in the scale of MB",
            "property_name" : "resourcemanager_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.acl.enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " Are acls enabled. ",
            "property_name" : "yarn.acl.enable",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.admin.acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " ACL of who can be admin of the YARN cluster. ",
            "property_name" : "yarn.admin.acl",
            "property_type" : [ ],
            "property_value" : "",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.application.classpath",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Classpath for typical applications.",
            "property_name" : "yarn.application.classpath",
            "property_type" : [ ],
            "property_value" : "$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.client.nodemanager-connect.max-wait-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max time to wait to establish a connection to NM",
            "property_name" : "yarn.client.nodemanager-connect.max-wait-ms",
            "property_type" : [ ],
            "property_value" : "60000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.client.nodemanager-connect.retry-interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time interval between each attempt to connect to NM",
            "property_name" : "yarn.client.nodemanager-connect.retry-interval-ms",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.http.policy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This configures the HTTP endpoint for Yarn Daemons.The following values are supported: - HTTP_ONLY : Service is provided only on http - HTTPS_ONLY : Service is provided only on https\n    ",
            "property_name" : "yarn.http.policy",
            "property_type" : [ ],
            "property_value" : "HTTP_ONLY",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.log-aggregation-enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Whether to enable log aggregation. ",
            "property_name" : "yarn.log-aggregation-enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.log-aggregation.retain-seconds",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      How long to keep aggregation logs before deleting them. -1 disables.\n      Be careful set this too small and you will spam the name node.\n    ",
            "property_name" : "yarn.log-aggregation.retain-seconds",
            "property_type" : [ ],
            "property_value" : "2592000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.log.server.url",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      URI for the HistoryServer's log resource\n    ",
            "property_name" : "yarn.log.server.url",
            "property_type" : [ ],
            "property_value" : "http://localhost:19888/jobhistory/logs",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.node-labels.fs-store.retry-policy-spec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.node-labels.fs-store.retry-policy-spec",
            "property_type" : [ ],
            "property_value" : "2000, 500",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.node-labels.fs-store.root-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.node-labels.fs-store.root-dir",
            "property_type" : [ ],
            "property_value" : "/system/yarn/node-labels",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.node-labels.manager-class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If user want to enable this feature, specify it to \"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager",
            "property_name" : "yarn.node-labels.manager-class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The address of the container manager in the NM.",
            "property_name" : "yarn.nodemanager.address",
            "property_type" : [ ],
            "property_value" : "0.0.0.0:45454",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.admin-env",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Environment variables that should be forwarded from the NodeManager's\n      environment to the container's.\n    ",
            "property_name" : "yarn.nodemanager.admin-env",
            "property_type" : [ ],
            "property_value" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.aux-services",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Auxilliary services of NodeManager. A valid service name should only contain a-zA-Z0-9_ and can\n      not start with numbers",
            "property_name" : "yarn.nodemanager.aux-services",
            "property_type" : [ ],
            "property_value" : "mapreduce_shuffle",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.aux-services.mapreduce_shuffle.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The auxiliary service class to use ",
            "property_name" : "yarn.nodemanager.aux-services.mapreduce_shuffle.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.mapred.ShuffleHandler",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.bind-host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default value is 0.0.0.0, when this is set the service will bind on all interfaces.  I think these two options (blank, \"0.0.0.0\" sans quotes) should be the two available values, with blank as the default.",
            "property_name" : "yarn.nodemanager.bind-host",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.container-executor.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ContainerExecutor for launching containers",
            "property_name" : "yarn.nodemanager.container-executor.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.container-monitor.interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The interval, in milliseconds, for which the node manager\n      waits  between two cycles of monitoring its containers' memory usage.\n    ",
            "property_name" : "yarn.nodemanager.container-monitor.interval-ms",
            "property_type" : [ ],
            "property_value" : "3000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.delete.debug-delay-sec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Number of seconds after an application finishes before the nodemanager's\n      DeletionService will delete the application's localized file directory\n      and log directory.\n\n      To diagnose Yarn application problems, set this property's value large\n      enough (for example, to 600 = 10 minutes) to permit examination of these\n      directories. After changing the property's value, you must restart the\n      nodemanager in order for it to have an effect.\n\n      The roots of Yarn applications' work directories is configurable with\n      the yarn.nodemanager.local-dirs property (see below), and the roots\n      of the Yarn applications' log directories is configurable with the\n      yarn.nodemanager.log-dirs property (see also below).\n    ",
            "property_name" : "yarn.nodemanager.delete.debug-delay-sec",
            "property_type" : [ ],
            "property_value" : "0",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is related to disk size on the machines, admins should set one of yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb or yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage but not both. If both are set, the more conservative value will be used",
            "property_name" : "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage",
            "property_type" : [ ],
            "property_value" : "90",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is related to disk size on the machines, admins should set one of yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb or yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage but not both. If both are set, the more conservative value will be used",
            "property_name" : "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.disk-health-checker.min-healthy-disks",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The minimum fraction of number of disks to be healthy for the nodemanager\n      to launch new containers. This correspond to both\n      yarn-nodemanager.local-dirs and yarn.nodemanager.log-dirs. i.e.\n      If there are less number of healthy local-dirs (or log-dirs) available,\n      then new containers will not be launched on this node.\n    ",
            "property_name" : "yarn.nodemanager.disk-health-checker.min-healthy-disks",
            "property_type" : [ ],
            "property_value" : "0.25",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.health-checker.interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Frequency of running node health script.",
            "property_name" : "yarn.nodemanager.health-checker.interval-ms",
            "property_type" : [ ],
            "property_value" : "135000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.health-checker.script.timeout-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Script time out period.",
            "property_name" : "yarn.nodemanager.health-checker.script.timeout-ms",
            "property_type" : [ ],
            "property_value" : "60000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.linux-container-executor.cgroups.hierarchy",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Name of the Cgroups hierarchy under which all YARN jobs will be launched",
            "property_name" : "yarn.nodemanager.linux-container-executor.cgroups.hierarchy",
            "property_type" : [ ],
            "property_value" : "hadoop-yarn",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.linux-container-executor.cgroups.mount",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "If true, YARN will automount the CGroup, however the directory needs to already exist; else, the cgroup should be mounted by the admin",
            "property_name" : "yarn.nodemanager.linux-container-executor.cgroups.mount",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Strictly limit CPU resource usage to allocated usage even if spare CPU is available",
            "property_name" : "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.linux-container-executor.group",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Unix group of the NodeManager",
            "property_name" : "yarn.nodemanager.linux-container-executor.group",
            "property_type" : [ ],
            "property_value" : "hadoop",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.linux-container-executor.resources-handler.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Pre-requisite to use CGroups",
            "property_name" : "yarn.nodemanager.linux-container-executor.resources-handler.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.local-dirs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      List of directories to store localized files in. An\n      application's localized file directory will be found in:\n      ${yarn.nodemanager.local-dirs}/usercache/${user}/appcache/application_${appid}.\n      Individual containers' work directories, called container_${contid}, will\n      be subdirectories of this.\n    ",
            "property_name" : "yarn.nodemanager.local-dirs",
            "property_type" : [ ],
            "property_value" : "/hadoop/yarn/local",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log-aggregation.compression-type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      T-file compression types used to compress aggregated logs.\n    ",
            "property_name" : "yarn.nodemanager.log-aggregation.compression-type",
            "property_type" : [ ],
            "property_value" : "gz",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log-aggregation.debug-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This configuration is for debug and test purpose.\n      By setting this configuration as true.\n      We can break the lower bound of yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds",
            "property_name" : "yarn.nodemanager.log-aggregation.debug-enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log-aggregation.num-log-files-per-app",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is temporary solution. The configuration will be deleted once, we find a more scalable method to only write a single log file per LRS.",
            "property_name" : "yarn.nodemanager.log-aggregation.num-log-files-per-app",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Defines how often NMs wake up to upload log files. The default value is -1. By default, the logs will be uploaded whenthe application is finished. By setting this configure, logs can be uploaded periodically when the application is running. The minimum rolling-interval-seconds can be set is 3600.",
            "property_name" : "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log-dirs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Where to store container logs. An application's localized log directory\n      will be found in ${yarn.nodemanager.log-dirs}/application_${appid}.\n      Individual containers' log directories will be below this, in directories\n      named container_{$contid}. Each container directory will contain the files\n      stderr, stdin, and syslog generated by that container.\n    ",
            "property_name" : "yarn.nodemanager.log-dirs",
            "property_type" : [ ],
            "property_value" : "/hadoop/yarn/log",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.log.retain-second",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Time in seconds to retain user logs. Only applicable if\n      log aggregation is disabled.\n    ",
            "property_name" : "yarn.nodemanager.log.retain-second",
            "property_type" : [ ],
            "property_value" : "604800",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.recovery.dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The local filesystem directory in which the node manager will store\n      state when recovery is enabled.\n    ",
            "property_name" : "yarn.nodemanager.recovery.dir",
            "property_type" : [ ],
            "property_value" : "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.recovery.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Enable the node manager to recover after starting",
            "property_name" : "yarn.nodemanager.recovery.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.remote-app-log-dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Location to aggregate logs to. ",
            "property_name" : "yarn.nodemanager.remote-app-log-dir",
            "property_type" : [ ],
            "property_value" : "/app-logs",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.remote-app-log-dir-suffix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The remote log dir will be created at\n      {yarn.nodemanager.remote-app-log-dir}/${user}/{thisParam}.\n    ",
            "property_name" : "yarn.nodemanager.remote-app-log-dir-suffix",
            "property_type" : [ ],
            "property_value" : "logs",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.resource.cpu-vcores",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.nodemanager.resource.cpu-vcores",
            "property_type" : [ ],
            "property_value" : "8",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.resource.memory-mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Amount of physical memory, in MB, that can be allocated\n      for containers.",
            "property_name" : "yarn.nodemanager.resource.memory-mb",
            "property_type" : [ ],
            "property_value" : "5120",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.resource.percentage-physical-cpu-limit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The amount of CPU allocated for YARN containers - only effective when used with CGroups",
            "property_name" : "yarn.nodemanager.resource.percentage-physical-cpu-limit",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.vmem-check-enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Whether virtual memory limits will be enforced for containers.\n    ",
            "property_name" : "yarn.nodemanager.vmem-check-enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.nodemanager.vmem-pmem-ratio",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ratio between virtual memory to physical memory when\n      setting memory limits for containers. Container allocations are\n      expressed in terms of physical memory, and virtual memory usage\n      is allowed to exceed this allocation by this ratio.\n    ",
            "property_name" : "yarn.nodemanager.vmem-pmem-ratio",
            "property_type" : [ ],
            "property_value" : "2.1",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The address of the applications manager interface in the\n      RM.\n    ",
            "property_name" : "yarn.resourcemanager.address",
            "property_type" : [ ],
            "property_value" : "localhost:8050",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.admin.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The address of the RM admin interface.",
            "property_name" : "yarn.resourcemanager.admin.address",
            "property_type" : [ ],
            "property_value" : "localhost:8141",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.am.max-attempts",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum number of application attempts. It's a global\n      setting for all application masters. Each application master can specify\n      its individual maximum number of application attempts via the API, but the\n      individual number cannot be more than the global upper bound. If it is,\n      the resourcemanager will override it. The default number is set to 2, to\n      allow at least one retry for AM.\n    ",
            "property_name" : "yarn.resourcemanager.am.max-attempts",
            "property_type" : [ ],
            "property_value" : "2",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.bind-host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default value is 0.0.0.0, when this is set the service will bind on all interfaces.  I think these two options (blank, \"0.0.0.0\" sans quotes) should be the two available values, with blank as the default.",
            "property_name" : "yarn.resourcemanager.bind-host",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.connect.max-wait.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Maximum time to wait to establish connection to ResourceManager",
            "property_name" : "yarn.resourcemanager.connect.max-wait.ms",
            "property_type" : [ ],
            "property_value" : "900000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.connect.retry-interval.ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "How often to try connecting to the ResourceManager.",
            "property_name" : "yarn.resourcemanager.connect.retry-interval.ms",
            "property_type" : [ ],
            "property_value" : "30000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.fs.state-store.retry-policy-spec",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "hdfs client retry policy specification. hdfs client retry is always enabled. Specified in pairs of sleep-time and number-of-retries and (t0, n0), (t1, n1), ..., the first n0 retries sleep t0 milliseconds on average, the following n1 retries sleep t1 milliseconds on average, and so on.",
            "property_name" : "yarn.resourcemanager.fs.state-store.retry-policy-spec",
            "property_type" : [ ],
            "property_value" : "2000, 500",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.fs.state-store.uri",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "RI pointing to the location of the FileSystem path where RM state will be stored. This must be supplied when using org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore as the value for yarn.resourcemanager.store.class ",
            "property_name" : "yarn.resourcemanager.fs.state-store.uri",
            "property_type" : [ ],
            "property_value" : " ",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.ha.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "enable RM HA or not",
            "property_name" : "yarn.resourcemanager.ha.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.hostname",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The hostname of the RM.",
            "property_name" : "yarn.resourcemanager.hostname",
            "property_type" : [ ],
            "property_value" : "localhost",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.nodes.exclude-path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Names a file that contains a list of hosts that are\n      not permitted to connect to the resource manager.  The full pathname of the\n      file must be specified.  If the value is empty, no hosts are\n      excluded.\n    ",
            "property_name" : "yarn.resourcemanager.nodes.exclude-path",
            "property_type" : [ ],
            "property_value" : "/etc/hadoop/conf/yarn.exclude",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.recovery.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enable RM to recover state after starting.\n      If true, then yarn.resourcemanager.store.class must be specified.\n    ",
            "property_name" : "yarn.resourcemanager.recovery.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.resource-tracker.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : " The address of ResourceManager. ",
            "property_name" : "yarn.resourcemanager.resource-tracker.address",
            "property_type" : [ ],
            "property_value" : "localhost:8025",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.scheduler.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The address of the scheduler interface.",
            "property_name" : "yarn.resourcemanager.scheduler.address",
            "property_type" : [ ],
            "property_value" : "localhost:8030",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.scheduler.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The class to use as the resource scheduler.",
            "property_name" : "yarn.resourcemanager.scheduler.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.state-store.max-completed-applications",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The maximum number of completed applications RM state store keeps, less than or equals to ${yarn.resourcemanager.max-completed-applications}. By default, it equals to ${yarn.resourcemanager.max-completed-applications}. This ensures that the applications kept in the state store are consistent with the applications remembered in RM memory. Any values larger than ${yarn.resourcemanager.max-completed-applications} will be reset to ${yarn.resourcemanager.max-completed-applications}. Note that this value impacts the RM recovery performance.Typically,  a smaller value indicates better performance on RM recovery.",
            "property_name" : "yarn.resourcemanager.state-store.max-completed-applications",
            "property_type" : [ ],
            "property_value" : "${yarn.resourcemanager.max-completed-applications}",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.store.class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The class to use as the persistent store.\n      If org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore is used,\n      the store is implicitly fenced; meaning a single ResourceManager\n      is able to use the store at any point in time.\n    ",
            "property_name" : "yarn.resourcemanager.store.class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.system-metrics-publisher.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.resourcemanager.system-metrics-publisher.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.webapp.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The address of the RM web application.\n    ",
            "property_name" : "yarn.resourcemanager.webapp.address",
            "property_type" : [ ],
            "property_value" : "localhost:8088",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Flag to enable override of the default kerberos authentication filter with\n      the RM authentication filter to allow authentication using delegation\n      tokens(fallback to kerberos if the tokens are missing).\n      Only applicable when the http authentication type is kerberos.\n    ",
            "property_name" : "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled",
            "property_type" : [ ],
            "property_value" : "false",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.webapp.https.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The https address of the RM web application.\n    ",
            "property_name" : "yarn.resourcemanager.webapp.https.address",
            "property_type" : [ ],
            "property_value" : "localhost:8090",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.work-preserving-recovery.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enable RM work preserving recovery. This configuration is private to YARN for experimenting the feature.\n    ",
            "property_name" : "yarn.resourcemanager.work-preserving-recovery.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Set the amount of time RM waits before allocating new containers on work-preserving-recovery. Such wait period gives RM a chance to settle down resyncing with NMs in the cluster on recovery, before assigning new containers to applications.",
            "property_name" : "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-acl",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ACL's to be used for ZooKeeper znodes.",
            "property_name" : "yarn.resourcemanager.zk-acl",
            "property_type" : [ ],
            "property_value" : "world:anyone:rwcda ",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      List Host:Port of the ZooKeeper servers to be used by the RM. comma separated host:port pairs, each corresponding to a zk server. e.g. \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\" If the optional chroot suffix is used the example would look like: \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\" where the client would be rooted at \"/app/a\" and all paths would be relative to this root - ie getting/setting/etc...  \"/foo/bar\" would result in operations being run on \"/app/a/foo/bar\" (from the server perspective).\n    ",
            "property_name" : "yarn.resourcemanager.zk-address",
            "property_type" : [ ],
            "property_value" : "localhost:2181",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-num-retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Number of times RM tries to connect to ZooKeeper.",
            "property_name" : "yarn.resourcemanager.zk-num-retries",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-retry-interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\"Retry interval in milliseconds when connecting to ZooKeeper.\n      When HA is enabled, the value here is NOT used. It is generated\n      automatically from yarn.resourcemanager.zk-timeout-ms and\n      yarn.resourcemanager.zk-num-retries.\"\n    ",
            "property_name" : "yarn.resourcemanager.zk-retry-interval-ms",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-state-store.parent-path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Full path of the ZooKeeper znode where RM state will be stored. This must be supplied when using org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore as the value for yarn.resourcemanager.store.class",
            "property_name" : "yarn.resourcemanager.zk-state-store.parent-path",
            "property_type" : [ ],
            "property_value" : "/rmstore",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.resourcemanager.zk-timeout-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper session timeout in milliseconds. Session expiration is managed by the ZooKeeper cluster itself, not by the client. This value is used by the cluster to determine when the client's session expires. Expirations happens when the cluster does not hear from the client within the specified session timeout period (i.e. no heartbeat).",
            "property_name" : "yarn.resourcemanager.zk-timeout-ms",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.default.minimum-user-limit-percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Default minimum queue resource limit depends on the number of users who have submitted applications.\n    ",
            "property_name" : "yarn.scheduler.capacity.default.minimum-user-limit-percent",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.maximum-am-resource-percent",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Maximum percent of resources in the cluster which can be used to run \n      application masters i.e. controls number of concurrent running\n      applications.\n    ",
            "property_name" : "yarn.scheduler.capacity.maximum-am-resource-percent",
            "property_type" : [ ],
            "property_value" : "0.2",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.maximum-applications",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Maximum number of applications that can be pending and running.\n    ",
            "property_name" : "yarn.scheduler.capacity.maximum-applications",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.node-locality-delay",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Number of missed scheduling opportunities after which the CapacityScheduler\n      attempts to schedule rack-local containers.\n      Typically this should be set to number of nodes in the cluster, By default is setting\n      approximately number of nodes in one rack which is 40.\n    ",
            "property_name" : "yarn.scheduler.capacity.node-locality-delay",
            "property_type" : [ ],
            "property_value" : "40",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.resource-calculator",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.scheduler.capacity.resource-calculator",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.accessible-node-labels",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.scheduler.capacity.root.accessible-node-labels",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.accessible-node-labels.default.capacity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.scheduler.capacity.root.accessible-node-labels.default.capacity",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.accessible-node-labels.default.maximum-capacity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.scheduler.capacity.root.accessible-node-labels.default.maximum-capacity",
            "property_type" : [ ],
            "property_value" : "-1",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.acl_administer_queue",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The ACL for who can administer this queue i.e. change sub-queue \n      allocations.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.acl_administer_queue",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.capacity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The total capacity as a percentage out of 100 for this queue.\n      If it has child queues then this includes their capacity as well.\n      The child queues capacity should add up to their parent queue's capacity\n      or less.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.capacity",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default-node-label-expression",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.scheduler.capacity.root.default-node-label-expression",
            "property_type" : [ ],
            "property_value" : " ",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.acl_administer_jobs",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The ACL of who can administer jobs on the default queue.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.default.acl_administer_jobs",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.acl_submit_applications",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The ACL of who can submit jobs to the default queue.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.default.acl_submit_applications",
            "property_type" : [ ],
            "property_value" : "*",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.capacity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default queue target capacity.",
            "property_name" : "yarn.scheduler.capacity.root.default.capacity",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.maximum-capacity",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum capacity of the default queue. \n    ",
            "property_name" : "yarn.scheduler.capacity.root.default.maximum-capacity",
            "property_type" : [ ],
            "property_value" : "100",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.state",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The state of the default queue. State can be one of RUNNING or STOPPED.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.default.state",
            "property_type" : [ ],
            "property_value" : "RUNNING",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.default.user-limit-factor",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Default queue user limit a percentage from 0.0 to 1.0.\n    ",
            "property_name" : "yarn.scheduler.capacity.root.default.user-limit-factor",
            "property_type" : [ ],
            "property_value" : "1",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.capacity.root.queues",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The queues at the this level (root is the root queue).\n    ",
            "property_name" : "yarn.scheduler.capacity.root.queues",
            "property_type" : [ ],
            "property_value" : "default",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "capacity-scheduler.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.maximum-allocation-mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The maximum allocation for every container request at the RM,\n      in MBs. Memory requests higher than this won't take effect,\n      and will get capped to this value.\n    ",
            "property_name" : "yarn.scheduler.maximum-allocation-mb",
            "property_type" : [ ],
            "property_value" : "2048",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.scheduler.minimum-allocation-mb",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The minimum allocation for every container request at the RM,\n      in MBs. Memory requests lower than this won't take effect,\n      and the specified value will get allocated at minimum.\n    ",
            "property_name" : "yarn.scheduler.minimum-allocation-mb",
            "property_type" : [ ],
            "property_depended_by": [
              {
                "property_type": "hive-site",
                "property_name": "hive.tez.container.size"
              },
              {
                "property_type": "mapred-site",
                "property_name": "mapreduce.map.memory.mb"
              }
            ],
            "property_value" : "512",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      This is default address for the timeline server to start\n      the RPC server.\n    ",
            "property_name" : "yarn.timeline-service.address",
            "property_type" : [ ],
            "property_value" : "localhost:10200",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.bind-host",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Default value is 0.0.0.0, when this is set the service will bind on all interfaces.  I think these two options (blank, \"0.0.0.0\" sans quotes) should be the two available values, with blank as the default.",
            "property_name" : "yarn.timeline-service.bind-host",
            "property_type" : [ ],
            "property_value" : "0.0.0.0",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.client.max-retries",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.timeline-service.client.max-retries",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.client.retry-interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.timeline-service.client.retry-interval-ms",
            "property_type" : [ ],
            "property_value" : "1000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.enabled",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Indicate to clients whether timeline service is enabled or not.\n      If enabled, clients will put entities and events to the timeline server.\n    ",
            "property_name" : "yarn.timeline-service.enabled",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.generic-application-history.store-class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Store class name for history store, defaulting to file system store\n    ",
            "property_name" : "yarn.timeline-service.generic-application-history.store-class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.http-authentication.simple.anonymous.allowed",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "",
            "property_name" : "yarn.timeline-service.http-authentication.simple.anonymous.allowed",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.http-authentication.type",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Defines authentication used for the Timeline Server HTTP endpoint.\n      Supported values are: simple | kerberos | $AUTHENTICATION_HANDLER_CLASSNAME\n    ",
            "property_name" : "yarn.timeline-service.http-authentication.type",
            "property_type" : [ ],
            "property_value" : "simple",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.leveldb-timeline-store.path",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Store file name for leveldb timeline store.",
            "property_name" : "yarn.timeline-service.leveldb-timeline-store.path",
            "property_type" : [ ],
            "property_value" : "/hadoop/yarn/timeline",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.leveldb-timeline-store.read-cache-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Size of read cache for uncompressed blocks for leveldb timeline store in bytes.\n    ",
            "property_name" : "yarn.timeline-service.leveldb-timeline-store.read-cache-size",
            "property_type" : [ ],
            "property_value" : "104857600",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Size of cache for recently read entity start times for leveldb timeline store in number of entities.\n    ",
            "property_name" : "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Size of cache for recently written entity start times for leveldb timeline store in number of entities.\n    ",
            "property_name" : "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size",
            "property_type" : [ ],
            "property_value" : "10000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Length of time to wait between deletion cycles of leveldb timeline store in milliseconds.",
            "property_name" : "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms",
            "property_type" : [ ],
            "property_value" : "300000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.store-class",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Store class name for timeline store\n    ",
            "property_name" : "yarn.timeline-service.store-class",
            "property_type" : [ ],
            "property_value" : "org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.ttl-enable",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      Enable age off of timeline store data.\n    ",
            "property_name" : "yarn.timeline-service.ttl-enable",
            "property_type" : [ ],
            "property_value" : "true",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.ttl-ms",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Time to live for timeline store data in milliseconds.",
            "property_name" : "yarn.timeline-service.ttl-ms",
            "property_type" : [ ],
            "property_value" : "2678400000",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.webapp.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The http address of the timeline service web application.\n    ",
            "property_name" : "yarn.timeline-service.webapp.address",
            "property_type" : [ ],
            "property_value" : "localhost:8188",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn.timeline-service.webapp.https.address",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "\n      The http address of the timeline service web application.\n    ",
            "property_name" : "yarn.timeline-service.webapp.https.address",
            "property_type" : [ ],
            "property_value" : "localhost:8190",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-site.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn_heapsize",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Max heapsize for all YARN components using a numerical value in the scale of MB",
            "property_name" : "yarn_heapsize",
            "property_type" : [ ],
            "property_value" : "1024",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn_log_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "YARN Log Dir Prefix",
            "property_name" : "yarn_log_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/log/hadoop-yarn",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn_pid_dir_prefix",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "YARN PID Dir Prefix",
            "property_name" : "yarn_pid_dir_prefix",
            "property_type" : [ ],
            "property_value" : "/var/run/hadoop-yarn",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/YARN/configurations/yarn_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "YARN User",
            "property_name" : "yarn_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "yarn",
            "service_name" : "YARN",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "yarn-env.xml"
          }
        }
      ]
    },
    {
      "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER",
      "StackServices" : {
        "service_name" : "ZOOKEEPER",
        "stack_name" : "HDP",
        "stack_version" : "2.2",
        "config_types" : {
          "zoo.cfg" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "zookeeper-env" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          },
          "zookeeper-log4j" : {
            "supports" : {
              "adding_forbidden" : "false",
              "do_not_extend" : "false",
              "final" : "false"
            }
          }
        }
      },
      "configurations" : [
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/autopurge.purgeInterval",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The time interval in hours for which the purge task has to be triggered.\n      Set to a positive integer (1 and above) to enable the auto purging.",
            "property_name" : "autopurge.purgeInterval",
            "property_type" : [ ],
            "property_value" : "24",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/autopurge.snapRetainCount",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper purge feature retains the autopurge.snapRetainCount\n      most recent snapshots and the corresponding transaction\n      logs in the dataDir and dataLogDir respectively and deletes the rest. ",
            "property_name" : "autopurge.snapRetainCount",
            "property_type" : [ ],
            "property_value" : "30",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/clientPort",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Port for running ZK Server.",
            "property_name" : "clientPort",
            "property_type" : [ ],
            "property_value" : "2181",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Custom log4j.properties",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n\n    ",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zookeeper-log4j.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/content",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "This is the jinja template for zookeeper-env.sh file",
            "property_name" : "content",
            "property_type" : [ ],
            "property_value" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}\n    ",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zookeeper-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/dataDir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Data directory for ZooKeeper.",
            "property_name" : "dataDir",
            "property_type" : [ ],
            "property_value" : "/hadoop/zookeeper",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/initLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ticks to allow for sync at Init.",
            "property_name" : "initLimit",
            "property_type" : [ ],
            "property_value" : "10",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/syncLimit",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "Ticks to allow for sync at Runtime.",
            "property_name" : "syncLimit",
            "property_type" : [ ],
            "property_value" : "5",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/tickTime",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "The length of a single tick in milliseconds, which is the basic time unit used by ZooKeeper",
            "property_name" : "tickTime",
            "property_type" : [ ],
            "property_value" : "2000",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zoo.cfg.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/zk_log_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper Log Dir",
            "property_name" : "zk_log_dir",
            "property_type" : [ ],
            "property_value" : "/var/log/zookeeper",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zookeeper-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/zk_pid_dir",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper Pid Dir",
            "property_name" : "zk_pid_dir",
            "property_type" : [ ],
            "property_value" : "/var/run/zookeeper",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zookeeper-env.xml"
          }
        },
        {
          "href" : "http://c6401:8080/api/v1/stacks/HDP/versions/2.2/services/ZOOKEEPER/configurations/zk_user",
          "StackConfigurations" : {
            "final" : "false",
            "property_description" : "ZooKeeper User.",
            "property_name" : "zk_user",
            "property_type" : [
              "USER"
            ],
            "property_value" : "zookeeper",
            "service_name" : "ZOOKEEPER",
            "stack_name" : "HDP",
            "stack_version" : "2.2",
            "type" : "zookeeper-env.xml"
          }
        }
      ]
    }
  ]
}
